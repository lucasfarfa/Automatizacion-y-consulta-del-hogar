

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Oct 29 11:13:45 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.45
    30                           ; Generated 16/11/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F628A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  008C                     	;# 
    91  008E                     	;# 
    92  0092                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009F                     	;# 
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000E                     	;# 
   111  000E                     	;# 
   112  000F                     	;# 
   113  0010                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0015                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  008C                     	;# 
   128  008E                     	;# 
   129  0092                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009F                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  008C                     	;# 
   165  008E                     	;# 
   166  0092                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009A                     	;# 
   170  009B                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009F                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  008C                     	;# 
   202  008E                     	;# 
   203  0092                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009F                     	;# 
   211  0011                     _TMR2	set	17
   212  0005                     _PORTAbits	set	5
   213  001A                     _RCREG	set	26
   214  0019                     _TXREG	set	25
   215  0012                     _T2CON	set	18
   216  0001                     _TMR0	set	1
   217  0092                     _TMR2ON	set	146
   218  00C4                     _CREN	set	196
   219  00C7                     _SPEN	set	199
   220  0065                     _RCIF	set	101
   221  0064                     _TXIF	set	100
   222  005F                     _GIE	set	95
   223  005D                     _TMR0IE	set	93
   224  00F8                     _CM0	set	248
   225  00F9                     _CM1	set	249
   226  00FA                     _CM2	set	250
   227  005A                     _TMR0IF	set	90
   228  0099                     _SPBRG	set	153
   229  0085                     _TRISAbits	set	133
   230  0086                     _TRISBbits	set	134
   231  04C5                     _TXEN	set	1221
   232  0431                     _TRISB1	set	1073
   233  0432                     _TRISB2	set	1074
   234  04C4                     _SYNC	set	1220
   235  04C2                     _BRGH	set	1218
   236  040A                     _PS2	set	1034
   237  0409                     _PS1	set	1033
   238  0408                     _PS0	set	1032
   239  040B                     _PSA	set	1035
   240  040D                     _T0CS	set	1037
   241                           
   242                           ; #config settings
   243  0000                     
   244                           	psect	cinit
   245  0011                     start_initialization:	
   246  0011                     __initialization:	
   247                           
   248                           ; Clear objects allocated to COMMON
   249  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   250  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   251  0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   252                           
   253                           ; Clear objects allocated to BANK0
   254  0014  1383               	bcf	3,7	;select IRP bank0
   255  0015  3030               	movlw	low __pbssBANK0
   256  0016  0084               	movwf	4
   257  0017  303C               	movlw	low (__pbssBANK0+12)
   258  0018  21E6               	fcall	clear_ram0
   259  0019                     end_of_initialization:	
   260                           ;End of C runtime variable initialization code
   261                           
   262  0019                     __end_of__initialization:	
   263  0019  0183               	clrf	3
   264  001A  2A00               	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMMON
   267  0076                     __pbssCOMMON:	
   268  0076                     _tickCounter:	
   269  0076                     	ds	2
   270  0078                     ActualizarMEFtemp@i:	
   271  0078                     	ds	1
   272                           
   273                           	psect	bssBANK0
   274  0030                     __pbssBANK0:	
   275  0030                     _tinicio:	
   276  0030                     	ds	2
   277  0032                     ActualizarMEFtemp@aux:	
   278  0032                     	ds	1
   279  0033                     ActualizarMEFtemp@hum:	
   280  0033                     	ds	1
   281  0034                     ActualizarMEFtemp@temp:	
   282  0034                     	ds	1
   283  0035                     _estadoActualTemp:	
   284  0035                     	ds	1
   285  0036                     ActualizarMEFtemp@data:	
   286  0036                     	ds	5
   287  003B                     ActualizarMEFtemp@res:	
   288  003B                     	ds	1
   289                           
   290                           	psect	clrtext
   291  01E6                     clear_ram0:	
   292                           ;	Called with FSR containing the base address, and
   293                           ;	W with the last address+1
   294                           
   295  01E6  0064               	clrwdt	;clear the watchdog before getting into this loop
   296  01E7                     clrloop0:	
   297  01E7  0180               	clrf	0	;clear RAM location pointed to by FSR
   298  01E8  0A84               	incf	4,f	;increment pointer
   299  01E9  0604               	xorwf	4,w	;XOR with final address
   300  01EA  1903               	btfsc	3,2	;have we reached the end yet?
   301  01EB  3400               	retlw	0	;all done for this memory range, return
   302  01EC  0604               	xorwf	4,w	;XOR again to restore value
   303  01ED  29E7               	goto	clrloop0	;do the next byte
   304                           
   305                           	psect	cstackCOMMON
   306  0070                     __pcstackCOMMON:	
   307  0070                     ?_DHT11StartSignal:	
   308  0070                     ?_DHT11CheckResponse:	
   309                           ; 1 bit 
   310                           
   311  0070                     ?_DHT11ReadByte:	
   312                           ; 1 bit 
   313                           
   314  0070                     ?_uartReadByte:	
   315                           ; 1 bit 
   316                           
   317  0070                     ?_ReadTemp:	
   318                           ; 1 bit 
   319                           
   320  0070                     ?_initApp:	
   321                           ; 1 bit 
   322                           
   323  0070                     ?_IniciarMEFtemp:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_ActualizarMEFtemp:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_RxMode:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_uartConfig:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_isr:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_isr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_uartWriteByte:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_TxMode:	
   348                           ; 1 bytes @ 0x0
   349                           
   350                           
   351                           ; 1 bytes @ 0x0
   352  0070                     	ds	5
   353  0075                     ??_IniciarMEFtemp:	
   354  0075                     ??_RxMode:	
   355                           ; 1 bytes @ 0x5
   356                           
   357  0075                     ??_uartConfig:	
   358                           ; 1 bytes @ 0x5
   359                           
   360  0075                     ??_DHT11CheckResponse:	
   361                           ; 1 bytes @ 0x5
   362                           
   363  0075                     ??_uartWriteByte:	
   364                           ; 1 bytes @ 0x5
   365                           
   366  0075                     ??_uartReadByte:	
   367                           ; 1 bytes @ 0x5
   368                           
   369  0075                     ??_tickRead:	
   370                           ; 1 bytes @ 0x5
   371                           
   372  0075                     ??_TxMode:	
   373                           ; 1 bytes @ 0x5
   374                           
   375  0075                     ??_ReadTemp:	
   376                           ; 1 bytes @ 0x5
   377                           
   378  0075                     uartWriteByte@value:	
   379                           ; 1 bytes @ 0x5
   380                           
   381                           
   382                           ; 1 bytes @ 0x5
   383  0075                     	ds	1
   384  0076                     ??_main:	
   385                           
   386                           	psect	cstackBANK0
   387  0020                     __pcstackBANK0:	
   388                           ; 1 bytes @ 0x6
   389                           
   390  0020                     ??_initApp:	
   391  0020                     ??_DHT11ReadByte:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0020                     ?_tickRead:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0020                     uartReadByte@receivedByte:	
   398                           ; 2 bytes @ 0x0
   399                           
   400                           
   401                           ; 1 bytes @ 0x0
   402  0020                     	ds	2
   403  0022                     DHT11ReadByte@data:	
   404  0022                     tickRead@aux:	
   405                           ; 1 bytes @ 0x2
   406                           
   407                           
   408                           ; 2 bytes @ 0x2
   409  0022                     	ds	1
   410  0023                     DHT11ReadByte@i:	
   411                           
   412                           ; 1 bytes @ 0x3
   413  0023                     	ds	1
   414  0024                     ??_DHT11StartSignal:	
   415                           
   416                           ; 1 bytes @ 0x4
   417  0024                     	ds	4
   418  0028                     DHT11StartSignal@tinicio:	
   419                           
   420                           ; 2 bytes @ 0x8
   421  0028                     	ds	2
   422  002A                     ReadTemp@data:	
   423                           
   424                           ; 1 bytes @ 0xA
   425  002A                     	ds	1
   426  002B                     ReadTemp@i:	
   427                           
   428                           ; 1 bytes @ 0xB
   429  002B                     	ds	1
   430  002C                     ??_ActualizarMEFtemp:	
   431                           
   432                           ; 1 bytes @ 0xC
   433  002C                     	ds	4
   434                           
   435                           	psect	maintext
   436  0200                     __pmaintext:	
   437 ;;
   438 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   439 ;;
   440 ;; *************** function _main *****************
   441 ;; Defined at:
   442 ;;		line 28 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : B00/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   456 ;;      Params:         0       0       0       0
   457 ;;      Locals:         0       0       0       0
   458 ;;      Temps:          0       0       0       0
   459 ;;      Totals:         0       0       0       0
   460 ;;Total ram usage:        0 bytes
   461 ;; Hardware stack levels required when called:    5
   462 ;; This function calls:
   463 ;;		_ActualizarMEFtemp
   464 ;;		_IniciarMEFtemp
   465 ;;		_initApp
   466 ;; This function is called by:
   467 ;;		Startup code after reset
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           
   472                           ;psect for function _main
   473  0200                     _main:	
   474                           
   475                           ;main.c: 31: initApp();
   476                           
   477                           ;incstack = 0
   478                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   479  0200  2130               	fcall	_initApp
   480                           
   481                           ;main.c: 32: IniciarMEFtemp();
   482  0201  21CB               	fcall	_IniciarMEFtemp
   483  0202                     l1464:	
   484                           ;main.c: 33: while(1){
   485                           
   486                           
   487                           ;main.c: 34: ActualizarMEFtemp();
   488  0202  201B               	fcall	_ActualizarMEFtemp
   489  0203  2A02               	goto	l1464
   490  0204                     __end_of_main:	
   491                           
   492                           	psect	text1
   493  0130                     __ptext1:	
   494 ;; *************** function _initApp *****************
   495 ;; Defined at:
   496 ;;		line 43 in file "user.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, status,2, status,0, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   510 ;;      Params:         0       0       0       0
   511 ;;      Locals:         0       0       0       0
   512 ;;      Temps:          0       2       0       0
   513 ;;      Totals:         0       2       0       0
   514 ;;Total ram usage:        2 bytes
   515 ;; Hardware stack levels used:    1
   516 ;; Hardware stack levels required when called:    2
   517 ;; This function calls:
   518 ;;		_RxMode
   519 ;;		_uartConfig
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _initApp
   527  0130                     _initApp:	
   528                           
   529                           ;user.c: 47: CM2=1;
   530                           
   531                           ;incstack = 0
   532                           ; Regs used in _initApp: [wreg+status,2+status,0+pclath+cstack]
   533  0130  1283               	bcf	3,5	;RP0=0, select bank0
   534  0131  1303               	bcf	3,6	;RP1=0, select bank0
   535  0132  151F               	bsf	31,2	;volatile
   536                           
   537                           ;user.c: 48: CM1=1;
   538  0133  149F               	bsf	31,1	;volatile
   539                           
   540                           ;user.c: 49: CM0=1;
   541  0134  141F               	bsf	31,0	;volatile
   542                           
   543                           ;user.c: 52: TRISBbits.TRISB0 = 0;
   544  0135  1683               	bsf	3,5	;RP0=1, select bank1
   545  0136  1303               	bcf	3,6	;RP1=0, select bank1
   546  0137  1006               	bcf	6,0	;volatile
   547                           
   548                           ;user.c: 53: TRISAbits.TRISA1 = 0;
   549  0138  1085               	bcf	5,1	;volatile
   550                           
   551                           ;user.c: 54: TRISAbits.TRISA2 = 0;
   552  0139  1105               	bcf	5,2	;volatile
   553                           
   554                           ;user.c: 55: RxMode();
   555  013A  21FB               	fcall	_RxMode
   556                           
   557                           ;user.c: 56: uartConfig();
   558  013B  21A7               	fcall	_uartConfig
   559                           
   560                           ;user.c: 58: _delay((unsigned long)((100)*(4000000L/4000.0)));
   561  013C  3082               	movlw	130
   562  013D  1283               	bcf	3,5	;RP0=0, select bank0
   563  013E  1303               	bcf	3,6	;RP1=0, select bank0
   564  013F  00A1               	movwf	??_initApp+1
   565  0140  30DD               	movlw	221
   566  0141  00A0               	movwf	??_initApp
   567  0142                     u897:	
   568  0142  0BA0               	decfsz	??_initApp,f
   569  0143  2942               	goto	u897
   570  0144  0BA1               	decfsz	??_initApp+1,f
   571  0145  2942               	goto	u897
   572  0146  0000               	nop
   573                           
   574                           ;user.c: 59: T0CS = 0;
   575  0147  1683               	bsf	3,5	;RP0=1, select bank1
   576  0148  1303               	bcf	3,6	;RP1=0, select bank1
   577  0149  1281               	bcf	1,5	;volatile
   578                           
   579                           ;user.c: 60: PSA = 0;
   580  014A  1181               	bcf	1,3	;volatile
   581                           
   582                           ;user.c: 63: PS0=1;
   583  014B  1401               	bsf	1,0	;volatile
   584                           
   585                           ;user.c: 64: PS1=0;
   586  014C  1081               	bcf	1,1	;volatile
   587                           
   588                           ;user.c: 65: PS2=0;
   589  014D  1101               	bcf	1,2	;volatile
   590                           
   591                           ;user.c: 75: T2CON=0;
   592  014E  1283               	bcf	3,5	;RP0=0, select bank0
   593  014F  1303               	bcf	3,6	;RP1=0, select bank0
   594  0150  0192               	clrf	18	;volatile
   595                           
   596                           ;user.c: 77: TMR0IE=1;
   597  0151  168B               	bsf	11,5	;volatile
   598                           
   599                           ;user.c: 78: GIE = 1;
   600  0152  178B               	bsf	11,7	;volatile
   601  0153  0008               	return
   602  0154                     __end_of_initApp:	
   603                           
   604                           	psect	text2
   605  01A7                     __ptext2:	
   606 ;; *************** function _uartConfig *****************
   607 ;; Defined at:
   608 ;;		line 167 in file "user.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   622 ;;      Params:         0       0       0       0
   623 ;;      Locals:         0       0       0       0
   624 ;;      Temps:          0       0       0       0
   625 ;;      Totals:         0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_initApp
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _uartConfig
   638  01A7                     _uartConfig:	
   639                           
   640                           ;user.c: 175: SPBRG = (4000000L - 9600 * 16L) / (9600 * 16L);
   641                           
   642                           ;incstack = 0
   643                           ; Regs used in _uartConfig: [wreg]
   644  01A7  3019               	movlw	25
   645  01A8  1683               	bsf	3,5	;RP0=1, select bank1
   646  01A9  1303               	bcf	3,6	;RP1=0, select bank1
   647  01AA  0099               	movwf	25	;volatile
   648                           
   649                           ;user.c: 176: BRGH = 1;
   650  01AB  1518               	bsf	24,2	;volatile
   651                           
   652                           ;user.c: 178: SYNC = 0;
   653  01AC  1218               	bcf	24,4	;volatile
   654                           
   655                           ;user.c: 179: SPEN = 1;
   656  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   657  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   658  01AF  1798               	bsf	24,7	;volatile
   659                           
   660                           ;user.c: 180: TRISB2=0;
   661  01B0  1683               	bsf	3,5	;RP0=1, select bank1
   662  01B1  1303               	bcf	3,6	;RP1=0, select bank1
   663  01B2  1106               	bcf	6,2	;volatile
   664                           
   665                           ;user.c: 181: TRISB1=1;
   666  01B3  1486               	bsf	6,1	;volatile
   667                           
   668                           ;user.c: 182: CREN = 1;
   669  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   670  01B5  1303               	bcf	3,6	;RP1=0, select bank0
   671  01B6  1618               	bsf	24,4	;volatile
   672                           
   673                           ;user.c: 183: TXEN = 1;
   674  01B7  1683               	bsf	3,5	;RP0=1, select bank1
   675  01B8  1303               	bcf	3,6	;RP1=0, select bank1
   676  01B9  1698               	bsf	24,5	;volatile
   677  01BA  0008               	return
   678  01BB                     __end_of_uartConfig:	
   679                           
   680                           	psect	text3
   681  01CB                     __ptext3:	
   682 ;; *************** function _IniciarMEFtemp *****************
   683 ;; Defined at:
   684 ;;		line 213 in file "user.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, pclath, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   698 ;;      Params:         0       0       0       0
   699 ;;      Locals:         0       0       0       0
   700 ;;      Temps:          1       0       0       0
   701 ;;      Totals:         1       0       0       0
   702 ;;Total ram usage:        1 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    2
   705 ;; This function calls:
   706 ;;		_tickRead
   707 ;; This function is called by:
   708 ;;		_main
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           
   713                           ;psect for function _IniciarMEFtemp
   714  01CB                     _IniciarMEFtemp:	
   715                           
   716                           ;user.c: 214: estadoActualTemp=MEASURING;
   717                           
   718                           ;incstack = 0
   719                           ; Regs used in _IniciarMEFtemp: [wreg+pclath+cstack]
   720  01CB  3002               	movlw	2
   721  01CC  00F5               	movwf	??_IniciarMEFtemp
   722  01CD  0875               	movf	??_IniciarMEFtemp,w
   723  01CE  1283               	bcf	3,5	;RP0=0, select bank0
   724  01CF  1303               	bcf	3,6	;RP1=0, select bank0
   725  01D0  00B5               	movwf	_estadoActualTemp
   726                           
   727                           ;user.c: 215: tinicio=tickRead();
   728  01D1  21D9               	fcall	_tickRead
   729  01D2  1283               	bcf	3,5	;RP0=0, select bank0
   730  01D3  1303               	bcf	3,6	;RP1=0, select bank0
   731  01D4  0821               	movf	?_tickRead+1,w
   732  01D5  00B1               	movwf	_tinicio+1
   733  01D6  0820               	movf	?_tickRead,w
   734  01D7  00B0               	movwf	_tinicio
   735  01D8  0008               	return
   736  01D9                     __end_of_IniciarMEFtemp:	
   737                           
   738                           	psect	text4
   739  001B                     __ptext4:	
   740 ;; *************** function _ActualizarMEFtemp *****************
   741 ;; Defined at:
   742 ;;		line 217 in file "user.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   756 ;;      Params:         0       0       0       0
   757 ;;      Locals:         0       0       0       0
   758 ;;      Temps:          0       4       0       0
   759 ;;      Totals:         0       4       0       0
   760 ;;Total ram usage:        4 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    4
   763 ;; This function calls:
   764 ;;		_ReadTemp
   765 ;;		_RxMode
   766 ;;		_TxMode
   767 ;;		_tickRead
   768 ;;		_uartReadByte
   769 ;;		_uartWriteByte
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _ActualizarMEFtemp
   777  001B                     _ActualizarMEFtemp:	
   778                           
   779                           ;user.c: 218: static uint8_t i,res;
   780                           ;user.c: 219: static uint8_t temp,data[5],hum,aux;
   781                           ;user.c: 220: switch (estadoActualTemp) {
   782                           
   783                           ;incstack = 0
   784                           ; Regs used in _ActualizarMEFtemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   785  001B  28BB               	goto	l1456
   786  001C                     l1386:	
   787                           ;user.c: 221: case IDDLE:
   788                           
   789                           
   790                           ;user.c: 222: if(tickRead()-tinicio>5000){
   791  001C  1283               	bcf	3,5	;RP0=0, select bank0
   792  001D  1303               	bcf	3,6	;RP1=0, select bank0
   793  001E  0930               	comf	_tinicio,w
   794  001F  00AC               	movwf	??_ActualizarMEFtemp
   795  0020  0931               	comf	_tinicio+1,w
   796  0021  00AD               	movwf	??_ActualizarMEFtemp+1
   797  0022  0AAC               	incf	??_ActualizarMEFtemp,f
   798  0023  1903               	skipnz
   799  0024  0AAD               	incf	??_ActualizarMEFtemp+1,f
   800  0025  21D9               	fcall	_tickRead
   801  0026  1283               	bcf	3,5	;RP0=0, select bank0
   802  0027  1303               	bcf	3,6	;RP1=0, select bank0
   803  0028  082C               	movf	??_ActualizarMEFtemp,w
   804  0029  0720               	addwf	?_tickRead,w
   805  002A  00AE               	movwf	??_ActualizarMEFtemp+2
   806  002B  082D               	movf	??_ActualizarMEFtemp+1,w
   807  002C  1803               	skipnc
   808  002D  0A2D               	incf	??_ActualizarMEFtemp+1,w
   809  002E  0721               	addwf	?_tickRead+1,w
   810  002F  00AF               	movwf	??_ActualizarMEFtemp+3
   811  0030  3013               	movlw	19
   812  0031  022F               	subwf	??_ActualizarMEFtemp+3,w
   813  0032  3089               	movlw	137
   814  0033  1903               	skipnz
   815  0034  022E               	subwf	??_ActualizarMEFtemp+2,w
   816  0035  1C03               	skipc
   817  0036  2843               	goto	l174
   818                           
   819                           ;user.c: 223: estadoActualTemp=MEASURING;
   820  0037  3002               	movlw	2
   821  0038  00AC               	movwf	??_ActualizarMEFtemp
   822  0039  082C               	movf	??_ActualizarMEFtemp,w
   823  003A  00B5               	movwf	_estadoActualTemp
   824                           
   825                           ;user.c: 224: tinicio=tickRead();
   826  003B  21D9               	fcall	_tickRead
   827  003C  1283               	bcf	3,5	;RP0=0, select bank0
   828  003D  1303               	bcf	3,6	;RP1=0, select bank0
   829  003E  0821               	movf	?_tickRead+1,w
   830  003F  00B1               	movwf	_tinicio+1
   831  0040  0820               	movf	?_tickRead,w
   832  0041  00B0               	movwf	_tinicio
   833                           
   834                           ;user.c: 225: }
   835  0042  0008               	return
   836  0043                     l174:	
   837                           
   838                           ;user.c: 226: else{
   839                           ;user.c: 227: estadoActualTemp=UART_RX;
   840  0043  01B5               	clrf	_estadoActualTemp
   841  0044  0AB5               	incf	_estadoActualTemp,f
   842                           
   843                           ;user.c: 228: }
   844                           ;user.c: 229: break;
   845  0045  0008               	return
   846  0046                     l1392:	
   847                           ;user.c: 230: case UART_RX:
   848                           
   849                           
   850                           ;user.c: 231: RxMode();
   851  0046  21FB               	fcall	_RxMode
   852                           
   853                           ;user.c: 232: if (uartReadByte(&res)) {
   854  0047  303B               	movlw	(low (ActualizarMEFtemp@res| 0))& (0+255)
   855  0048  21BB               	fcall	_uartReadByte
   856  0049  1C03               	btfss	3,0
   857  004A  2863               	goto	l1412
   858                           
   859                           ;user.c: 233: if (res == 0x95) {
   860  004B  3095               	movlw	149
   861  004C  1283               	bcf	3,5	;RP0=0, select bank0
   862  004D  1303               	bcf	3,6	;RP1=0, select bank0
   863  004E  063B               	xorwf	ActualizarMEFtemp@res,w
   864  004F  1D03               	btfss	3,2
   865  0050  2858               	goto	l1404
   866                           
   867                           ;user.c: 234: aux=0x95;
   868  0051  3095               	movlw	149
   869  0052  00AC               	movwf	??_ActualizarMEFtemp
   870  0053  082C               	movf	??_ActualizarMEFtemp,w
   871  0054  00B2               	movwf	ActualizarMEFtemp@aux
   872                           
   873                           ;user.c: 235: res = 0;
   874  0055  01BB               	clrf	ActualizarMEFtemp@res
   875                           
   876                           ;user.c: 236: estadoActualTemp = UART_TX;
   877  0056  01B5               	clrf	_estadoActualTemp
   878                           
   879                           ;user.c: 237: }
   880  0057  0008               	return
   881  0058                     l1404:	
   882                           
   883                           ;user.c: 238: else if(res == 0x96){
   884  0058  3096               	movlw	150
   885  0059  063B               	xorwf	ActualizarMEFtemp@res,w
   886  005A  1D03               	btfss	3,2
   887  005B  0008               	return
   888                           
   889                           ;user.c: 239: res=0;
   890  005C  01BB               	clrf	ActualizarMEFtemp@res
   891                           
   892                           ;user.c: 240: aux=0x96;
   893  005D  3096               	movlw	150
   894  005E  00AC               	movwf	??_ActualizarMEFtemp
   895  005F  082C               	movf	??_ActualizarMEFtemp,w
   896  0060  00B2               	movwf	ActualizarMEFtemp@aux
   897                           
   898                           ;user.c: 241: estadoActualTemp = UART_TX;
   899  0061  01B5               	clrf	_estadoActualTemp
   900                           
   901                           ;user.c: 243: }
   902                           ;user.c: 244: }
   903  0062  0008               	return
   904  0063                     l1412:	
   905                           
   906                           ;user.c: 245: else{
   907                           ;user.c: 246: estadoActualTemp=IDDLE;
   908  0063  3003               	movlw	3
   909  0064  1283               	bcf	3,5	;RP0=0, select bank0
   910  0065  1303               	bcf	3,6	;RP1=0, select bank0
   911  0066  00AC               	movwf	??_ActualizarMEFtemp
   912  0067  082C               	movf	??_ActualizarMEFtemp,w
   913  0068  00B5               	movwf	_estadoActualTemp
   914                           
   915                           ;user.c: 247: }
   916                           ;user.c: 248: break;
   917  0069  0008               	return
   918  006A                     l1414:	
   919                           ;user.c: 250: case UART_TX:
   920                           
   921                           
   922                           ;user.c: 251: if (aux == 0x95) {
   923  006A  3095               	movlw	149
   924  006B  0632               	xorwf	ActualizarMEFtemp@aux,w
   925  006C  1D03               	btfss	3,2
   926  006D  2887               	goto	l1430
   927                           
   928                           ;user.c: 252: TxMode();
   929  006E  21F6               	fcall	_TxMode
   930                           
   931                           ;user.c: 254: uartWriteByte(temp);
   932  006F  1283               	bcf	3,5	;RP0=0, select bank0
   933  0070  1303               	bcf	3,6	;RP1=0, select bank0
   934  0071  0834               	movf	ActualizarMEFtemp@temp,w
   935  0072  21EE               	fcall	_uartWriteByte
   936  0073                     l1420:	
   937                           ;user.c: 255: while (!uartReadByte(&res));
   938                           
   939  0073  303B               	movlw	(low (ActualizarMEFtemp@res| 0))& (0+255)
   940  0074  21BB               	fcall	_uartReadByte
   941  0075  1C03               	btfss	3,0
   942  0076  2873               	goto	l1420
   943                           
   944                           ;user.c: 256: if (res == temp) {
   945  0077  1283               	bcf	3,5	;RP0=0, select bank0
   946  0078  1303               	bcf	3,6	;RP1=0, select bank0
   947  0079  083B               	movf	ActualizarMEFtemp@res,w
   948  007A  0634               	xorwf	ActualizarMEFtemp@temp,w
   949  007B  1D03               	skipz
   950  007C  2885               	goto	l1428
   951                           
   952                           ;user.c: 257: RxMode();
   953  007D  21FB               	fcall	_RxMode
   954                           
   955                           ;user.c: 258: estadoActualTemp = IDDLE;
   956  007E  3003               	movlw	3
   957  007F  1283               	bcf	3,5	;RP0=0, select bank0
   958  0080  1303               	bcf	3,6	;RP1=0, select bank0
   959  0081  00AC               	movwf	??_ActualizarMEFtemp
   960  0082  082C               	movf	??_ActualizarMEFtemp,w
   961  0083  00B5               	movwf	_estadoActualTemp
   962                           
   963                           ;user.c: 259: } else {
   964  0084  0008               	return
   965  0085                     l1428:	
   966                           
   967                           ;user.c: 260: estadoActualTemp = UART_TX;
   968  0085  01B5               	clrf	_estadoActualTemp
   969                           
   970                           ;user.c: 261: }
   971                           ;user.c: 262: } else if(aux==0x96){
   972  0086  0008               	return
   973  0087                     l1430:	
   974  0087  3096               	movlw	150
   975  0088  0632               	xorwf	ActualizarMEFtemp@aux,w
   976  0089  1D03               	btfss	3,2
   977  008A  0008               	return
   978                           
   979                           ;user.c: 263: TxMode();
   980  008B  21F6               	fcall	_TxMode
   981                           
   982                           ;user.c: 264: uartWriteByte(hum);
   983  008C  1283               	bcf	3,5	;RP0=0, select bank0
   984  008D  1303               	bcf	3,6	;RP1=0, select bank0
   985  008E  0833               	movf	ActualizarMEFtemp@hum,w
   986  008F  21EE               	fcall	_uartWriteByte
   987  0090                     l1436:	
   988                           ;user.c: 265: while (!uartReadByte(&res));
   989                           
   990  0090  303B               	movlw	(low (ActualizarMEFtemp@res| 0))& (0+255)
   991  0091  21BB               	fcall	_uartReadByte
   992  0092  1C03               	btfss	3,0
   993  0093  2890               	goto	l1436
   994                           
   995                           ;user.c: 266: if (res == hum) {
   996  0094  1283               	bcf	3,5	;RP0=0, select bank0
   997  0095  1303               	bcf	3,6	;RP1=0, select bank0
   998  0096  083B               	movf	ActualizarMEFtemp@res,w
   999  0097  0633               	xorwf	ActualizarMEFtemp@hum,w
  1000  0098  1D03               	skipz
  1001  0099  28A2               	goto	l1444
  1002                           
  1003                           ;user.c: 267: RxMode();
  1004  009A  21FB               	fcall	_RxMode
  1005                           
  1006                           ;user.c: 268: estadoActualTemp = IDDLE;
  1007  009B  3003               	movlw	3
  1008  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1009  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1010  009E  00AC               	movwf	??_ActualizarMEFtemp
  1011  009F  082C               	movf	??_ActualizarMEFtemp,w
  1012  00A0  00B5               	movwf	_estadoActualTemp
  1013                           
  1014                           ;user.c: 269: } else {
  1015  00A1  0008               	return
  1016  00A2                     l1444:	
  1017                           
  1018                           ;user.c: 270: estadoActualTemp = UART_TX;
  1019  00A2  01B5               	clrf	_estadoActualTemp
  1020                           
  1021                           ;user.c: 271: }
  1022                           ;user.c: 272: }
  1023                           ;user.c: 275: break;
  1024  00A3  0008               	return
  1025  00A4                     l197:	
  1026                           ;user.c: 276: case MEASURING:
  1027                           
  1028                           
  1029                           ;user.c: 277: SPEN=0;
  1030  00A4  1398               	bcf	24,7	;volatile
  1031                           
  1032                           ;user.c: 278: CREN=0;
  1033  00A5  1218               	bcf	24,4	;volatile
  1034                           
  1035                           ;user.c: 279: if(ReadTemp(data)){
  1036  00A6  3036               	movlw	(low (ActualizarMEFtemp@data| 0))& (0+255)
  1037  00A7  2154               	fcall	_ReadTemp
  1038  00A8  1C03               	btfss	3,0
  1039  00A9  0008               	return
  1040                           
  1041                           ;user.c: 280: temp=data[2];
  1042  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1043  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1044  00AC  0838               	movf	ActualizarMEFtemp@data+2,w
  1045  00AD  00AC               	movwf	??_ActualizarMEFtemp
  1046  00AE  082C               	movf	??_ActualizarMEFtemp,w
  1047  00AF  00B4               	movwf	ActualizarMEFtemp@temp
  1048                           
  1049                           ;user.c: 281: hum=data[0];
  1050  00B0  0836               	movf	ActualizarMEFtemp@data,w
  1051  00B1  00AC               	movwf	??_ActualizarMEFtemp
  1052  00B2  082C               	movf	??_ActualizarMEFtemp,w
  1053  00B3  00B3               	movwf	ActualizarMEFtemp@hum
  1054                           
  1055                           ;user.c: 282: SPEN=1;
  1056  00B4  1798               	bsf	24,7	;volatile
  1057                           
  1058                           ;user.c: 283: CREN=1;
  1059  00B5  1618               	bsf	24,4	;volatile
  1060                           
  1061                           ;user.c: 284: estadoActualTemp=IDDLE;
  1062  00B6  3003               	movlw	3
  1063  00B7  00AC               	movwf	??_ActualizarMEFtemp
  1064  00B8  082C               	movf	??_ActualizarMEFtemp,w
  1065  00B9  00B5               	movwf	_estadoActualTemp
  1066                           
  1067                           ;user.c: 287: }
  1068                           
  1069                           ;user.c: 285: }
  1070                           ;user.c: 286: break;
  1071  00BA  0008               	return
  1072  00BB                     l1456:	
  1073  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1074  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1075  00BD  0835               	movf	_estadoActualTemp,w
  1076                           
  1077                           ; Switch size 1, requested type "space"
  1078                           ; Number of cases is 4, Range of values is 0 to 3
  1079                           ; switch strategies available:
  1080                           ; Name         Instructions Cycles
  1081                           ; direct_byte           10     6 (fixed)
  1082                           ; simple_byte           13     7 (average)
  1083                           ; jumptable            260     6 (fixed)
  1084                           ;	Chosen strategy is direct_byte
  1085  00BE  0084               	movwf	4
  1086  00BF  3004               	movlw	4
  1087  00C0  0204               	subwf	4,w
  1088  00C1  1803               	skipnc
  1089  00C2  0008               	return
  1090  00C3  3002               	movlw	high S1486
  1091  00C4  008A               	movwf	10
  1092  00C5  3004               	movlw	low S1486
  1093  00C6  0704               	addwf	4,w
  1094  00C7  0082               	movwf	2
  1095  00C8  0008               	return
  1096  00C9                     __end_of_ActualizarMEFtemp:	
  1097                           
  1098                           	psect	swtext1
  1099  0204                     __pswtext1:	
  1100  0204                     S1486:	
  1101  0204  286A               	ljmp	l1414
  1102  0205  2846               	ljmp	l1392
  1103  0206  28A4               	ljmp	l197
  1104  0207  281C               	ljmp	l1386
  1105                           
  1106                           	psect	text5
  1107  01EE                     __ptext5:	
  1108 ;; *************** function _uartWriteByte *****************
  1109 ;; Defined at:
  1110 ;;		line 106 in file "user.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  value           1    wreg     unsigned char 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  value           1    5[COMMON] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1124 ;;      Params:         0       0       0       0
  1125 ;;      Locals:         1       0       0       0
  1126 ;;      Temps:          0       0       0       0
  1127 ;;      Totals:         1       0       0       0
  1128 ;;Total ram usage:        1 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    1
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_ActualizarMEFtemp
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function _uartWriteByte
  1140  01EE                     _uartWriteByte:	
  1141                           
  1142                           ;incstack = 0
  1143                           ; Regs used in _uartWriteByte: [wreg]
  1144                           ;uartWriteByte@value stored from wreg
  1145  01EE  00F5               	movwf	uartWriteByte@value
  1146  01EF                     l108:	
  1147                           ;user.c: 108: continue;
  1148                           
  1149                           ;user.c: 107: while (!TXIF)
  1150                           
  1151  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1152  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1153  01F1  1E0C               	btfss	12,4	;volatile
  1154  01F2  29EF               	goto	l108
  1155                           
  1156                           ;user.c: 109: TXREG = value;
  1157  01F3  0875               	movf	uartWriteByte@value,w
  1158  01F4  0099               	movwf	25	;volatile
  1159  01F5  0008               	return
  1160  01F6                     __end_of_uartWriteByte:	
  1161                           
  1162                           	psect	text6
  1163  01BB                     __ptext6:	
  1164 ;; *************** function _uartReadByte *****************
  1165 ;; Defined at:
  1166 ;;		line 128 in file "user.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  receivedByte    1    wreg     PTR unsigned char 
  1169 ;;		 -> ActualizarMEFtemp@res(1), 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  receivedByte    1    0[BANK0 ] PTR unsigned char 
  1172 ;;		 -> ActualizarMEFtemp@res(1), 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;		None               void
  1175 ;; Registers used:
  1176 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1182 ;;      Params:         0       0       0       0
  1183 ;;      Locals:         0       1       0       0
  1184 ;;      Temps:          1       0       0       0
  1185 ;;      Totals:         1       1       0       0
  1186 ;;Total ram usage:        2 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    1
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_ActualizarMEFtemp
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function _uartReadByte
  1198  01BB                     _uartReadByte:	
  1199                           
  1200                           ;incstack = 0
  1201                           ; Regs used in _uartReadByte: [wreg-fsr0h+status,2+status,0]
  1202                           ;uartReadByte@receivedByte stored from wreg
  1203  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1204  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1205  01BD  00A0               	movwf	uartReadByte@receivedByte
  1206                           
  1207                           ;user.c: 129: if ( RCIF ){
  1208  01BE  1E8C               	btfss	12,5	;volatile
  1209  01BF  29C9               	goto	l1322
  1210                           
  1211                           ;user.c: 130: *receivedByte = RCREG;
  1212  01C0  081A               	movf	26,w	;volatile
  1213  01C1  00F5               	movwf	??_uartReadByte
  1214  01C2  0820               	movf	uartReadByte@receivedByte,w
  1215  01C3  0084               	movwf	4
  1216  01C4  0875               	movf	??_uartReadByte,w
  1217  01C5  1383               	bcf	3,7	;select IRP bank0
  1218  01C6  0080               	movwf	0
  1219                           
  1220                           ;user.c: 131: return 1;
  1221  01C7  1403               	setc
  1222  01C8  0008               	return
  1223  01C9                     l1322:	
  1224                           
  1225                           ;user.c: 132: }
  1226                           ;user.c: 133: return 0;
  1227  01C9  1003               	clrc
  1228  01CA  0008               	return
  1229  01CB                     __end_of_uartReadByte:	
  1230                           
  1231                           	psect	text7
  1232  01F6                     __ptext7:	
  1233 ;; *************** function _TxMode *****************
  1234 ;; Defined at:
  1235 ;;		line 186 in file "user.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		None
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1249 ;;      Params:         0       0       0       0
  1250 ;;      Locals:         0       0       0       0
  1251 ;;      Temps:          0       0       0       0
  1252 ;;      Totals:         0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_ActualizarMEFtemp
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           
  1264                           ;psect for function _TxMode
  1265  01F6                     _TxMode:	
  1266                           
  1267                           ;user.c: 187: PORTAbits.RA2=0;
  1268                           
  1269                           ;incstack = 0
  1270                           ; Regs used in _TxMode: []
  1271  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1272  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1273  01F8  1105               	bcf	5,2	;volatile
  1274                           
  1275                           ;user.c: 188: PORTAbits.RA1=1;
  1276  01F9  1485               	bsf	5,1	;volatile
  1277  01FA  0008               	return
  1278  01FB                     __end_of_TxMode:	
  1279                           
  1280                           	psect	text8
  1281  01FB                     __ptext8:	
  1282 ;; *************** function _RxMode *****************
  1283 ;; Defined at:
  1284 ;;		line 191 in file "user.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		None
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1298 ;;      Params:         0       0       0       0
  1299 ;;      Locals:         0       0       0       0
  1300 ;;      Temps:          0       0       0       0
  1301 ;;      Totals:         0       0       0       0
  1302 ;;Total ram usage:        0 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    1
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_initApp
  1309 ;;		_ActualizarMEFtemp
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function _RxMode
  1315  01FB                     _RxMode:	
  1316                           
  1317                           ;user.c: 192: PORTAbits.RA2=0;
  1318                           
  1319                           ;incstack = 0
  1320                           ; Regs used in _RxMode: []
  1321  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1322  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1323  01FD  1105               	bcf	5,2	;volatile
  1324                           
  1325                           ;user.c: 193: PORTAbits.RA1=0;
  1326  01FE  1085               	bcf	5,1	;volatile
  1327  01FF  0008               	return
  1328  0200                     __end_of_RxMode:	
  1329                           
  1330                           	psect	text9
  1331  0154                     __ptext9:	
  1332 ;; *************** function _ReadTemp *****************
  1333 ;; Defined at:
  1334 ;;		line 196 in file "user.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  data            1    wreg     PTR unsigned char 
  1337 ;;		 -> ActualizarMEFtemp@data(5), 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  data            1   10[BANK0 ] PTR unsigned char 
  1340 ;;		 -> ActualizarMEFtemp@data(5), 
  1341 ;;  i               1   11[BANK0 ] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;		None               void
  1344 ;; Registers used:
  1345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1351 ;;      Params:         0       0       0       0
  1352 ;;      Locals:         0       2       0       0
  1353 ;;      Temps:          1       0       0       0
  1354 ;;      Totals:         1       2       0       0
  1355 ;;Total ram usage:        3 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    3
  1358 ;; This function calls:
  1359 ;;		_DHT11CheckResponse
  1360 ;;		_DHT11ReadByte
  1361 ;;		_DHT11StartSignal
  1362 ;; This function is called by:
  1363 ;;		_ActualizarMEFtemp
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           
  1368                           ;psect for function _ReadTemp
  1369  0154                     _ReadTemp:	
  1370                           
  1371                           ;incstack = 0
  1372                           ; Regs used in _ReadTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1373                           ;ReadTemp@data stored from wreg
  1374  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0155  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0156  00AA               	movwf	ReadTemp@data
  1377                           
  1378                           ;user.c: 197: uint8_t i;
  1379                           ;user.c: 198: if (DHT11StartSignal()) {
  1380  0157  20C9               	fcall	_DHT11StartSignal
  1381  0158  1C03               	btfss	3,0
  1382  0159  0008               	return
  1383                           
  1384                           ;user.c: 199: if (DHT11CheckResponse()) {
  1385  015A  2177               	fcall	_DHT11CheckResponse
  1386  015B  1C03               	btfss	3,0
  1387  015C  0008               	return
  1388                           
  1389                           ;user.c: 201: GIE = 0;
  1390  015D  138B               	bcf	11,7	;volatile
  1391                           
  1392                           ;user.c: 202: for (i = 0; i < 5; i++) {
  1393  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1394  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1395  0160  01AB               	clrf	ReadTemp@i
  1396  0161  3005               	movlw	5
  1397  0162  022B               	subwf	ReadTemp@i,w
  1398  0163  1803               	btfsc	3,0
  1399  0164  2974               	goto	l151
  1400  0165                     l1338:	
  1401                           
  1402                           ;user.c: 203: DHT11ReadByte(&data[4 - i]);
  1403  0165  032B               	decf	ReadTemp@i,w
  1404  0166  3AFF               	xorlw	255
  1405  0167  3E04               	addlw	4
  1406  0168  072A               	addwf	ReadTemp@data,w
  1407  0169  2101               	fcall	_DHT11ReadByte
  1408  016A  3001               	movlw	1
  1409  016B  00F5               	movwf	??_ReadTemp
  1410  016C  0875               	movf	??_ReadTemp,w
  1411  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1412  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1413  016F  07AB               	addwf	ReadTemp@i,f
  1414  0170  3005               	movlw	5
  1415  0171  022B               	subwf	ReadTemp@i,w
  1416  0172  1C03               	skipc
  1417  0173  2965               	goto	l1338
  1418  0174                     l151:	
  1419                           
  1420                           ;user.c: 204: }
  1421                           ;user.c: 205: GIE = 1;
  1422  0174  178B               	bsf	11,7	;volatile
  1423                           
  1424                           ;user.c: 206: return 1;
  1425  0175  1403               	setc
  1426                           
  1427                           ;user.c: 207: }
  1428  0176  0008               	return
  1429  0177                     __end_of_ReadTemp:	
  1430                           ;user.c: 210: else return 0;
  1431                           
  1432                           ;user.c: 209: }
  1433                           
  1434                           ;user.c: 208: else return 0;
  1435                           
  1436                           
  1437                           	psect	text10
  1438  00C9                     __ptext10:	
  1439 ;; *************** function _DHT11StartSignal *****************
  1440 ;; Defined at:
  1441 ;;		line 16 in file "DHT11.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  tinicio         2    8[BANK0 ] unsigned int 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;		None               void
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0, pclath, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1455 ;;      Params:         0       0       0       0
  1456 ;;      Locals:         0       2       0       0
  1457 ;;      Temps:          0       4       0       0
  1458 ;;      Totals:         0       6       0       0
  1459 ;;Total ram usage:        6 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    2
  1462 ;; This function calls:
  1463 ;;		_tickRead
  1464 ;; This function is called by:
  1465 ;;		_ReadTemp
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _DHT11StartSignal
  1471  00C9                     _DHT11StartSignal:	
  1472                           
  1473                           ;DHT11.c: 17: tick_t tinicio;
  1474                           ;DHT11.c: 18: TRISAbits.TRISA0 = 0;
  1475                           
  1476                           ;incstack = 0
  1477                           ; Regs used in _DHT11StartSignal: [wreg+status,2+status,0+pclath+cstack]
  1478  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  1479  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  1480  00CB  1005               	bcf	5,0	;volatile
  1481                           
  1482                           ;DHT11.c: 19: PORTAbits.RA0 = 0;
  1483  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1484  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1485  00CE  1005               	bcf	5,0	;volatile
  1486                           
  1487                           ;DHT11.c: 20: tinicio= tickRead();
  1488  00CF  21D9               	fcall	_tickRead
  1489  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1490  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1491  00D2  0821               	movf	?_tickRead+1,w
  1492  00D3  00A9               	movwf	DHT11StartSignal@tinicio+1
  1493  00D4  0820               	movf	?_tickRead,w
  1494  00D5  00A8               	movwf	DHT11StartSignal@tinicio
  1495  00D6                     l1278:	
  1496                           ;DHT11.c: 21: while(tickRead()-tinicio<19);
  1497                           
  1498  00D6  0928               	comf	DHT11StartSignal@tinicio,w
  1499  00D7  00A4               	movwf	??_DHT11StartSignal
  1500  00D8  0929               	comf	DHT11StartSignal@tinicio+1,w
  1501  00D9  00A5               	movwf	??_DHT11StartSignal+1
  1502  00DA  0AA4               	incf	??_DHT11StartSignal,f
  1503  00DB  1903               	skipnz
  1504  00DC  0AA5               	incf	??_DHT11StartSignal+1,f
  1505  00DD  21D9               	fcall	_tickRead
  1506  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1507  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1508  00E0  0824               	movf	??_DHT11StartSignal,w
  1509  00E1  0720               	addwf	?_tickRead,w
  1510  00E2  00A6               	movwf	??_DHT11StartSignal+2
  1511  00E3  0825               	movf	??_DHT11StartSignal+1,w
  1512  00E4  1803               	skipnc
  1513  00E5  0A25               	incf	??_DHT11StartSignal+1,w
  1514  00E6  0721               	addwf	?_tickRead+1,w
  1515  00E7  00A7               	movwf	??_DHT11StartSignal+3
  1516  00E8  3000               	movlw	0
  1517  00E9  0227               	subwf	??_DHT11StartSignal+3,w
  1518  00EA  3013               	movlw	19
  1519  00EB  1903               	skipnz
  1520  00EC  0226               	subwf	??_DHT11StartSignal+2,w
  1521  00ED  1C03               	skipc
  1522  00EE  28D6               	goto	l1278
  1523                           
  1524                           ;DHT11.c: 22: TRISAbits.TRISA0 = 1;
  1525  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1526  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1527  00F1  1405               	bsf	5,0	;volatile
  1528                           
  1529                           ;DHT11.c: 23: _delay((unsigned long)((30)*(4000000L/4000000.0)));
  1530  00F2  3009               	movlw	9
  1531  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1532  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1533  00F5  00A4               	movwf	??_DHT11StartSignal
  1534  00F6                     u907:	
  1535  00F6  0BA4               	decfsz	??_DHT11StartSignal,f
  1536  00F7  28F6               	goto	u907
  1537  00F8  0000               	nop
  1538                           
  1539                           ;DHT11.c: 24: if(PORTAbits.RA0==0){
  1540  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1541  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1542  00FB  1805               	btfsc	5,0	;volatile
  1543  00FC  28FF               	goto	l1290
  1544                           
  1545                           ;DHT11.c: 25: return 1;
  1546  00FD  1403               	setc
  1547                           
  1548                           ;DHT11.c: 26: }
  1549  00FE  0008               	return
  1550  00FF                     l1290:	
  1551                           
  1552                           ;DHT11.c: 27: else
  1553                           ;DHT11.c: 28: return 0;
  1554  00FF  1003               	clrc
  1555  0100  0008               	return
  1556  0101                     __end_of_DHT11StartSignal:	
  1557                           
  1558                           	psect	text11
  1559  01D9                     __ptext11:	
  1560 ;; *************** function _tickRead *****************
  1561 ;; Defined at:
  1562 ;;		line 152 in file "user.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  aux             2    2[BANK0 ] unsigned int 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  2    0[BANK0 ] unsigned int 
  1569 ;; Registers used:
  1570 ;;		wreg
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1576 ;;      Params:         0       2       0       0
  1577 ;;      Locals:         0       2       0       0
  1578 ;;      Temps:          0       0       0       0
  1579 ;;      Totals:         0       4       0       0
  1580 ;;Total ram usage:        4 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    1
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_IniciarMEFtemp
  1587 ;;		_ActualizarMEFtemp
  1588 ;;		_DHT11StartSignal
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           
  1593                           ;psect for function _tickRead
  1594  01D9                     _tickRead:	
  1595                           
  1596                           ;user.c: 153: tick_t aux;
  1597                           ;user.c: 154: GIE = 0;
  1598                           
  1599                           ;incstack = 0
  1600                           ; Regs used in _tickRead: [wreg]
  1601  01D9  138B               	bcf	11,7	;volatile
  1602                           
  1603                           ;user.c: 155: aux = tickCounter;
  1604  01DA  0877               	movf	_tickCounter+1,w	;volatile
  1605  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1606  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1607  01DD  00A3               	movwf	tickRead@aux+1
  1608  01DE  0876               	movf	_tickCounter,w	;volatile
  1609  01DF  00A2               	movwf	tickRead@aux
  1610                           
  1611                           ;user.c: 156: GIE = 1;
  1612  01E0  178B               	bsf	11,7	;volatile
  1613                           
  1614                           ;user.c: 157: return aux;
  1615  01E1  0823               	movf	tickRead@aux+1,w
  1616  01E2  00A1               	movwf	?_tickRead+1
  1617  01E3  0822               	movf	tickRead@aux,w
  1618  01E4  00A0               	movwf	?_tickRead
  1619  01E5  0008               	return
  1620  01E6                     __end_of_tickRead:	
  1621                           
  1622                           	psect	text12
  1623  0101                     __ptext12:	
  1624 ;; *************** function _DHT11ReadByte *****************
  1625 ;; Defined at:
  1626 ;;		line 49 in file "DHT11.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  data            1    wreg     PTR unsigned char 
  1629 ;;		 -> ActualizarMEFtemp@data(5), 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  data            1    2[BANK0 ] PTR unsigned char 
  1632 ;;		 -> ActualizarMEFtemp@data(5), 
  1633 ;;  i               1    3[BANK0 ] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;		None               void
  1636 ;; Registers used:
  1637 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1643 ;;      Params:         0       0       0       0
  1644 ;;      Locals:         0       2       0       0
  1645 ;;      Temps:          0       2       0       0
  1646 ;;      Totals:         0       4       0       0
  1647 ;;Total ram usage:        4 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_ReadTemp
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           
  1658                           ;psect for function _DHT11ReadByte
  1659  0101                     _DHT11ReadByte:	
  1660                           
  1661                           ;incstack = 0
  1662                           ; Regs used in _DHT11ReadByte: [wreg-fsr0h+status,2+status,0]
  1663                           ;DHT11ReadByte@data stored from wreg
  1664  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0103  00A2               	movwf	DHT11ReadByte@data
  1667                           
  1668                           ;DHT11.c: 50: *data = 0;
  1669  0104  0822               	movf	DHT11ReadByte@data,w
  1670  0105  0084               	movwf	4
  1671  0106  1383               	bcf	3,7	;select IRP bank0
  1672  0107  0180               	clrf	0
  1673                           
  1674                           ;DHT11.c: 51: uint8_t i;
  1675                           ;DHT11.c: 52: for(i=0;i<8;i++){
  1676  0108  01A3               	clrf	DHT11ReadByte@i
  1677  0109                     L3:	
  1678  0109  3008               	movlw	8
  1679  010A  0223               	subwf	DHT11ReadByte@i,w
  1680  010B  1803               	btfsc	3,0
  1681  010C  0008               	return
  1682  010D                     l235:	
  1683                           ;DHT11.c: 53: while(PORTAbits.RA0==0);
  1684                           
  1685  010D  1C05               	btfss	5,0	;volatile
  1686  010E  290D               	goto	l235
  1687                           
  1688                           ;DHT11.c: 54: TMR2=0;
  1689  010F  0191               	clrf	17	;volatile
  1690                           
  1691                           ;DHT11.c: 55: TMR2ON=1;
  1692  0110  1512               	bsf	18,2	;volatile
  1693  0111                     l238:	
  1694                           ;DHT11.c: 56: while(PORTAbits.RA0==1);
  1695                           
  1696  0111  1805               	btfsc	5,0	;volatile
  1697  0112  2911               	goto	l238
  1698                           
  1699                           ;DHT11.c: 57: TMR2ON=0;
  1700  0113  1112               	bcf	18,2	;volatile
  1701                           
  1702                           ;DHT11.c: 58: if(TMR2>40){
  1703  0114  3029               	movlw	41
  1704  0115  0211               	subwf	17,w	;volatile
  1705  0116  1C03               	skipc
  1706  0117  292B               	goto	l1310
  1707                           
  1708                           ;DHT11.c: 59: *data|=1<<(7-i);
  1709  0118  3001               	movlw	1
  1710  0119  00A0               	movwf	??_DHT11ReadByte
  1711  011A  0323               	decf	DHT11ReadByte@i,w
  1712  011B  3AFF               	xorlw	255
  1713  011C  3E07               	addlw	7
  1714  011D  3E01               	addlw	1
  1715  011E  2921               	goto	u714
  1716  011F                     u715:	
  1717  011F  1003               	clrc
  1718  0120  0DA0               	rlf	??_DHT11ReadByte,f
  1719  0121                     u714:	
  1720  0121  3EFF               	addlw	-1
  1721  0122  1D03               	skipz
  1722  0123  291F               	goto	u715
  1723  0124  0820               	movf	??_DHT11ReadByte,w
  1724  0125  00A1               	movwf	??_DHT11ReadByte+1
  1725  0126  0822               	movf	DHT11ReadByte@data,w
  1726  0127  0084               	movwf	4
  1727  0128  0821               	movf	??_DHT11ReadByte+1,w
  1728  0129  1383               	bcf	3,7	;select IRP bank0
  1729  012A  0480               	iorwf	0,f
  1730  012B                     l1310:	
  1731  012B  3001               	movlw	1
  1732  012C  00A0               	movwf	??_DHT11ReadByte
  1733  012D  0820               	movf	??_DHT11ReadByte,w
  1734  012E  07A3               	addwf	DHT11ReadByte@i,f
  1735  012F  2909               	goto	L3
  1736  0130                     __end_of_DHT11ReadByte:	
  1737                           ;DHT11.c: 60: }
  1738                           ;DHT11.c: 62: }
  1739                           ;DHT11.c: 63: return 1;
  1740                           ;	Return value of _DHT11ReadByte is never used
  1741                           
  1742                           
  1743                           	psect	text13
  1744  0177                     __ptext13:	
  1745 ;; *************** function _DHT11CheckResponse *****************
  1746 ;; Defined at:
  1747 ;;		line 32 in file "DHT11.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;		None               void
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1761 ;;      Params:         0       0       0       0
  1762 ;;      Locals:         0       0       0       0
  1763 ;;      Temps:          0       0       0       0
  1764 ;;      Totals:         0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    1
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_ReadTemp
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           
  1776                           ;psect for function _DHT11CheckResponse
  1777  0177                     _DHT11CheckResponse:	
  1778                           
  1779                           ;DHT11.c: 33: TRISAbits.TRISA0 = 1;
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _DHT11CheckResponse: [wreg+status,2+status,0]
  1783  0177  1683               	bsf	3,5	;RP0=1, select bank1
  1784  0178  1303               	bcf	3,6	;RP1=0, select bank1
  1785  0179  1405               	bsf	5,0	;volatile
  1786                           
  1787                           ;DHT11.c: 34: TMR2=0;
  1788  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1789  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1790  017C  0191               	clrf	17	;volatile
  1791                           
  1792                           ;DHT11.c: 35: TMR2ON=1;
  1793  017D  1512               	bsf	18,2	;volatile
  1794  017E                     l222:	
  1795                           ;DHT11.c: 36: while(PORTAbits.RA0==0);
  1796                           
  1797  017E  1C05               	btfss	5,0	;volatile
  1798  017F  297E               	goto	l222
  1799                           
  1800                           ;DHT11.c: 37: TMR2ON=0;
  1801  0180  1112               	bcf	18,2	;volatile
  1802                           
  1803                           ;DHT11.c: 38: if(TMR2<50)
  1804  0181  3032               	movlw	50
  1805  0182  0211               	subwf	17,w	;volatile
  1806  0183  1803               	skipnc
  1807  0184  2987               	goto	l1038
  1808                           
  1809                           ;DHT11.c: 39: return 0;
  1810  0185  1003               	clrc
  1811  0186  0008               	return
  1812  0187                     l1038:	
  1813                           
  1814                           ;DHT11.c: 40: TMR2=0;
  1815  0187  0191               	clrf	17	;volatile
  1816                           
  1817                           ;DHT11.c: 41: TMR2ON=1;
  1818  0188  1512               	bsf	18,2	;volatile
  1819  0189                     l227:	
  1820                           ;DHT11.c: 42: while(PORTAbits.RA0==1);
  1821                           
  1822  0189  1805               	btfsc	5,0	;volatile
  1823  018A  2989               	goto	l227
  1824                           
  1825                           ;DHT11.c: 43: TMR2ON=0;
  1826  018B  1112               	bcf	18,2	;volatile
  1827                           
  1828                           ;DHT11.c: 44: if(TMR2<60)
  1829  018C  303C               	movlw	60
  1830  018D  0211               	subwf	17,w	;volatile
  1831  018E  0008               	return
  1832  018F                     __end_of_DHT11CheckResponse:	
  1833                           ;DHT11.c: 46: return 1;
  1834                           
  1835                           ;DHT11.c: 45: return 0;
  1836                           
  1837                           
  1838                           	psect	text14
  1839  018F                     __ptext14:	
  1840 ;; *************** function _isr *****************
  1841 ;; Defined at:
  1842 ;;		line 30 in file "interrupts.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1856 ;;      Params:         0       0       0       0
  1857 ;;      Locals:         0       0       0       0
  1858 ;;      Temps:          5       0       0       0
  1859 ;;      Totals:         5       0       0       0
  1860 ;;Total ram usage:        5 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		Interrupt level 1
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _isr
  1871  018F                     _isr:	
  1872                           
  1873                           ;interrupts.c: 38: if(TMR0IF){
  1874  018F  1D0B               	btfss	11,2	;volatile
  1875  0190  299C               	goto	i1l12
  1876                           
  1877                           ;interrupts.c: 39: TMR0IF = 0;
  1878  0191  110B               	bcf	11,2	;volatile
  1879                           
  1880                           ;interrupts.c: 40: TMR0 += 7;
  1881  0192  3007               	movlw	7
  1882  0193  00F0               	movwf	??_isr
  1883  0194  0870               	movf	??_isr,w
  1884  0195  0781               	addwf	1,f	;volatile
  1885                           
  1886                           ;interrupts.c: 41: tickCounter++;
  1887  0196  3001               	movlw	1
  1888  0197  07F6               	addwf	_tickCounter,f	;volatile
  1889  0198  1803               	skipnc
  1890  0199  0AF7               	incf	_tickCounter+1,f	;volatile
  1891  019A  3000               	movlw	0
  1892  019B  07F7               	addwf	_tickCounter+1,f	;volatile
  1893  019C                     i1l12:	
  1894  019C  0874               	movf	??_isr+4,w
  1895  019D  00FF               	movwf	127
  1896  019E  0873               	movf	??_isr+3,w
  1897  019F  008A               	movwf	10
  1898  01A0  0872               	movf	??_isr+2,w
  1899  01A1  0084               	movwf	4
  1900  01A2  0E71               	swapf	(??_isr+1)^(0+-128),w
  1901  01A3  0083               	movwf	3
  1902  01A4  0EFE               	swapf	126,f
  1903  01A5  0E7E               	swapf	126,w
  1904  01A6  0009               	retfie
  1905  01A7                     __end_of_isr:	
  1906  007E                     btemp	set	126	;btemp
  1907  007E                     wtemp0	set	126
  1908                           
  1909                           	psect	intentry
  1910  0004                     __pintentry:	
  1911                           ;incstack = 0
  1912                           ; Regs used in _isr: [wreg+status,2+status,0]
  1913                           
  1914  0004                     interrupt_function:	
  1915  007E                     saved_w	set	btemp
  1916  0004  00FE               	movwf	btemp
  1917  0005  0E03               	swapf	3,w
  1918  0006  00F1               	movwf	??_isr+1
  1919  0007  0804               	movf	4,w
  1920  0008  00F2               	movwf	??_isr+2
  1921  0009  080A               	movf	10,w
  1922  000A  00F3               	movwf	??_isr+3
  1923  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1924  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1925  000D  087F               	movf	btemp+1,w
  1926  000E  00F4               	movwf	??_isr+4
  1927  000F  298F               	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80     16      28
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    DHT11ReadByte@data	PTR unsigned char  size(1) Largest target is 5
		 -> ActualizarMEFtemp@data(BANK0[5]), 

    ReadTemp@data	PTR unsigned char  size(1) Largest target is 5
		 -> ActualizarMEFtemp@data(BANK0[5]), 

    uartReadByte@receivedByte	PTR unsigned char  size(1) Largest target is 1
		 -> ActualizarMEFtemp@res(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_IniciarMEFtemp
    _ActualizarMEFtemp->_ReadTemp
    _ActualizarMEFtemp->_uartReadByte
    _ActualizarMEFtemp->_uartWriteByte

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ActualizarMEFtemp
    _IniciarMEFtemp->_tickRead
    _ActualizarMEFtemp->_ReadTemp
    _ReadTemp->_DHT11StartSignal
    _DHT11StartSignal->_tickRead

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     630
                  _ActualizarMEFtemp
                     _IniciarMEFtemp
                            _initApp
 ---------------------------------------------------------------------------------
 (1) _initApp                                              2     2      0       0
                                              0 BANK0      2     2      0
                             _RxMode
                         _uartConfig
 ---------------------------------------------------------------------------------
 (2) _uartConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IniciarMEFtemp                                       1     1      0      34
                                              5 COMMON     1     1      0
                           _tickRead
 ---------------------------------------------------------------------------------
 (1) _ActualizarMEFtemp                                    4     4      0     596
                                             12 BANK0      4     4      0
                           _ReadTemp
                             _RxMode
                             _TxMode
                           _tickRead
                       _uartReadByte
                      _uartWriteByte
 ---------------------------------------------------------------------------------
 (2) _uartWriteByte                                        1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartReadByte                                         2     2      0     121
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TxMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RxMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadTemp                                             3     3      0     419
                                              5 COMMON     1     1      0
                                             10 BANK0      2     2      0
                 _DHT11CheckResponse
                      _DHT11ReadByte
                   _DHT11StartSignal
 ---------------------------------------------------------------------------------
 (3) _DHT11StartSignal                                     6     6      0      68
                                              4 BANK0      6     6      0
                           _tickRead
 ---------------------------------------------------------------------------------
 (2) _tickRead                                             4     2      2      34
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _DHT11ReadByte                                        4     4      0     191
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _DHT11CheckResponse                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ActualizarMEFtemp
     _ReadTemp
       _DHT11CheckResponse
       _DHT11ReadByte
       _DHT11StartSignal
         _tickRead
     _RxMode
     _TxMode
     _tickRead
     _uartReadByte
     _uartWriteByte
   _IniciarMEFtemp
     _tickRead
   _initApp
     _RxMode
     _uartConfig

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     10      1C       3       35.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      25       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      25      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Oct 29 11:13:45 2019

            ??_uartWriteByte 0075           ?_ActualizarMEFtemp 0070                            pc 0002  
                __CFG_CP$OFF 0000                           fsr 0004                          l108 01EF  
                        l222 017E                          l151 0174                          l227 0189  
                        l235 010D                          l238 0111                          l174 0043  
        ??_ActualizarMEFtemp 002C                          l197 00A4                          _CM0 00F8  
                        _CM1 00F9                          _CM2 00FA                          _GIE 005F  
                        _PS0 0408                          _PS1 0409                          _PS2 040A  
               __CFG_CPD$OFF 0000                          u714 0121                          u715 011F  
                        _PSA 040B                          u907 00F6                          u897 0142  
                        _isr 018F                          fsr0 0004                          indf 0000  
               __CFG_FOSC$HS 0000                         S1486 0204                 __CFG_LVP$OFF 0000  
                       l1038 0187                         l1310 012B                         l1322 01C9  
                       l1420 0073                         l1404 0058                         l1412 0063  
                       l1430 0087                         l1414 006A                         l1290 00FF  
                       l1338 0165                         l1444 00A2                         l1436 0090  
                       l1428 0085                         l1278 00D6                         l1392 0046  
                       l1456 00BB                         l1464 0202                         l1386 001C  
                       ?_isr 0070                         _BRGH 04C2                         _CREN 00C4  
                       _T0CS 040D                         i1l12 019C                         _RCIF 0065  
                       _TMR0 0001                         _TMR2 0011                         _SPEN 00C7  
                       _TXEN 04C5                         _TXIF 0064                         _SYNC 04C4  
                       _main 0200                         btemp 007E    __end_of_ActualizarMEFtemp 00C9  
     __end_of_IniciarMEFtemp 01D9                         start 0010        ActualizarMEFtemp@data 0036  
      ActualizarMEFtemp@temp 0034                        ??_isr 0070                        ?_main 0070  
              __CFG_WDTE$OFF 0000                        _T2CON 0012                        _RCREG 001A  
                      _SPBRG 0099                        _TXREG 0019     __end_of_DHT11StartSignal 0101  
            __end_of_initApp 0154               __CFG_BOREN$OFF 0000                        pclath 000A  
                      status 0003                        wtemp0 007E              ?_IniciarMEFtemp 0070  
             __CFG_MCLRE$OFF 0000              __initialization 0011                 __end_of_main 0204  
           __end_of_ReadTemp 0177                       ??_main 0076                       _TMR0IE 005D  
                     _TMR0IF 005A                       _TMR2ON 0092                       _TRISB1 0431  
                     _TRISB2 0432   __size_of_ActualizarMEFtemp 00AE               __CFG_PWRTE$OFF 0000  
                     _RxMode 01FB                       _TxMode 01F6     uartReadByte@receivedByte 0020  
           __end_of_tickRead 01E6                    ??_initApp 0020                       saved_w 007E  
     __size_of_DHT11ReadByte 002F                 ReadTemp@data 002A      __end_of__initialization 0019  
__size_of_DHT11CheckResponse 0018               __pcstackCOMMON 0070                   __pbssBANK0 0030  
                  ?_ReadTemp 0070                _DHT11ReadByte 0101                      ?_RxMode 0070  
                 __pmaintext 0200                      ?_TxMode 0070                   __pintentry 0004  
      __end_of_uartWriteByte 01F6            ?_DHT11StartSignal 0070                  tickRead@aux 0022  
           ??_IniciarMEFtemp 0075           ??_DHT11StartSignal 0024                   ??_ReadTemp 0075  
             ?_DHT11ReadByte 0070                    ?_tickRead 0020              __size_of_RxMode 0005  
            __size_of_TxMode 0005                ?_uartReadByte 0070                      __ptext1 0130  
                    __ptext2 01A7                      __ptext3 01CB                      __ptext4 001B  
                    __ptext5 01EE                      __ptext6 01BB                      __ptext7 01F6  
                    __ptext8 01FB                      __ptext9 0154                      _initApp 0130  
               __size_of_isr 0018                      _tinicio 0030                      clrloop0 01E7  
       end_of_initialization 0019                   ??_tickRead 0075                   _uartConfig 01A7  
             ??_uartReadByte 0075                    _PORTAbits 0005      DHT11StartSignal@tinicio 0028  
                  _TRISAbits 0085                    _TRISBbits 0086              ??_DHT11ReadByte 0020  
                  ReadTemp@i 002B         ActualizarMEFtemp@aux 0032         ActualizarMEFtemp@hum 0033  
       ActualizarMEFtemp@res 003B               __end_of_RxMode 0200               __end_of_TxMode 01FB  
        start_initialization 0011                  __end_of_isr 01A7   __end_of_DHT11CheckResponse 018F  
          __size_of_ReadTemp 0023                  ?_uartConfig 0070                     ??_RxMode 0075  
                   ??_TxMode 0075                  __pbssCOMMON 0076                    ___latbits 0000  
              __pcstackBANK0 0020           ActualizarMEFtemp@i 0078         __end_of_uartReadByte 01CB  
  __size_of_DHT11StartSignal 0038            __size_of_tickRead 000D                    __pswtext1 0204  
                   ?_initApp 0070          __size_of_uartConfig 0014       __size_of_uartWriteByte 0008  
          interrupt_function 0004                    clear_ram0 01E6             _estadoActualTemp 0035  
                   _ReadTemp 0154           uartWriteByte@value 0075      __size_of_IniciarMEFtemp 000E  
              _uartWriteByte 01EE        __size_of_uartReadByte 0010             __size_of_initApp 0024  
                   __ptext10 00C9                     __ptext11 01D9                     __ptext12 0101  
                   __ptext13 0177                     __ptext14 018F                __size_of_main 0004  
      __end_of_DHT11ReadByte 0130                     _tickRead 01D9                 ??_uartConfig 0075  
           _DHT11StartSignal 00C9               DHT11ReadByte@i 0023                 _uartReadByte 01BB  
             ?_uartWriteByte 0070           _DHT11CheckResponse 0177          ?_DHT11CheckResponse 0070  
                _tickCounter 0076           __end_of_uartConfig 01BB                     intlevel1 0000  
       ??_DHT11CheckResponse 0075            DHT11ReadByte@data 0022            _ActualizarMEFtemp 001B  
             _IniciarMEFtemp 01CB  
