

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Oct 29 10:10:07 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 1.45
    40                           ; Generated 16/11/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F88 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  008F                     	;# 
   161  0090                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0105                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0001                     _TMR0	set	1
   233  0005                     _PORTAbits	set	5
   234  0019                     _TXREG	set	25
   235  001A                     _RCREG	set	26
   236  0006                     _PORTB	set	6
   237  0006                     _PORTBbits	set	6
   238  005A                     _TMR0IF	set	90
   239  0064                     _TXIF	set	100
   240  0065                     _RCIF	set	101
   241  00C7                     _SPEN	set	199
   242  00C4                     _CREN	set	196
   243  005F                     _GIE	set	95
   244  005D                     _TMR0IE	set	93
   245  0099                     _SPBRG	set	153
   246  0081                     _OPTION_REGbits	set	129
   247  0086                     _TRISBbits	set	134
   248  0085                     _TRISAbits	set	133
   249  009B                     _ANSEL	set	155
   250  0432                     _TRISB2	set	1074
   251  0435                     _TRISB5	set	1077
   252  04C5                     _TXEN	set	1221
   253  04C4                     _SYNC	set	1220
   254  04C2                     _BRGH	set	1218
   255  040B                     _PSA	set	1035
   256  040D                     _T0CS	set	1037
   257  04E0                     _CM0	set	1248
   258  04E1                     _CM1	set	1249
   259  04E2                     _CM2	set	1250
   260  0431                     _TRISB1	set	1073
   261  0434                     _TRISB4	set	1076
   262                           
   263                           ; #config settings
   264  0000                     
   265                           	psect	cinit
   266  0013                     start_initialization:	
   267  0013                     __initialization:	
   268                           
   269                           ; Clear objects allocated to COMMON
   270  0013  01F1               	clrf	__pbssCOMMON& (0+127)
   271  0014  01F2               	clrf	(__pbssCOMMON+1)& (0+127)
   272  0015  01F3               	clrf	(__pbssCOMMON+2)& (0+127)
   273  0016  01F4               	clrf	(__pbssCOMMON+3)& (0+127)
   274  0017  01F5               	clrf	(__pbssCOMMON+4)& (0+127)
   275                           
   276                           ; Clear objects allocated to BANK0
   277  0018  1283               	bcf	3,5	;RP0=0, select bank0
   278  0019  1303               	bcf	3,6	;RP1=0, select bank0
   279  001A  01B1               	clrf	__pbssBANK0& (0+127)
   280  001B  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   281  001C  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   282  001D  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   283  001E  01B5               	clrf	(__pbssBANK0+4)& (0+127)
   284  001F  01B6               	clrf	(__pbssBANK0+5)& (0+127)
   285  0020  01B7               	clrf	(__pbssBANK0+6)& (0+127)
   286  0021  01B8               	clrf	(__pbssBANK0+7)& (0+127)
   287  0022                     end_of_initialization:	
   288                           ;End of C runtime variable initialization code
   289                           
   290  0022                     __end_of__initialization:	
   291  0022  0183               	clrf	3
   292  0023  118A  29EE         	ljmp	_main	;jump to C main() function
   293                           
   294                           	psect	bssCOMMON
   295  0071                     __pbssCOMMON:	
   296  0071                     _result:	
   297  0071                     	ds	2
   298  0073                     _tickCounter:	
   299  0073                     	ds	2
   300  0075                     _estadoActualI2C:	
   301  0075                     	ds	1
   302                           
   303                           	psect	bssBANK0
   304  0031                     __pbssBANK0:	
   305  0031                     ActualizarMEFI2C@tinicioi2c:	
   306  0031                     	ds	2
   307  0033                     _tActual:	
   308  0033                     	ds	2
   309  0035                     _tInicio:	
   310  0035                     	ds	2
   311  0037                     _estadoActualUART:	
   312  0037                     	ds	1
   313  0038                     ActualizarMEFUART@res:	
   314  0038                     	ds	1
   315                           
   316                           	psect	cstackCOMMON
   317  0076                     __pcstackCOMMON:	
   318  0076                     ?_uartReadByte:	
   319  0076                     ?_initApp:	
   320                           ; 1 bit 
   321                           
   322  0076                     ?_InicializarMEFI2C:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0076                     ?_InicializarMEFUART:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0076                     ?_ActualizarMEFI2C:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0076                     ?_ActualizarMEFUART:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0076                     ?_uartConfig:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0076                     ?_main:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0076                     ?_I2C_Delay:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0076                     ?_SCL_Low:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0076                     ?_SCL_High:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0076                     ?_SDA_Low:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0076                     ?_SDA_High:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0076                     ?_I2C_SendZero:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0076                     ?_I2C_SendOne:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0076                     ?_I2C_Start:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0076                     ?_I2C_Stop:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0076                     ?_I2C_WaitForSlave:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0076                     ?_I2C_WriteByte:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0076                     ?_My_I2C_ReadResult:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0076                     ?_I2C_WriteToAddress:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0076                     ?_I2C_ReadFromAddress:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0076                     ?_uartWriteByte:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0076                     ?_TxMode:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0076                     ?_RxMode:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0076                     ?_isr:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0076                     ??_isr:	
   395                           ; 1 bytes @ 0x0
   396                           
   397                           
   398                           ; 1 bytes @ 0x0
   399  0076                     	ds	5
   400                           
   401                           	psect	cstackBANK0
   402  0020                     __pcstackBANK0:	
   403  0020                     ??_initApp:	
   404  0020                     ??_InicializarMEFI2C:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0020                     ??_InicializarMEFUART:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0020                     ??_uartConfig:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0020                     ??_I2C_Delay:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0020                     ??_SCL_Low:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0020                     ??_SCL_High:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0020                     ??_SDA_Low:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0020                     ??_SDA_High:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0020                     ??_I2C_WaitForSlave:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0020                     ??_uartReadByte:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0020                     ??_uartWriteByte:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0020                     ??_TxMode:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0020                     ??_RxMode:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0020                     ?_tickRead:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0020                     uartWriteByte@value:	
   447                           ; 2 bytes @ 0x0
   448                           
   449                           
   450                           ; 1 bytes @ 0x0
   451  0020                     	ds	1
   452  0021                     ??_I2C_SendZero:	
   453  0021                     ??_I2C_SendOne:	
   454                           ; 1 bytes @ 0x1
   455                           
   456  0021                     ??_I2C_Start:	
   457                           ; 1 bytes @ 0x1
   458                           
   459  0021                     ??_I2C_Stop:	
   460                           ; 1 bytes @ 0x1
   461                           
   462  0021                     ??_I2C_WriteByte:	
   463                           ; 1 bytes @ 0x1
   464                           
   465  0021                     ??_My_I2C_ReadResult:	
   466                           ; 1 bytes @ 0x1
   467                           
   468  0021                     uartReadByte@receivedByte:	
   469                           ; 1 bytes @ 0x1
   470                           
   471                           
   472                           ; 1 bytes @ 0x1
   473  0021                     	ds	1
   474  0022                     ??_tickRead:	
   475  0022                     tickRead@aux:	
   476                           ; 1 bytes @ 0x2
   477                           
   478                           
   479                           ; 2 bytes @ 0x2
   480  0022                     	ds	1
   481  0023                     I2C_WriteByte@theByte:	
   482  0023                     My_I2C_ReadResult@x:	
   483                           ; 1 bytes @ 0x3
   484                           
   485                           
   486                           ; 2 bytes @ 0x3
   487  0023                     	ds	1
   488  0024                     ??_ActualizarMEFUART:	
   489  0024                     I2C_WriteByte@x:	
   490                           ; 1 bytes @ 0x4
   491                           
   492  0024                     ActualizarMEFUART@tinicioUART:	
   493                           ; 2 bytes @ 0x4
   494                           
   495                           
   496                           ; 2 bytes @ 0x4
   497  0024                     	ds	1
   498  0025                     My_I2C_ReadResult@readback:	
   499                           
   500                           ; 1 bytes @ 0x5
   501  0025                     	ds	1
   502  0026                     I2C_WriteByte@temp:	
   503  0026                     ActualizarMEFUART@tout:	
   504                           ; 1 bytes @ 0x6
   505                           
   506                           
   507                           ; 2 bytes @ 0x6
   508  0026                     	ds	1
   509  0027                     ??_I2C_WriteToAddress:	
   510  0027                     ??_I2C_ReadFromAddress:	
   511                           ; 1 bytes @ 0x7
   512                           
   513  0027                     I2C_ReadFromAddress@deviceAddress:	
   514                           ; 1 bytes @ 0x7
   515                           
   516                           
   517                           ; 1 bytes @ 0x7
   518  0027                     	ds	1
   519  0028                     ActualizarMEFUART@aux:	
   520                           
   521                           ; 1 bytes @ 0x8
   522  0028                     	ds	1
   523  0029                     I2C_WriteToAddress@deviceAddress:	
   524                           
   525                           ; 1 bytes @ 0x9
   526  0029                     	ds	1
   527  002A                     I2C_WriteToAddress@temp:	
   528                           
   529                           ; 1 bytes @ 0xA
   530  002A                     	ds	1
   531  002B                     ??_ActualizarMEFI2C:	
   532                           
   533                           ; 1 bytes @ 0xB
   534  002B                     	ds	4
   535  002F                     ??_main:	
   536  002F                     main@result:	
   537                           ; 1 bytes @ 0xF
   538                           
   539                           
   540                           ; 2 bytes @ 0xF
   541  002F                     	ds	2
   542                           
   543                           	psect	maintext
   544  01EE                     __pmaintext:	
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 16 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  result          2   15[BANK0 ] unsigned int 
   555 ;;  request         1    0        unsigned char 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : B00/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         0       2       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         0       2       0       0       0
   569 ;;Total ram usage:        2 bytes
   570 ;; Hardware stack levels required when called:    6
   571 ;; This function calls:
   572 ;;		_ActualizarMEFI2C
   573 ;;		_ActualizarMEFUART
   574 ;;		_InicializarMEFI2C
   575 ;;		_InicializarMEFUART
   576 ;;		_initApp
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _main
   584  01EE                     _main:	
   585                           
   586                           ;main.c: 17: uint16_t result = 0;
   587                           
   588                           ;incstack = 0
   589                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   590  01EE  1283               	bcf	3,5	;RP0=0, select bank0
   591  01EF  1303               	bcf	3,6	;RP1=0, select bank0
   592  01F0  01AF               	clrf	main@result
   593  01F1  01B0               	clrf	main@result+1
   594                           
   595                           ;main.c: 18: uint8_t request;
   596                           ;main.c: 19: initApp();
   597  01F2  118A  21CA  118A   	fcall	_initApp
   598                           
   599                           ;main.c: 20: PORTBbits.RB0 = 1;
   600  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   601  01F6  1303               	bcf	3,6	;RP1=0, select bank0
   602  01F7  1406               	bsf	6,0	;volatile
   603                           
   604                           ;main.c: 21: PORTBbits.RB3 = 1;
   605  01F8  1586               	bsf	6,3	;volatile
   606                           
   607                           ;main.c: 23: InicializarMEFI2C();
   608  01F9  118A  22E6  118A   	fcall	_InicializarMEFI2C
   609                           
   610                           ;main.c: 24: InicializarMEFUART();
   611  01FC  118A  22DA  118A   	fcall	_InicializarMEFUART
   612  01FF                     l1891:	
   613                           ;main.c: 26: while(1){
   614                           
   615                           
   616                           ;main.c: 27: ActualizarMEFI2C();
   617  01FF  118A  20C4  118A   	fcall	_ActualizarMEFI2C
   618                           
   619                           ;main.c: 28: ActualizarMEFUART();
   620  0202  118A  2025  118A   	fcall	_ActualizarMEFUART
   621  0205  29FF               	goto	l1891
   622  0206                     __end_of_main:	
   623                           
   624                           	psect	text1
   625  01CA                     __ptext1:	
   626 ;; *************** function _initApp *****************
   627 ;; Defined at:
   628 ;;		line 24 in file "user.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, pclath, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       2       0       0       0
   645 ;;      Totals:         0       2       0       0       0
   646 ;;Total ram usage:        2 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    2
   649 ;; This function calls:
   650 ;;		_uartConfig
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           
   657                           ;psect for function _initApp
   658  01CA                     _initApp:	
   659                           
   660                           ;user.c: 25: CM2=1;
   661                           
   662                           ;incstack = 0
   663                           ; Regs used in _initApp: [wreg+status,2+status,0+pclath+cstack]
   664  01CA  1683               	bsf	3,5	;RP0=1, select bank1
   665  01CB  1303               	bcf	3,6	;RP1=0, select bank1
   666  01CC  151C               	bsf	28,2	;volatile
   667                           
   668                           ;user.c: 26: CM1=0;
   669  01CD  109C               	bcf	28,1	;volatile
   670                           
   671                           ;user.c: 27: CM0=0;
   672  01CE  101C               	bcf	28,0	;volatile
   673                           
   674                           ;user.c: 29: ANSEL=0x00;
   675  01CF  019B               	clrf	27	;volatile
   676                           
   677                           ;user.c: 30: TRISAbits.TRISA3 = 1;
   678  01D0  1585               	bsf	5,3	;volatile
   679                           
   680                           ;user.c: 31: TRISAbits.TRISA4 = 1;
   681  01D1  1605               	bsf	5,4	;volatile
   682                           
   683                           ;user.c: 32: TRISBbits.TRISB0 = 0;
   684  01D2  1006               	bcf	6,0	;volatile
   685                           
   686                           ;user.c: 33: TRISBbits.TRISB3 = 0;
   687  01D3  1186               	bcf	6,3	;volatile
   688                           
   689                           ;user.c: 34: TRISAbits.TRISA2=0;
   690  01D4  1105               	bcf	5,2	;volatile
   691                           
   692                           ;user.c: 35: TRISAbits.TRISA1=0;
   693  01D5  1085               	bcf	5,1	;volatile
   694                           
   695                           ;user.c: 37: uartConfig();
   696  01D6  118A  2249  118A   	fcall	_uartConfig
   697                           
   698                           ;user.c: 40: T0CS = 0;
   699  01D9  1683               	bsf	3,5	;RP0=1, select bank1
   700  01DA  1303               	bcf	3,6	;RP1=0, select bank1
   701  01DB  1281               	bcf	1,5	;volatile
   702                           
   703                           ;user.c: 41: PSA = 0;
   704  01DC  1181               	bcf	1,3	;volatile
   705                           
   706                           ;user.c: 44: OPTION_REGbits.PS = 1;
   707  01DD  0801               	movf	1,w	;volatile
   708  01DE  39F8               	andlw	-8
   709  01DF  3801               	iorlw	1
   710  01E0  0081               	movwf	1	;volatile
   711                           
   712                           ;user.c: 54: _delay((unsigned long)((100)*(4000000L/4000.0)));
   713  01E1  3082               	movlw	130
   714  01E2  1283               	bcf	3,5	;RP0=0, select bank0
   715  01E3  1303               	bcf	3,6	;RP1=0, select bank0
   716  01E4  00A1               	movwf	??_initApp+1
   717  01E5  30DD               	movlw	221
   718  01E6  00A0               	movwf	??_initApp
   719  01E7                     u887:	
   720  01E7  0BA0               	decfsz	??_initApp,f
   721  01E8  29E7               	goto	u887
   722  01E9  0BA1               	decfsz	??_initApp+1,f
   723  01EA  29E7               	goto	u887
   724                           
   725                           ;user.c: 55: TMR0IE=1;
   726  01EB  168B               	bsf	11,5	;volatile
   727                           
   728                           ;user.c: 56: GIE=1;
   729  01EC  178B               	bsf	11,7	;volatile
   730  01ED  0008               	return
   731  01EE                     __end_of_initApp:	
   732                           
   733                           	psect	text2
   734  0249                     __ptext2:	
   735 ;; *************** function _uartConfig *****************
   736 ;; Defined at:
   737 ;;		line 63 in file "user.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0
   754 ;;      Totals:         0       0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    1
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_initApp
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _uartConfig
   767  0249                     _uartConfig:	
   768                           
   769                           ;user.c: 71: SPBRG = (4000000L - 9600 * 16L) / (9600 * 16L);
   770                           
   771                           ;incstack = 0
   772                           ; Regs used in _uartConfig: [wreg]
   773  0249  3019               	movlw	25
   774  024A  1683               	bsf	3,5	;RP0=1, select bank1
   775  024B  1303               	bcf	3,6	;RP1=0, select bank1
   776  024C  0099               	movwf	25	;volatile
   777                           
   778                           ;user.c: 72: BRGH = 1;
   779  024D  1518               	bsf	24,2	;volatile
   780                           
   781                           ;user.c: 74: SYNC = 0;
   782  024E  1218               	bcf	24,4	;volatile
   783                           
   784                           ;user.c: 76: CREN = 1;
   785  024F  1283               	bcf	3,5	;RP0=0, select bank0
   786  0250  1303               	bcf	3,6	;RP1=0, select bank0
   787  0251  1618               	bsf	24,4	;volatile
   788                           
   789                           ;user.c: 77: TXEN = 1;
   790  0252  1683               	bsf	3,5	;RP0=1, select bank1
   791  0253  1303               	bcf	3,6	;RP1=0, select bank1
   792  0254  1698               	bsf	24,5	;volatile
   793                           
   794                           ;user.c: 78: SPEN = 1;
   795  0255  1283               	bcf	3,5	;RP0=0, select bank0
   796  0256  1303               	bcf	3,6	;RP1=0, select bank0
   797  0257  1798               	bsf	24,7	;volatile
   798                           
   799                           ;user.c: 79: TRISB5=1;
   800  0258  1683               	bsf	3,5	;RP0=1, select bank1
   801  0259  1303               	bcf	3,6	;RP1=0, select bank1
   802  025A  1686               	bsf	6,5	;volatile
   803                           
   804                           ;user.c: 80: TRISB2=1;
   805  025B  1506               	bsf	6,2	;volatile
   806  025C  0008               	return
   807  025D                     __end_of_uartConfig:	
   808                           
   809                           	psect	text3
   810  02DA                     __ptext3:	
   811 ;; *************** function _InicializarMEFUART *****************
   812 ;; Defined at:
   813 ;;		line 162 in file "user.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		status,2
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0
   830 ;;      Totals:         0       0       0       0       0
   831 ;;Total ram usage:        0 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           
   842                           ;psect for function _InicializarMEFUART
   843  02DA                     _InicializarMEFUART:	
   844                           
   845                           ;user.c: 163: estadoActualUART=RX;
   846                           
   847                           ;incstack = 0
   848                           ; Regs used in _InicializarMEFUART: [status,2]
   849  02DA  1283               	bcf	3,5	;RP0=0, select bank0
   850  02DB  1303               	bcf	3,6	;RP1=0, select bank0
   851  02DC  01B7               	clrf	_estadoActualUART
   852  02DD  0008               	return
   853  02DE                     __end_of_InicializarMEFUART:	
   854                           
   855                           	psect	text4
   856  02E6                     __ptext4:	
   857 ;; *************** function _InicializarMEFI2C *****************
   858 ;; Defined at:
   859 ;;		line 158 in file "user.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		status,2
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0
   876 ;;      Totals:         0       0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    1
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_main
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           
   888                           ;psect for function _InicializarMEFI2C
   889  02E6                     _InicializarMEFI2C:	
   890                           
   891                           ;user.c: 159: estadoActualI2C = REQUEST;
   892                           
   893                           ;incstack = 0
   894                           ; Regs used in _InicializarMEFI2C: [status,2]
   895  02E6  01F5               	clrf	_estadoActualI2C
   896  02E7  0008               	return
   897  02E8                     __end_of_InicializarMEFI2C:	
   898                           
   899                           	psect	text5
   900  0025                     __ptext5:	
   901 ;; *************** function _ActualizarMEFUART *****************
   902 ;; Defined at:
   903 ;;		line 166 in file "user.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  tout            2    6[BANK0 ] unsigned int 
   908 ;;  tinicioUART     2    4[BANK0 ] unsigned int 
   909 ;;  aux             1    8[BANK0 ] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       0       0       0       0
   920 ;;      Locals:         0       5       0       0       0
   921 ;;      Temps:          0       0       0       0       0
   922 ;;      Totals:         0       5       0       0       0
   923 ;;Total ram usage:        5 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    2
   926 ;; This function calls:
   927 ;;		_RxMode
   928 ;;		_TxMode
   929 ;;		_tickRead
   930 ;;		_uartReadByte
   931 ;;		_uartWriteByte
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           
   938                           ;psect for function _ActualizarMEFUART
   939  0025                     _ActualizarMEFUART:	
   940                           
   941                           ;user.c: 167: static uint8_t res;
   942                           ;user.c: 168: uint8_t aux;
   943                           ;user.c: 169: uint16_t tout=0;
   944                           
   945                           ;incstack = 0
   946                           ; Regs used in _ActualizarMEFUART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   947  0025  1283               	bcf	3,5	;RP0=0, select bank0
   948  0026  1303               	bcf	3,6	;RP1=0, select bank0
   949  0027  01A6               	clrf	ActualizarMEFUART@tout
   950  0028  01A7               	clrf	ActualizarMEFUART@tout+1
   951                           
   952                           ;user.c: 170: tick_t tinicioUART;
   953                           ;user.c: 171: switch(estadoActualUART) {
   954  0029  28BB               	goto	l1833
   955  002A                     l1777:	
   956                           ;user.c: 172: case RX:
   957                           
   958                           
   959                           ;user.c: 173: RxMode();
   960  002A  118A  22D5  118A   	fcall	_RxMode
   961                           
   962                           ;user.c: 174: if (uartReadByte(&res)) {
   963  002D  3038               	movlw	(low (ActualizarMEFUART@res| 0))& (0+255)
   964  002E  118A  226F  118A   	fcall	_uartReadByte
   965  0031  1C03               	btfss	3,0
   966  0032  0008               	return
   967                           
   968                           ;user.c: 175: if (res == 0xA8) {
   969  0033  30A8               	movlw	168
   970  0034  1283               	bcf	3,5	;RP0=0, select bank0
   971  0035  1303               	bcf	3,6	;RP1=0, select bank0
   972  0036  0638               	xorwf	ActualizarMEFUART@res,w
   973  0037  1D03               	btfss	3,2
   974  0038  0008               	return
   975                           
   976                           ;user.c: 176: res = 0;
   977  0039  01B8               	clrf	ActualizarMEFUART@res
   978                           
   979                           ;user.c: 177: estadoActualUART = TX;
   980  003A  01B7               	clrf	_estadoActualUART
   981  003B  0AB7               	incf	_estadoActualUART,f
   982                           
   983                           ;user.c: 178: }
   984                           ;user.c: 179: }
   985                           ;user.c: 180: break;
   986  003C  0008               	return
   987  003D                     l1787:	
   988                           ;user.c: 181: case TX:
   989                           
   990                           
   991                           ;user.c: 182: tout=0;
   992  003D  01A6               	clrf	ActualizarMEFUART@tout
   993  003E  01A7               	clrf	ActualizarMEFUART@tout+1
   994                           
   995                           ;user.c: 183: tinicioUART=tickRead();
   996  003F  118A  229D  118A   	fcall	_tickRead
   997  0042  1283               	bcf	3,5	;RP0=0, select bank0
   998  0043  1303               	bcf	3,6	;RP1=0, select bank0
   999  0044  0821               	movf	?_tickRead+1,w
  1000  0045  00A5               	movwf	ActualizarMEFUART@tinicioUART+1
  1001  0046  0820               	movf	?_tickRead,w
  1002  0047  00A4               	movwf	ActualizarMEFUART@tinicioUART
  1003                           
  1004                           ;user.c: 184: PORTBbits.RB3 = !PORTBbits.RB3;
  1005  0048  1003               	clrc
  1006  0049  1D86               	btfss	6,3	;volatile
  1007  004A  1403               	setc
  1008  004B  1C03               	btfss	3,0
  1009  004C  2851               	goto	u720
  1010  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1011  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1012  004F  1586               	bsf	6,3	;volatile
  1013  0050  2854               	goto	l1793
  1014  0051                     u720:	
  1015  0051  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0052  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0053  1186               	bcf	6,3	;volatile
  1018  0054                     l1793:	
  1019                           
  1020                           ;user.c: 185: PORTBbits.RB0 = !PORTBbits.RB0;
  1021  0054  1003               	clrc
  1022  0055  1C06               	btfss	6,0	;volatile
  1023  0056  1403               	setc
  1024  0057  1C03               	btfss	3,0
  1025  0058  285D               	goto	u740
  1026  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1027  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1028  005B  1406               	bsf	6,0	;volatile
  1029  005C  2860               	goto	l1795
  1030  005D                     u740:	
  1031  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1032  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1033  005F  1006               	bcf	6,0	;volatile
  1034  0060                     l1795:	
  1035                           
  1036                           ;user.c: 186: TxMode();
  1037  0060  118A  22D0  118A   	fcall	_TxMode
  1038                           
  1039                           ;user.c: 188: uartWriteByte((uint8_t)(result>>8));
  1040  0063  0872               	movf	_result+1,w
  1041  0064  118A  22AA  118A   	fcall	_uartWriteByte
  1042                           
  1043                           ;user.c: 189: while(!(uartReadByte(&aux))&&(tout<0xFFFE)){
  1044  0067  2870               	goto	l1801
  1045  0068                     l1799:	
  1046                           
  1047                           ;user.c: 190: tout++;
  1048  0068  3001               	movlw	1
  1049  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1050  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1051  006B  07A6               	addwf	ActualizarMEFUART@tout,f
  1052  006C  1803               	skipnc
  1053  006D  0AA7               	incf	ActualizarMEFUART@tout+1,f
  1054  006E  3000               	movlw	0
  1055  006F  07A7               	addwf	ActualizarMEFUART@tout+1,f
  1056  0070                     l1801:	
  1057  0070  3028               	movlw	(low (ActualizarMEFUART@aux| 0))& (0+255)
  1058  0071  118A  226F  118A   	fcall	_uartReadByte
  1059  0074  1803               	btfsc	3,0
  1060  0075  287F               	goto	l1805
  1061  0076  30FF               	movlw	255
  1062  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1064  0079  0227               	subwf	ActualizarMEFUART@tout+1,w
  1065  007A  30FE               	movlw	254
  1066  007B  1903               	skipnz
  1067  007C  0226               	subwf	ActualizarMEFUART@tout,w
  1068  007D  1C03               	skipc
  1069  007E  2868               	goto	l1799
  1070  007F                     l1805:	
  1071                           
  1072                           ;user.c: 191: }
  1073                           ;user.c: 192: if(aux == (uint8_t)(result >> 8)){
  1074  007F  0872               	movf	_result+1,w
  1075  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0082  0628               	xorwf	ActualizarMEFUART@aux,w
  1078  0083  1D03               	skipz
  1079  0084  28B5               	goto	l1827
  1080                           
  1081                           ;user.c: 193: uartWriteByte((uint8_t)(result & 0x00FF));
  1082  0085  0871               	movf	_result,w
  1083  0086  118A  22AA  118A   	fcall	_uartWriteByte
  1084                           
  1085                           ;user.c: 194: tout=0;
  1086  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1087  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1088  008B  01A6               	clrf	ActualizarMEFUART@tout
  1089  008C  01A7               	clrf	ActualizarMEFUART@tout+1
  1090                           
  1091                           ;user.c: 195: while(!(uartReadByte(&aux))&&(tout<0xFFFE)){
  1092  008D  2894               	goto	l1813
  1093  008E                     l1811:	
  1094                           
  1095                           ;user.c: 196: tout++;
  1096  008E  3001               	movlw	1
  1097  008F  07A6               	addwf	ActualizarMEFUART@tout,f
  1098  0090  1803               	skipnc
  1099  0091  0AA7               	incf	ActualizarMEFUART@tout+1,f
  1100  0092  3000               	movlw	0
  1101  0093  07A7               	addwf	ActualizarMEFUART@tout+1,f
  1102  0094                     l1813:	
  1103  0094  3028               	movlw	(low (ActualizarMEFUART@aux| 0))& (0+255)
  1104  0095  118A  226F  118A   	fcall	_uartReadByte
  1105  0098  1803               	btfsc	3,0
  1106  0099  28A3               	goto	l1817
  1107  009A  30FF               	movlw	255
  1108  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1109  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1110  009D  0227               	subwf	ActualizarMEFUART@tout+1,w
  1111  009E  30FE               	movlw	254
  1112  009F  1903               	skipnz
  1113  00A0  0226               	subwf	ActualizarMEFUART@tout,w
  1114  00A1  1C03               	skipc
  1115  00A2  288E               	goto	l1811
  1116  00A3                     l1817:	
  1117                           
  1118                           ;user.c: 197: }
  1119                           ;user.c: 198: if (aux == (uint8_t)(result & 0x00FF)) {
  1120  00A3  0871               	movf	_result,w
  1121  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1122  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1123  00A6  0628               	xorwf	ActualizarMEFUART@aux,w
  1124  00A7  1D03               	skipz
  1125  00A8  28AF               	goto	l1823
  1126                           
  1127                           ;user.c: 199: RxMode();
  1128  00A9  118A  22D5         	fcall	_RxMode
  1129                           
  1130                           ;user.c: 200: estadoActualUART = RX;
  1131  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1132  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1133  00AD  01B7               	clrf	_estadoActualUART
  1134                           
  1135                           ;user.c: 201: }
  1136  00AE  0008               	return
  1137  00AF                     l1823:	
  1138                           
  1139                           ;user.c: 202: else {
  1140                           ;user.c: 203: RxMode();
  1141  00AF  118A  22D5         	fcall	_RxMode
  1142                           
  1143                           ;user.c: 204: estadoActualUART=RX;
  1144  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1145  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1146  00B3  01B7               	clrf	_estadoActualUART
  1147                           
  1148                           ;user.c: 205: }
  1149                           ;user.c: 206: }else{
  1150  00B4  0008               	return
  1151  00B5                     l1827:	
  1152                           
  1153                           ;user.c: 207: RxMode();
  1154  00B5  118A  22D5         	fcall	_RxMode
  1155                           
  1156                           ;user.c: 208: estadoActualUART=RX;
  1157  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1158  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1159  00B9  01B7               	clrf	_estadoActualUART
  1160                           
  1161                           ;user.c: 216: }
  1162                           
  1163                           ;user.c: 209: }
  1164                           ;user.c: 215: break;
  1165  00BA  0008               	return
  1166  00BB                     l1833:	
  1167  00BB  0837               	movf	_estadoActualUART,w
  1168                           
  1169                           ; Switch size 1, requested type "space"
  1170                           ; Number of cases is 2, Range of values is 0 to 1
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte            7     4 (average)
  1174                           ; direct_byte           11     7 (fixed)
  1175                           ; jumptable            260     6 (fixed)
  1176                           ;	Chosen strategy is simple_byte
  1177  00BC  3A00               	xorlw	0	; case 0
  1178  00BD  1903               	skipnz
  1179  00BE  282A               	goto	l1777
  1180  00BF  3A01               	xorlw	1	; case 1
  1181  00C0  1903               	skipnz
  1182  00C1  283D               	goto	l1787
  1183  00C2  28C3               	goto	l232
  1184  00C3                     l232:	
  1185  00C3  0008               	return
  1186  00C4                     __end_of_ActualizarMEFUART:	
  1187                           
  1188                           	psect	text6
  1189  02AA                     __ptext6:	
  1190 ;; *************** function _uartWriteByte *****************
  1191 ;; Defined at:
  1192 ;;		line 91 in file "user.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;  value           1    wreg     unsigned char 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  value           1    0[BANK0 ] unsigned char 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         0       0       0       0       0
  1207 ;;      Locals:         0       1       0       0       0
  1208 ;;      Temps:          0       0       0       0       0
  1209 ;;      Totals:         0       1       0       0       0
  1210 ;;Total ram usage:        1 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    1
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_ActualizarMEFUART
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           
  1221                           ;psect for function _uartWriteByte
  1222  02AA                     _uartWriteByte:	
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _uartWriteByte: [wreg]
  1226                           ;uartWriteByte@value stored from wreg
  1227  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1228  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1229  02AC  00A0               	movwf	uartWriteByte@value
  1230  02AD                     l174:	
  1231                           ;user.c: 93: continue;
  1232                           
  1233                           ;user.c: 92: while (!TXIF)
  1234                           
  1235  02AD  1E0C               	btfss	12,4	;volatile
  1236  02AE  2AAD               	goto	l174
  1237                           
  1238                           ;user.c: 94: TXREG = value;
  1239  02AF  0820               	movf	uartWriteByte@value,w
  1240  02B0  0099               	movwf	25	;volatile
  1241  02B1  0008               	return
  1242  02B2                     __end_of_uartWriteByte:	
  1243                           
  1244                           	psect	text7
  1245  026F                     __ptext7:	
  1246 ;; *************** function _uartReadByte *****************
  1247 ;; Defined at:
  1248 ;;		line 83 in file "user.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  receivedByte    1    wreg     PTR unsigned char 
  1251 ;;		 -> ActualizarMEFUART@aux(1), ActualizarMEFUART@res(1), 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  receivedByte    1    1[BANK0 ] PTR unsigned char 
  1254 ;;		 -> ActualizarMEFUART@aux(1), ActualizarMEFUART@res(1), 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;		None               void
  1257 ;; Registers used:
  1258 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         0       0       0       0       0
  1265 ;;      Locals:         0       1       0       0       0
  1266 ;;      Temps:          0       1       0       0       0
  1267 ;;      Totals:         0       2       0       0       0
  1268 ;;Total ram usage:        2 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    1
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_ActualizarMEFUART
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function _uartReadByte
  1280  026F                     _uartReadByte:	
  1281                           
  1282                           ;incstack = 0
  1283                           ; Regs used in _uartReadByte: [wreg-fsr0h+status,2+status,0]
  1284                           ;uartReadByte@receivedByte stored from wreg
  1285  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0271  00A1               	movwf	uartReadByte@receivedByte
  1288                           
  1289                           ;user.c: 84: if (RCIF) {
  1290  0272  1E8C               	btfss	12,5	;volatile
  1291  0273  2A7D               	goto	l1677
  1292                           
  1293                           ;user.c: 85: *receivedByte = RCREG;
  1294  0274  081A               	movf	26,w	;volatile
  1295  0275  00A0               	movwf	??_uartReadByte
  1296  0276  0821               	movf	uartReadByte@receivedByte,w
  1297  0277  0084               	movwf	4
  1298  0278  0820               	movf	??_uartReadByte,w
  1299  0279  1383               	bcf	3,7	;select IRP bank0
  1300  027A  0080               	movwf	0
  1301                           
  1302                           ;user.c: 86: return 1;
  1303  027B  1403               	setc
  1304  027C  0008               	return
  1305  027D                     l1677:	
  1306                           
  1307                           ;user.c: 87: }
  1308                           ;user.c: 88: return 0;
  1309  027D  1003               	clrc
  1310  027E  0008               	return
  1311  027F                     __end_of_uartReadByte:	
  1312                           
  1313                           	psect	text8
  1314  02D0                     __ptext8:	
  1315 ;; *************** function _TxMode *****************
  1316 ;; Defined at:
  1317 ;;		line 98 in file "user.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		None
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1331 ;;      Params:         0       0       0       0       0
  1332 ;;      Locals:         0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0
  1334 ;;      Totals:         0       0       0       0       0
  1335 ;;Total ram usage:        0 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    1
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_ActualizarMEFUART
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function _TxMode
  1347  02D0                     _TxMode:	
  1348                           
  1349                           ;user.c: 99: PORTAbits.RA2=0;
  1350                           
  1351                           ;incstack = 0
  1352                           ; Regs used in _TxMode: []
  1353  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1354  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1355  02D2  1105               	bcf	5,2	;volatile
  1356                           
  1357                           ;user.c: 100: PORTAbits.RA1=1;
  1358  02D3  1485               	bsf	5,1	;volatile
  1359  02D4  0008               	return
  1360  02D5                     __end_of_TxMode:	
  1361                           
  1362                           	psect	text9
  1363  02D5                     __ptext9:	
  1364 ;; *************** function _RxMode *****************
  1365 ;; Defined at:
  1366 ;;		line 103 in file "user.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		None
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0
  1383 ;;      Totals:         0       0       0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    1
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_ActualizarMEFUART
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _RxMode
  1396  02D5                     _RxMode:	
  1397                           
  1398                           ;user.c: 104: PORTAbits.RA2=0;
  1399                           
  1400                           ;incstack = 0
  1401                           ; Regs used in _RxMode: []
  1402  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1403  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1404  02D7  1105               	bcf	5,2	;volatile
  1405                           
  1406                           ;user.c: 105: PORTAbits.RA1=0;
  1407  02D8  1085               	bcf	5,1	;volatile
  1408  02D9  0008               	return
  1409  02DA                     __end_of_RxMode:	
  1410                           
  1411                           	psect	text10
  1412  00C4                     __ptext10:	
  1413 ;; *************** function _ActualizarMEFI2C *****************
  1414 ;; Defined at:
  1415 ;;		line 123 in file "user.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         0       0       0       0       0
  1430 ;;      Locals:         0       0       0       0       0
  1431 ;;      Temps:          0       4       0       0       0
  1432 ;;      Totals:         0       4       0       0       0
  1433 ;;Total ram usage:        4 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    5
  1436 ;; This function calls:
  1437 ;;		_I2C_ReadFromAddress
  1438 ;;		_I2C_SendOne
  1439 ;;		_I2C_SendZero
  1440 ;;		_I2C_Start
  1441 ;;		_I2C_Stop
  1442 ;;		_I2C_WriteByte
  1443 ;;		_I2C_WriteToAddress
  1444 ;;		_My_I2C_ReadResult
  1445 ;;		_tickRead
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function _ActualizarMEFI2C
  1453  00C4                     _ActualizarMEFI2C:	
  1454                           
  1455                           ;user.c: 124: static tick_t tinicioi2c;
  1456                           ;user.c: 126: switch (estadoActualI2C) {
  1457                           
  1458                           ;incstack = 0
  1459                           ; Regs used in _ActualizarMEFI2C: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1460  00C4  2937               	goto	l1773
  1461  00C5                     l1733:	
  1462                           ;user.c: 127: case REQUEST:
  1463                           
  1464                           
  1465                           ;user.c: 128: I2C_Start();
  1466  00C5  118A  2234  118A   	fcall	_I2C_Start
  1467                           
  1468                           ;user.c: 129: I2C_WriteToAddress(0b0100011);
  1469  00C8  3023               	movlw	35
  1470  00C9  118A  225D  118A   	fcall	_I2C_WriteToAddress
  1471                           
  1472                           ;user.c: 130: I2C_WriteByte(0b00010001);
  1473  00CC  3011               	movlw	17
  1474  00CD  118A  218F  118A   	fcall	_I2C_WriteByte
  1475                           
  1476                           ;user.c: 131: estadoActualI2C = WAIT;
  1477  00D0  01F5               	clrf	_estadoActualI2C
  1478  00D1  0AF5               	incf	_estadoActualI2C,f
  1479                           
  1480                           ;user.c: 132: tinicioi2c = tickRead();
  1481  00D2  118A  229D         	fcall	_tickRead
  1482  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1483  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1484  00D6  0821               	movf	?_tickRead+1,w
  1485  00D7  00B2               	movwf	ActualizarMEFI2C@tinicioi2c+1
  1486  00D8  0820               	movf	?_tickRead,w
  1487  00D9  00B1               	movwf	ActualizarMEFI2C@tinicioi2c
  1488                           
  1489                           ;user.c: 133: break;
  1490  00DA  0008               	return
  1491  00DB                     l1743:	
  1492                           ;user.c: 134: case WAIT:
  1493                           
  1494                           
  1495                           ;user.c: 135: if (tickRead() - tinicioi2c > 180) {
  1496  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1497  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1498  00DD  0931               	comf	ActualizarMEFI2C@tinicioi2c,w
  1499  00DE  00AB               	movwf	??_ActualizarMEFI2C
  1500  00DF  0932               	comf	ActualizarMEFI2C@tinicioi2c+1,w
  1501  00E0  00AC               	movwf	??_ActualizarMEFI2C+1
  1502  00E1  0AAB               	incf	??_ActualizarMEFI2C,f
  1503  00E2  1903               	skipnz
  1504  00E3  0AAC               	incf	??_ActualizarMEFI2C+1,f
  1505  00E4  118A  229D  118A   	fcall	_tickRead
  1506  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1507  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1508  00E9  082B               	movf	??_ActualizarMEFI2C,w
  1509  00EA  0720               	addwf	?_tickRead,w
  1510  00EB  00AD               	movwf	??_ActualizarMEFI2C+2
  1511  00EC  082C               	movf	??_ActualizarMEFI2C+1,w
  1512  00ED  1803               	skipnc
  1513  00EE  0A2C               	incf	??_ActualizarMEFI2C+1,w
  1514  00EF  0721               	addwf	?_tickRead+1,w
  1515  00F0  00AE               	movwf	??_ActualizarMEFI2C+3
  1516  00F1  3000               	movlw	0
  1517  00F2  022E               	subwf	??_ActualizarMEFI2C+3,w
  1518  00F3  30B5               	movlw	181
  1519  00F4  1903               	skipnz
  1520  00F5  022D               	subwf	??_ActualizarMEFI2C+2,w
  1521  00F6  1C03               	skipc
  1522  00F7  0008               	return
  1523                           
  1524                           ;user.c: 136: estadoActualI2C = REPLY;
  1525  00F8  3002               	movlw	2
  1526  00F9  00AB               	movwf	??_ActualizarMEFI2C
  1527  00FA  082B               	movf	??_ActualizarMEFI2C,w
  1528  00FB  00F5               	movwf	_estadoActualI2C
  1529                           
  1530                           ;user.c: 137: }
  1531                           ;user.c: 138: break;
  1532  00FC  0008               	return
  1533  00FD                     l1747:	
  1534                           ;user.c: 139: case REPLY:
  1535                           
  1536                           
  1537                           ;user.c: 140: result = 0;
  1538  00FD  01F1               	clrf	_result
  1539  00FE  01F2               	clrf	_result+1
  1540                           
  1541                           ;user.c: 141: I2C_Start();
  1542  00FF  118A  2234  118A   	fcall	_I2C_Start
  1543                           
  1544                           ;user.c: 142: I2C_ReadFromAddress(0b0100011);
  1545  0102  3023               	movlw	35
  1546  0103  118A  22B2  118A   	fcall	_I2C_ReadFromAddress
  1547                           
  1548                           ;user.c: 143: result = My_I2C_ReadResult();
  1549  0106  118A  2143  118A   	fcall	_My_I2C_ReadResult
  1550  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1551  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1552  010B  00AB               	movwf	??_ActualizarMEFI2C
  1553  010C  01AC               	clrf	??_ActualizarMEFI2C+1
  1554  010D  082B               	movf	??_ActualizarMEFI2C,w
  1555  010E  00F1               	movwf	_result
  1556  010F  082C               	movf	??_ActualizarMEFI2C+1,w
  1557  0110  00F2               	movwf	_result+1
  1558                           
  1559                           ;user.c: 144: result <<= 8;
  1560  0111  3008               	movlw	8
  1561  0112                     u685:	
  1562  0112  1003               	clrc
  1563  0113  0DF1               	rlf	_result,f
  1564  0114  0DF2               	rlf	_result+1,f
  1565  0115  3EFF               	addlw	-1
  1566  0116  1D03               	skipz
  1567  0117  2912               	goto	u685
  1568                           
  1569                           ;user.c: 146: I2C_SendZero();
  1570  0118  118A  227F  118A   	fcall	_I2C_SendZero
  1571                           
  1572                           ;user.c: 147: result += My_I2C_ReadResult();
  1573  011B  118A  2143  118A   	fcall	_My_I2C_ReadResult
  1574  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1575  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0120  00AB               	movwf	??_ActualizarMEFI2C
  1577  0121  01AC               	clrf	??_ActualizarMEFI2C+1
  1578  0122  082B               	movf	??_ActualizarMEFI2C,w
  1579  0123  07F1               	addwf	_result,f
  1580  0124  1803               	skipnc
  1581  0125  0AF2               	incf	_result+1,f
  1582  0126  082C               	movf	??_ActualizarMEFI2C+1,w
  1583  0127  07F2               	addwf	_result+1,f
  1584                           
  1585                           ;user.c: 148: I2C_SendOne();
  1586  0128  118A  228E  118A   	fcall	_I2C_SendOne
  1587                           
  1588                           ;user.c: 149: I2C_Stop();
  1589  012B  118A  2206  118A   	fcall	_I2C_Stop
  1590                           
  1591                           ;user.c: 150: if(result&0x0080){
  1592  012E  1FF1               	btfss	_result,7
  1593  012F  2935               	goto	l1771
  1594                           
  1595                           ;user.c: 151: result&=0xFF7F;
  1596  0130  307F               	movlw	127
  1597  0131  05F1               	andwf	_result,f
  1598  0132  30FF               	movlw	255
  1599  0133  05F2               	andwf	_result+1,f
  1600                           
  1601                           ;user.c: 152: result|=0x4000;
  1602  0134  1772               	bsf	_result+1,6
  1603  0135                     l1771:	
  1604                           
  1605                           ;user.c: 153: }
  1606                           ;user.c: 154: estadoActualI2C = REQUEST;
  1607  0135  01F5               	clrf	_estadoActualI2C
  1608                           
  1609                           ;user.c: 155: }
  1610  0136  0008               	return
  1611  0137                     l1773:	
  1612  0137  0875               	movf	_estadoActualI2C,w
  1613                           
  1614                           ; Switch size 1, requested type "space"
  1615                           ; Number of cases is 3, Range of values is 0 to 2
  1616                           ; switch strategies available:
  1617                           ; Name         Instructions Cycles
  1618                           ; simple_byte           10     6 (average)
  1619                           ; direct_byte           13     7 (fixed)
  1620                           ; jumptable            260     6 (fixed)
  1621                           ;	Chosen strategy is simple_byte
  1622  0138  3A00               	xorlw	0	; case 0
  1623  0139  1903               	skipnz
  1624  013A  28C5               	goto	l1733
  1625  013B  3A01               	xorlw	1	; case 1
  1626  013C  1903               	skipnz
  1627  013D  28DB               	goto	l1743
  1628  013E  3A03               	xorlw	3	; case 2
  1629  013F  1903               	skipnz
  1630  0140  28FD               	goto	l1747
  1631  0141  2942               	goto	l201
  1632  0142                     l201:	
  1633  0142  0008               	return
  1634  0143                     __end_of_ActualizarMEFI2C:	
  1635                           
  1636                           	psect	text11
  1637  029D                     __ptext11:	
  1638 ;; *************** function _tickRead *****************
  1639 ;; Defined at:
  1640 ;;		line 108 in file "user.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  aux             2    2[BANK0 ] unsigned int 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  2    0[BANK0 ] unsigned int 
  1647 ;; Registers used:
  1648 ;;		wreg
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1654 ;;      Params:         0       2       0       0       0
  1655 ;;      Locals:         0       2       0       0       0
  1656 ;;      Temps:          0       0       0       0       0
  1657 ;;      Totals:         0       4       0       0       0
  1658 ;;Total ram usage:        4 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    1
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_ActualizarMEFI2C
  1665 ;;		_ActualizarMEFUART
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           
  1670                           ;psect for function _tickRead
  1671  029D                     _tickRead:	
  1672                           
  1673                           ;user.c: 109: tick_t aux;
  1674                           ;user.c: 110: GIE = 0;
  1675                           
  1676                           ;incstack = 0
  1677                           ; Regs used in _tickRead: [wreg]
  1678  029D  138B               	bcf	11,7	;volatile
  1679                           
  1680                           ;user.c: 111: aux = tickCounter;
  1681  029E  0874               	movf	_tickCounter+1,w	;volatile
  1682  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1683  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1684  02A1  00A3               	movwf	tickRead@aux+1
  1685  02A2  0873               	movf	_tickCounter,w	;volatile
  1686  02A3  00A2               	movwf	tickRead@aux
  1687                           
  1688                           ;user.c: 112: GIE = 1;
  1689  02A4  178B               	bsf	11,7	;volatile
  1690                           
  1691                           ;user.c: 113: return aux;
  1692  02A5  0823               	movf	tickRead@aux+1,w
  1693  02A6  00A1               	movwf	?_tickRead+1
  1694  02A7  0822               	movf	tickRead@aux,w
  1695  02A8  00A0               	movwf	?_tickRead
  1696  02A9  0008               	return
  1697  02AA                     __end_of_tickRead:	
  1698                           
  1699                           	psect	text12
  1700  0143                     __ptext12:	
  1701 ;; *************** function _My_I2C_ReadResult *****************
  1702 ;; Defined at:
  1703 ;;		line 272 in file "i2c.h"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  x               2    3[BANK0 ] int 
  1708 ;;  readback        1    5[BANK0 ] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      unsigned char 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       0       0       0       0
  1719 ;;      Locals:         0       3       0       0       0
  1720 ;;      Temps:          0       2       0       0       0
  1721 ;;      Totals:         0       5       0       0       0
  1722 ;;Total ram usage:        5 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    2
  1725 ;; This function calls:
  1726 ;;		_I2C_Delay
  1727 ;;		_I2C_WaitForSlave
  1728 ;;		_SCL_High
  1729 ;;		_SCL_Low
  1730 ;;		_SDA_High
  1731 ;; This function is called by:
  1732 ;;		_ActualizarMEFI2C
  1733 ;;		_I2C_ReadRegister2
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           
  1738                           ;psect for function _My_I2C_ReadResult
  1739  0143                     _My_I2C_ReadResult:	
  1740                           
  1741                           ;i2c.h: 274: char readback = 0x00;
  1742                           
  1743                           ;incstack = 0
  1744                           ; Regs used in _My_I2C_ReadResult: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1745  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1746  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1747  0145  01A5               	clrf	My_I2C_ReadResult@readback
  1748                           
  1749                           ;i2c.h: 276: SDA_High();
  1750  0146  118A  22DE  118A   	fcall	_SDA_High
  1751                           
  1752                           ;i2c.h: 277: for(int x=0;x<8;x++){
  1753  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1754  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1755  014B  01A3               	clrf	My_I2C_ReadResult@x
  1756  014C  01A4               	clrf	My_I2C_ReadResult@x+1
  1757  014D  0824               	movf	My_I2C_ReadResult@x+1,w
  1758  014E  3A80               	xorlw	128
  1759  014F  00FF               	movwf	127
  1760  0150  3080               	movlw	128
  1761  0151  027F               	subwf	127,w
  1762  0152  1D03               	skipz
  1763  0153  2956               	goto	u625
  1764  0154  3008               	movlw	8
  1765  0155  0223               	subwf	My_I2C_ReadResult@x,w
  1766  0156                     u625:	
  1767  0156  1803               	btfsc	3,0
  1768  0157  298B               	goto	l1641
  1769  0158                     l1621:	
  1770                           
  1771                           ;i2c.h: 278: readback = (readback << 1) & 0xFE;
  1772  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1773  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1774  015A  0825               	movf	My_I2C_ReadResult@readback,w
  1775  015B  00A1               	movwf	??_My_I2C_ReadResult
  1776  015C  0721               	addwf	??_My_I2C_ReadResult,w
  1777  015D  39FE               	andlw	254
  1778  015E  00A2               	movwf	??_My_I2C_ReadResult+1
  1779  015F  0822               	movf	??_My_I2C_ReadResult+1,w
  1780  0160  00A5               	movwf	My_I2C_ReadResult@readback
  1781                           
  1782                           ;i2c.h: 279: SCL_High();
  1783  0161  118A  22E2  118A   	fcall	_SCL_High
  1784                           
  1785                           ;i2c.h: 280: I2C_WaitForSlave();
  1786  0164  118A  22E8  118A   	fcall	_I2C_WaitForSlave
  1787                           
  1788                           ;i2c.h: 281: if(PORTB & 0b00000010){readback++;}
  1789  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0169  1C86               	btfss	6,1	;volatile
  1792  016A  296F               	goto	l1631
  1793  016B  3001               	movlw	1
  1794  016C  00A1               	movwf	??_My_I2C_ReadResult
  1795  016D  0821               	movf	??_My_I2C_ReadResult,w
  1796  016E  07A5               	addwf	My_I2C_ReadResult@readback,f
  1797  016F                     l1631:	
  1798                           
  1799                           ;i2c.h: 282: I2C_Delay();
  1800  016F  118A  22BA  118A   	fcall	_I2C_Delay
  1801                           
  1802                           ;i2c.h: 283: SCL_Low();
  1803  0172  118A  22C9  118A   	fcall	_SCL_Low
  1804                           
  1805                           ;i2c.h: 284: I2C_Delay();
  1806  0175  118A  22BA  118A   	fcall	_I2C_Delay
  1807  0178  3001               	movlw	1
  1808  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1809  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1810  017B  07A3               	addwf	My_I2C_ReadResult@x,f
  1811  017C  1803               	skipnc
  1812  017D  0AA4               	incf	My_I2C_ReadResult@x+1,f
  1813  017E  3000               	movlw	0
  1814  017F  07A4               	addwf	My_I2C_ReadResult@x+1,f
  1815  0180  0824               	movf	My_I2C_ReadResult@x+1,w
  1816  0181  3A80               	xorlw	128
  1817  0182  00FF               	movwf	127
  1818  0183  3080               	movlw	128
  1819  0184  027F               	subwf	127,w
  1820  0185  1D03               	skipz
  1821  0186  2989               	goto	u645
  1822  0187  3008               	movlw	8
  1823  0188  0223               	subwf	My_I2C_ReadResult@x,w
  1824  0189                     u645:	
  1825  0189  1C03               	skipc
  1826  018A  2958               	goto	l1621
  1827  018B                     l1641:	
  1828                           
  1829                           ;i2c.h: 285: }
  1830                           ;i2c.h: 292: return(readback);
  1831  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1832  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1833  018D  0825               	movf	My_I2C_ReadResult@readback,w
  1834  018E  0008               	return
  1835  018F                     __end_of_My_I2C_ReadResult:	
  1836                           
  1837                           	psect	text13
  1838  02E8                     __ptext13:	
  1839 ;; *************** function _I2C_WaitForSlave *****************
  1840 ;; Defined at:
  1841 ;;		line 227 in file "i2c.h"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		None
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1855 ;;      Params:         0       0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0
  1858 ;;      Totals:         0       0       0       0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_My_I2C_ReadResult
  1866 ;;		_I2C_ReadResult
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function _I2C_WaitForSlave
  1872  02E8                     _I2C_WaitForSlave:	
  1873                           
  1874                           ;incstack = 0
  1875                           ; Regs used in _I2C_WaitForSlave: []
  1876  02E8  0008               	return
  1877  02E9                     __end_of_I2C_WaitForSlave:	
  1878                           
  1879                           	psect	text14
  1880  025D                     __ptext14:	
  1881 ;; *************** function _I2C_WriteToAddress *****************
  1882 ;; Defined at:
  1883 ;;		line 296 in file "i2c.h"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  deviceAddres    1    wreg     unsigned char 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  deviceAddres    1    9[BANK0 ] unsigned char 
  1888 ;;  temp            1   10[BANK0 ] unsigned char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1898 ;;      Params:         0       0       0       0       0
  1899 ;;      Locals:         0       2       0       0       0
  1900 ;;      Temps:          0       2       0       0       0
  1901 ;;      Totals:         0       4       0       0       0
  1902 ;;Total ram usage:        4 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    4
  1905 ;; This function calls:
  1906 ;;		_I2C_WriteByte
  1907 ;; This function is called by:
  1908 ;;		_ActualizarMEFI2C
  1909 ;;		_I2C_ReadRegister
  1910 ;;		_I2C_WriteRegister
  1911 ;;		_I2C_ReadRegister2
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function _I2C_WriteToAddress
  1917  025D                     _I2C_WriteToAddress:	
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _I2C_WriteToAddress: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1921                           ;I2C_WriteToAddress@deviceAddress stored from wreg
  1922  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1923  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1924  025F  00A9               	movwf	I2C_WriteToAddress@deviceAddress
  1925                           
  1926                           ;i2c.h: 297: char temp;
  1927                           ;i2c.h: 298: temp = deviceAddress << 1;
  1928  0260  0829               	movf	I2C_WriteToAddress@deviceAddress,w
  1929  0261  00A7               	movwf	??_I2C_WriteToAddress
  1930  0262  0727               	addwf	??_I2C_WriteToAddress,w
  1931  0263  00A8               	movwf	??_I2C_WriteToAddress+1
  1932  0264  0828               	movf	??_I2C_WriteToAddress+1,w
  1933  0265  00AA               	movwf	I2C_WriteToAddress@temp
  1934                           
  1935                           ;i2c.h: 299: temp = temp & 0xFE;
  1936  0266  082A               	movf	I2C_WriteToAddress@temp,w
  1937  0267  39FE               	andlw	254
  1938  0268  00A7               	movwf	??_I2C_WriteToAddress
  1939  0269  0827               	movf	??_I2C_WriteToAddress,w
  1940  026A  00AA               	movwf	I2C_WriteToAddress@temp
  1941                           
  1942                           ;i2c.h: 300: I2C_WriteByte(temp);
  1943  026B  082A               	movf	I2C_WriteToAddress@temp,w
  1944  026C  118A  218F         	fcall	_I2C_WriteByte
  1945  026E  0008               	return
  1946  026F                     __end_of_I2C_WriteToAddress:	
  1947                           
  1948                           	psect	text15
  1949  0206                     __ptext15:	
  1950 ;; *************** function _I2C_Stop *****************
  1951 ;; Defined at:
  1952 ;;		line 215 in file "i2c.h"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         0       0       0       0       0
  1967 ;;      Locals:         0       0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0
  1969 ;;      Totals:         0       0       0       0       0
  1970 ;;Total ram usage:        0 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    2
  1973 ;; This function calls:
  1974 ;;		_I2C_Delay
  1975 ;;		_SCL_High
  1976 ;;		_SCL_Low
  1977 ;;		_SDA_High
  1978 ;;		_SDA_Low
  1979 ;; This function is called by:
  1980 ;;		_ActualizarMEFI2C
  1981 ;;		_I2C_WriteRegister
  1982 ;;		_I2C_Test
  1983 ;;		_I2C_ReadRegister2
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           
  1988                           ;psect for function _I2C_Stop
  1989  0206                     _I2C_Stop:	
  1990                           
  1991                           ;i2c.h: 216: SCL_Low();
  1992                           
  1993                           ;incstack = 0
  1994                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  1995  0206  118A  22C9  118A   	fcall	_SCL_Low
  1996                           
  1997                           ;i2c.h: 217: I2C_Delay();
  1998  0209  118A  22BA  118A   	fcall	_I2C_Delay
  1999                           
  2000                           ;i2c.h: 218: SDA_Low();
  2001  020C  118A  22C2  118A   	fcall	_SDA_Low
  2002                           
  2003                           ;i2c.h: 219: I2C_Delay();
  2004  020F  118A  22BA  118A   	fcall	_I2C_Delay
  2005                           
  2006                           ;i2c.h: 220: SCL_High();
  2007  0212  118A  22E2  118A   	fcall	_SCL_High
  2008                           
  2009                           ;i2c.h: 221: I2C_Delay();
  2010  0215  118A  22BA  118A   	fcall	_I2C_Delay
  2011                           
  2012                           ;i2c.h: 222: SDA_High();
  2013  0218  118A  22DE  118A   	fcall	_SDA_High
  2014                           
  2015                           ;i2c.h: 223: I2C_Delay();
  2016  021B  118A  22BA         	fcall	_I2C_Delay
  2017  021D  0008               	return
  2018  021E                     __end_of_I2C_Stop:	
  2019                           
  2020                           	psect	text16
  2021  0234                     __ptext16:	
  2022 ;; *************** function _I2C_Start *****************
  2023 ;; Defined at:
  2024 ;;		line 204 in file "i2c.h"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0, pclath, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2038 ;;      Params:         0       0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0
  2041 ;;      Totals:         0       0       0       0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    2
  2045 ;; This function calls:
  2046 ;;		_I2C_Delay
  2047 ;;		_SCL_High
  2048 ;;		_SCL_Low
  2049 ;;		_SDA_High
  2050 ;;		_SDA_Low
  2051 ;; This function is called by:
  2052 ;;		_ActualizarMEFI2C
  2053 ;;		_I2C_ReadRegister
  2054 ;;		_I2C_WriteRegister
  2055 ;;		_I2C_Test
  2056 ;;		_I2C_ReadRegister2
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function _I2C_Start
  2062  0234                     _I2C_Start:	
  2063                           
  2064                           ;i2c.h: 205: SDA_High();
  2065                           
  2066                           ;incstack = 0
  2067                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2068  0234  118A  22DE  118A   	fcall	_SDA_High
  2069                           
  2070                           ;i2c.h: 206: SCL_High();
  2071  0237  118A  22E2  118A   	fcall	_SCL_High
  2072                           
  2073                           ;i2c.h: 207: I2C_Delay();
  2074  023A  118A  22BA  118A   	fcall	_I2C_Delay
  2075                           
  2076                           ;i2c.h: 208: SDA_Low();
  2077  023D  118A  22C2  118A   	fcall	_SDA_Low
  2078                           
  2079                           ;i2c.h: 209: I2C_Delay();
  2080  0240  118A  22BA  118A   	fcall	_I2C_Delay
  2081                           
  2082                           ;i2c.h: 210: SCL_Low();
  2083  0243  118A  22C9  118A   	fcall	_SCL_Low
  2084                           
  2085                           ;i2c.h: 211: I2C_Delay();
  2086  0246  118A  22BA         	fcall	_I2C_Delay
  2087  0248  0008               	return
  2088  0249                     __end_of_I2C_Start:	
  2089                           
  2090                           	psect	text17
  2091  02B2                     __ptext17:	
  2092 ;; *************** function _I2C_ReadFromAddress *****************
  2093 ;; Defined at:
  2094 ;;		line 303 in file "i2c.h"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  deviceAddres    1    wreg     unsigned char 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  deviceAddres    1    7[BANK0 ] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         0       0       0       0       0
  2109 ;;      Locals:         0       1       0       0       0
  2110 ;;      Temps:          0       0       0       0       0
  2111 ;;      Totals:         0       1       0       0       0
  2112 ;;Total ram usage:        1 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    4
  2115 ;; This function calls:
  2116 ;;		_I2C_WriteByte
  2117 ;; This function is called by:
  2118 ;;		_ActualizarMEFI2C
  2119 ;;		_I2C_ReadRegister
  2120 ;;		_I2C_ReadRegister2
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _I2C_ReadFromAddress
  2126  02B2                     _I2C_ReadFromAddress:	
  2127                           
  2128                           ;incstack = 0
  2129                           ; Regs used in _I2C_ReadFromAddress: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2130                           ;I2C_ReadFromAddress@deviceAddress stored from wreg
  2131  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2132  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2133  02B4  00A7               	movwf	I2C_ReadFromAddress@deviceAddress
  2134                           
  2135                           ;i2c.h: 304: I2C_WriteByte((deviceAddress << 1) | 0x01);
  2136  02B5  1403               	setc
  2137  02B6  0D27               	rlf	I2C_ReadFromAddress@deviceAddress,w
  2138  02B7  118A  218F         	fcall	_I2C_WriteByte
  2139  02B9  0008               	return
  2140  02BA                     __end_of_I2C_ReadFromAddress:	
  2141                           
  2142                           	psect	text18
  2143  018F                     __ptext18:	
  2144 ;; *************** function _I2C_WriteByte *****************
  2145 ;; Defined at:
  2146 ;;		line 234 in file "i2c.h"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  theByte         1    wreg     unsigned char 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  theByte         1    3[BANK0 ] unsigned char 
  2151 ;;  x               2    4[BANK0 ] int 
  2152 ;;  temp            1    6[BANK0 ] unsigned char 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2162 ;;      Params:         0       0       0       0       0
  2163 ;;      Locals:         0       4       0       0       0
  2164 ;;      Temps:          0       2       0       0       0
  2165 ;;      Totals:         0       6       0       0       0
  2166 ;;Total ram usage:        6 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    3
  2169 ;; This function calls:
  2170 ;;		_I2C_SendOne
  2171 ;;		_I2C_SendZero
  2172 ;; This function is called by:
  2173 ;;		_I2C_WriteToAddress
  2174 ;;		_I2C_ReadFromAddress
  2175 ;;		_ActualizarMEFI2C
  2176 ;;		_I2C_ReadRegister
  2177 ;;		_I2C_WriteRegister
  2178 ;;		_I2C_Test
  2179 ;;		_I2C_ReadRegister2
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function _I2C_WriteByte
  2185  018F                     _I2C_WriteByte:	
  2186                           
  2187                           ;incstack = 0
  2188                           ; Regs used in _I2C_WriteByte: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2189                           ;I2C_WriteByte@theByte stored from wreg
  2190  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2192  0191  00A3               	movwf	I2C_WriteByte@theByte
  2193                           
  2194                           ;i2c.h: 235: char temp = theByte;
  2195  0192  0823               	movf	I2C_WriteByte@theByte,w
  2196  0193  00A1               	movwf	??_I2C_WriteByte
  2197  0194  0821               	movf	??_I2C_WriteByte,w
  2198  0195  00A6               	movwf	I2C_WriteByte@temp
  2199                           
  2200                           ;i2c.h: 237: for(int x=0;x<8;x++){
  2201  0196  01A4               	clrf	I2C_WriteByte@x
  2202  0197  01A5               	clrf	I2C_WriteByte@x+1
  2203  0198  0825               	movf	I2C_WriteByte@x+1,w
  2204  0199  3A80               	xorlw	128
  2205  019A  00FF               	movwf	127
  2206  019B  3080               	movlw	128
  2207  019C  027F               	subwf	127,w
  2208  019D  1D03               	skipz
  2209  019E  29A1               	goto	u595
  2210  019F  3008               	movlw	8
  2211  01A0  0224               	subwf	I2C_WriteByte@x,w
  2212  01A1                     u595:	
  2213  01A1  1803               	btfsc	3,0
  2214  01A2  29C7               	goto	l1587
  2215  01A3                     l113:	
  2216                           
  2217                           ;i2c.h: 238: if((temp & 0x80) == 0x80){I2C_SendOne();}
  2218  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2219  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2220  01A5  1FA6               	btfss	I2C_WriteByte@temp,7
  2221  01A6  29AB               	goto	l1579
  2222  01A7  118A  228E  118A   	fcall	_I2C_SendOne
  2223  01AA  29AE               	goto	l1581
  2224  01AB                     l1579:	
  2225                           
  2226                           ;i2c.h: 239: else{I2C_SendZero();}
  2227  01AB  118A  227F  118A   	fcall	_I2C_SendZero
  2228  01AE                     l1581:	
  2229                           
  2230                           ;i2c.h: 240: temp = temp << 1;
  2231  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2232  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2233  01B0  0826               	movf	I2C_WriteByte@temp,w
  2234  01B1  00A1               	movwf	??_I2C_WriteByte
  2235  01B2  0721               	addwf	??_I2C_WriteByte,w
  2236  01B3  00A2               	movwf	??_I2C_WriteByte+1
  2237  01B4  0822               	movf	??_I2C_WriteByte+1,w
  2238  01B5  00A6               	movwf	I2C_WriteByte@temp
  2239  01B6  3001               	movlw	1
  2240  01B7  07A4               	addwf	I2C_WriteByte@x,f
  2241  01B8  1803               	skipnc
  2242  01B9  0AA5               	incf	I2C_WriteByte@x+1,f
  2243  01BA  3000               	movlw	0
  2244  01BB  07A5               	addwf	I2C_WriteByte@x+1,f
  2245  01BC  0825               	movf	I2C_WriteByte@x+1,w
  2246  01BD  3A80               	xorlw	128
  2247  01BE  00FF               	movwf	127
  2248  01BF  3080               	movlw	128
  2249  01C0  027F               	subwf	127,w
  2250  01C1  1D03               	skipz
  2251  01C2  29C5               	goto	u615
  2252  01C3  3008               	movlw	8
  2253  01C4  0224               	subwf	I2C_WriteByte@x,w
  2254  01C5                     u615:	
  2255  01C5  1C03               	skipc
  2256  01C6  29A3               	goto	l113
  2257  01C7                     l1587:	
  2258                           
  2259                           ;i2c.h: 241: }
  2260                           ;i2c.h: 243: I2C_SendOne();
  2261  01C7  118A  228E         	fcall	_I2C_SendOne
  2262  01C9  0008               	return
  2263  01CA                     __end_of_I2C_WriteByte:	
  2264                           
  2265                           	psect	text19
  2266  027F                     __ptext19:	
  2267 ;; *************** function _I2C_SendZero *****************
  2268 ;; Defined at:
  2269 ;;		line 188 in file "i2c.h"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, pclath, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0
  2286 ;;      Totals:         0       0       0       0       0
  2287 ;;Total ram usage:        0 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    2
  2290 ;; This function calls:
  2291 ;;		_I2C_Delay
  2292 ;;		_SCL_High
  2293 ;;		_SCL_Low
  2294 ;;		_SDA_Low
  2295 ;; This function is called by:
  2296 ;;		_I2C_WriteByte
  2297 ;;		_ActualizarMEFI2C
  2298 ;;		_I2C_ReadRegister2
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           
  2303                           ;psect for function _I2C_SendZero
  2304  027F                     _I2C_SendZero:	
  2305                           
  2306                           ;i2c.h: 189: SCL_Low();
  2307                           
  2308                           ;incstack = 0
  2309                           ; Regs used in _I2C_SendZero: [wreg+status,2+status,0+pclath+cstack]
  2310  027F  118A  22C9  118A   	fcall	_SCL_Low
  2311                           
  2312                           ;i2c.h: 190: SDA_Low();
  2313  0282  118A  22C2  118A   	fcall	_SDA_Low
  2314                           
  2315                           ;i2c.h: 191: SCL_High();
  2316  0285  118A  22E2  118A   	fcall	_SCL_High
  2317                           
  2318                           ;i2c.h: 192: I2C_Delay();
  2319  0288  118A  22BA  118A   	fcall	_I2C_Delay
  2320                           
  2321                           ;i2c.h: 193: SCL_Low();
  2322  028B  118A  22C9         	fcall	_SCL_Low
  2323  028D  0008               	return
  2324  028E                     __end_of_I2C_SendZero:	
  2325                           
  2326                           	psect	text20
  2327  02C2                     __ptext20:	
  2328 ;; *************** function _SDA_Low *****************
  2329 ;; Defined at:
  2330 ;;		line 151 in file "i2c.h"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		None
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0
  2347 ;;      Totals:         0       0       0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    1
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_I2C_SendZero
  2355 ;;		_I2C_Start
  2356 ;;		_I2C_Stop
  2357 ;;		_I2C_ReadResult
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function _SDA_Low
  2363  02C2                     _SDA_Low:	
  2364                           
  2365                           ;i2c.h: 154: PORTBbits.RB1=0;
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _SDA_Low: []
  2369  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2370  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2371  02C4  1086               	bcf	6,1	;volatile
  2372                           
  2373                           ;i2c.h: 155: TRISB1=0;
  2374  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2375  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  2376  02C7  1086               	bcf	6,1	;volatile
  2377  02C8  0008               	return
  2378  02C9                     __end_of_SDA_Low:	
  2379                           
  2380                           	psect	text21
  2381  028E                     __ptext21:	
  2382 ;; *************** function _I2C_SendOne *****************
  2383 ;; Defined at:
  2384 ;;		line 196 in file "i2c.h"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0, pclath, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2398 ;;      Params:         0       0       0       0       0
  2399 ;;      Locals:         0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0
  2401 ;;      Totals:         0       0       0       0       0
  2402 ;;Total ram usage:        0 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    2
  2405 ;; This function calls:
  2406 ;;		_I2C_Delay
  2407 ;;		_SCL_High
  2408 ;;		_SCL_Low
  2409 ;;		_SDA_High
  2410 ;; This function is called by:
  2411 ;;		_I2C_WriteByte
  2412 ;;		_ActualizarMEFI2C
  2413 ;;		_I2C_ReadRegister2
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _I2C_SendOne
  2419  028E                     _I2C_SendOne:	
  2420                           
  2421                           ;i2c.h: 197: SCL_Low();
  2422                           
  2423                           ;incstack = 0
  2424                           ; Regs used in _I2C_SendOne: [wreg+status,2+status,0+pclath+cstack]
  2425  028E  118A  22C9  118A   	fcall	_SCL_Low
  2426                           
  2427                           ;i2c.h: 198: SDA_High();
  2428  0291  118A  22DE  118A   	fcall	_SDA_High
  2429                           
  2430                           ;i2c.h: 199: SCL_High();
  2431  0294  118A  22E2  118A   	fcall	_SCL_High
  2432                           
  2433                           ;i2c.h: 200: I2C_Delay();
  2434  0297  118A  22BA  118A   	fcall	_I2C_Delay
  2435                           
  2436                           ;i2c.h: 201: SCL_Low();
  2437  029A  118A  22C9         	fcall	_SCL_Low
  2438  029C  0008               	return
  2439  029D                     __end_of_I2C_SendOne:	
  2440                           
  2441                           	psect	text22
  2442  02DE                     __ptext22:	
  2443 ;; *************** function _SDA_High *****************
  2444 ;; Defined at:
  2445 ;;		line 158 in file "i2c.h"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		None
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2459 ;;      Params:         0       0       0       0       0
  2460 ;;      Locals:         0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0
  2462 ;;      Totals:         0       0       0       0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    1
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_I2C_SendOne
  2470 ;;		_I2C_Start
  2471 ;;		_I2C_Stop
  2472 ;;		_My_I2C_ReadResult
  2473 ;;		_I2C_ReadResult
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           
  2478                           ;psect for function _SDA_High
  2479  02DE                     _SDA_High:	
  2480                           
  2481                           ;i2c.h: 160: TRISB1=1;
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _SDA_High: []
  2485  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2486  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2487  02E0  1486               	bsf	6,1	;volatile
  2488  02E1  0008               	return
  2489  02E2                     __end_of_SDA_High:	
  2490                           
  2491                           	psect	text23
  2492  02C9                     __ptext23:	
  2493 ;; *************** function _SCL_Low *****************
  2494 ;; Defined at:
  2495 ;;		line 138 in file "i2c.h"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		None
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2509 ;;      Params:         0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    1
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_I2C_SendZero
  2520 ;;		_I2C_SendOne
  2521 ;;		_I2C_Start
  2522 ;;		_I2C_Stop
  2523 ;;		_My_I2C_ReadResult
  2524 ;;		_I2C_ReadResult
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function _SCL_Low
  2530  02C9                     _SCL_Low:	
  2531                           
  2532                           ;i2c.h: 142: PORTBbits.RB4=0;
  2533                           
  2534                           ;incstack = 0
  2535                           ; Regs used in _SCL_Low: []
  2536  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2537  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2538  02CB  1206               	bcf	6,4	;volatile
  2539                           
  2540                           ;i2c.h: 143: TRISB4=0;
  2541  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2542  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  2543  02CE  1206               	bcf	6,4	;volatile
  2544  02CF  0008               	return
  2545  02D0                     __end_of_SCL_Low:	
  2546                           
  2547                           	psect	text24
  2548  02E2                     __ptext24:	
  2549 ;; *************** function _SCL_High *****************
  2550 ;; Defined at:
  2551 ;;		line 146 in file "i2c.h"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;		None
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		None
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       0       0       0       0
  2566 ;;      Locals:         0       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0
  2568 ;;      Totals:         0       0       0       0       0
  2569 ;;Total ram usage:        0 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    1
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_I2C_SendZero
  2576 ;;		_I2C_SendOne
  2577 ;;		_I2C_Start
  2578 ;;		_I2C_Stop
  2579 ;;		_My_I2C_ReadResult
  2580 ;;		_I2C_ReadResult
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           
  2585                           ;psect for function _SCL_High
  2586  02E2                     _SCL_High:	
  2587                           
  2588                           ;i2c.h: 148: TRISB4=1;
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in _SCL_High: []
  2592  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2593  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2594  02E4  1606               	bsf	6,4	;volatile
  2595  02E5  0008               	return
  2596  02E6                     __end_of_SCL_High:	
  2597                           
  2598                           	psect	text25
  2599  02BA                     __ptext25:	
  2600 ;; *************** function _I2C_Delay *****************
  2601 ;; Defined at:
  2602 ;;		line 130 in file "i2c.h"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2616 ;;      Params:         0       0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0
  2618 ;;      Temps:          0       1       0       0       0
  2619 ;;      Totals:         0       1       0       0       0
  2620 ;;Total ram usage:        1 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    1
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_I2C_SendZero
  2627 ;;		_I2C_SendOne
  2628 ;;		_I2C_Start
  2629 ;;		_I2C_Stop
  2630 ;;		_My_I2C_ReadResult
  2631 ;;		_I2C_ReadResult
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           
  2636                           ;psect for function _I2C_Delay
  2637  02BA                     _I2C_Delay:	
  2638                           
  2639                           ;i2c.h: 132: _delay((unsigned long)((10)*(4000000L/4000000.0)));
  2640                           
  2641                           ;incstack = 0
  2642                           ; Regs used in _I2C_Delay: [wreg]
  2643  02BA  3002               	movlw	2
  2644  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2645  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2646  02BD  00A0               	movwf	??_I2C_Delay
  2647  02BE                     u897:	
  2648  02BE  0BA0               	decfsz	??_I2C_Delay,f
  2649  02BF  2ABE               	goto	u897
  2650  02C0  0000               	nop
  2651  02C1  0008               	return
  2652  02C2                     __end_of_I2C_Delay:	
  2653                           
  2654                           	psect	text26
  2655  021E                     __ptext26:	
  2656 ;; *************** function _isr *****************
  2657 ;; Defined at:
  2658 ;;		line 19 in file "interrupts.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2672 ;;      Params:         0       0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0
  2674 ;;      Temps:          5       0       0       0       0
  2675 ;;      Totals:         5       0       0       0       0
  2676 ;;Total ram usage:        5 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		Interrupt level 1
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _isr
  2687  021E                     _isr:	
  2688                           
  2689                           ;interrupts.c: 27: TMR0IF = 0;
  2690  021E  110B               	bcf	11,2	;volatile
  2691                           
  2692                           ;interrupts.c: 28: TMR0 += 7;
  2693  021F  3007               	movlw	7
  2694  0220  00F6               	movwf	??_isr
  2695  0221  0876               	movf	??_isr,w
  2696  0222  0781               	addwf	1,f	;volatile
  2697                           
  2698                           ;interrupts.c: 29: tickCounter++;
  2699  0223  3001               	movlw	1
  2700  0224  07F3               	addwf	_tickCounter,f	;volatile
  2701  0225  1803               	skipnc
  2702  0226  0AF4               	incf	_tickCounter+1,f	;volatile
  2703  0227  3000               	movlw	0
  2704  0228  07F4               	addwf	_tickCounter+1,f	;volatile
  2705  0229  087A               	movf	??_isr+4,w
  2706  022A  00FF               	movwf	127
  2707  022B  0879               	movf	??_isr+3,w
  2708  022C  008A               	movwf	10
  2709  022D  0878               	movf	??_isr+2,w
  2710  022E  0084               	movwf	4
  2711  022F  0E77               	swapf	(??_isr+1)^(0+-128),w
  2712  0230  0083               	movwf	3
  2713  0231  0EFE               	swapf	126,f
  2714  0232  0E7E               	swapf	126,w
  2715  0233  0009               	retfie
  2716  0234                     __end_of_isr:	
  2717  007E                     btemp	set	126	;btemp
  2718  007E                     wtemp0	set	126
  2719                           
  2720                           	psect	intentry
  2721  0004                     __pintentry:	
  2722                           ;incstack = 0
  2723                           ; Regs used in _isr: [wreg+status,2+status,0]
  2724                           
  2725  0004                     interrupt_function:	
  2726  007E                     saved_w	set	btemp
  2727  0004  00FE               	movwf	btemp
  2728  0005  0E03               	swapf	3,w
  2729  0006  00F7               	movwf	??_isr+1
  2730  0007  0804               	movf	4,w
  2731  0008  00F8               	movwf	??_isr+2
  2732  0009  080A               	movf	10,w
  2733  000A  00F9               	movwf	??_isr+3
  2734  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2735  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2736  000D  087F               	movf	btemp+1,w
  2737  000E  00FA               	movwf	??_isr+4
  2738  000F  118A  2A1E         	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      5      10
    BANK0            80     17      25
    BANK1            80      0       0
    BANK3            87      0       0
    BANK2            96      0       0

Pointer List with Targets:

    uartReadByte@receivedByte	PTR unsigned char  size(1) Largest target is 1
		 -> ActualizarMEFUART@aux(BANK0[1]), ActualizarMEFUART@res(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ActualizarMEFI2C
    _ActualizarMEFUART->_tickRead
    _ActualizarMEFI2C->_I2C_WriteToAddress
    _My_I2C_ReadResult->_I2C_Delay
    _I2C_WriteToAddress->_I2C_WriteByte
    _I2C_Stop->_I2C_Delay
    _I2C_Start->_I2C_Delay
    _I2C_ReadFromAddress->_I2C_WriteByte
    _I2C_SendZero->_I2C_Delay
    _I2C_SendOne->_I2C_Delay

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1212
                                             15 BANK0      2     2      0
                   _ActualizarMEFI2C
                  _ActualizarMEFUART
                  _InicializarMEFI2C
                 _InicializarMEFUART
                            _initApp
 ---------------------------------------------------------------------------------
 (1) _initApp                                              2     2      0       0
                                              0 BANK0      2     2      0
                         _uartConfig
 ---------------------------------------------------------------------------------
 (2) _uartConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializarMEFUART                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializarMEFI2C                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ActualizarMEFUART                                    5     5      0     405
                                              4 BANK0      5     5      0
                             _RxMode
                             _TxMode
                           _tickRead
                       _uartReadByte
                      _uartWriteByte
 ---------------------------------------------------------------------------------
 (2) _uartWriteByte                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartReadByte                                         2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TxMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RxMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ActualizarMEFI2C                                     4     4      0     804
                                             11 BANK0      4     4      0
                _I2C_ReadFromAddress
                        _I2C_SendOne
                       _I2C_SendZero
                          _I2C_Start
                           _I2C_Stop
                      _I2C_WriteByte
                 _I2C_WriteToAddress
                  _My_I2C_ReadResult
                           _tickRead
 ---------------------------------------------------------------------------------
 (2) _tickRead                                             4     2      2      34
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _My_I2C_ReadResult                                    5     5      0     139
                                              1 BANK0      5     5      0
                          _I2C_Delay
                   _I2C_WaitForSlave
                           _SCL_High
                            _SCL_Low
                           _SDA_High
 ---------------------------------------------------------------------------------
 (3) _I2C_WaitForSlave                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_WriteToAddress                                   4     4      0     266
                                              7 BANK0      4     4      0
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                          _I2C_Delay
                           _SCL_High
                            _SCL_Low
                           _SDA_High
                            _SDA_Low
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                          _I2C_Delay
                           _SCL_High
                            _SCL_Low
                           _SDA_High
                            _SDA_Low
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadFromAddress                                  1     1      0     198
                                              7 BANK0      1     1      0
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteByte                                        6     6      0     167
                                              1 BANK0      6     6      0
                        _I2C_SendOne
                       _I2C_SendZero
 ---------------------------------------------------------------------------------
 (4) _I2C_SendZero                                         0     0      0       0
                          _I2C_Delay
                           _SCL_High
                            _SCL_Low
                            _SDA_Low
 ---------------------------------------------------------------------------------
 (5) _SDA_Low                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_SendOne                                          0     0      0       0
                          _I2C_Delay
                           _SCL_High
                            _SCL_Low
                           _SDA_High
 ---------------------------------------------------------------------------------
 (3) _SDA_High                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SCL_Low                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SCL_High                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Delay                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ActualizarMEFI2C
     _I2C_ReadFromAddress
       _I2C_WriteByte
         _I2C_SendOne
           _I2C_Delay
           _SCL_High
           _SCL_Low
           _SDA_High
         _I2C_SendZero
           _I2C_Delay
           _SCL_High
           _SCL_Low
           _SDA_Low
     _I2C_SendOne
       _I2C_Delay
       _SCL_High
       _SCL_Low
       _SDA_High
     _I2C_SendZero
       _I2C_Delay
       _SCL_High
       _SCL_Low
       _SDA_Low
     _I2C_Start
       _I2C_Delay
       _SCL_High
       _SCL_Low
       _SDA_High
       _SDA_Low
     _I2C_Stop
       _I2C_Delay
       _SCL_High
       _SCL_Low
       _SDA_High
       _SDA_Low
     _I2C_WriteByte
       _I2C_SendOne
         _I2C_Delay
         _SCL_High
         _SCL_Low
         _SDA_High
       _I2C_SendZero
         _I2C_Delay
         _SCL_High
         _SCL_Low
         _SDA_Low
     _I2C_WriteToAddress
       _I2C_WriteByte
         _I2C_SendOne
           _I2C_Delay
           _SCL_High
           _SCL_Low
           _SDA_High
         _I2C_SendZero
           _I2C_Delay
           _SCL_High
           _SCL_Low
           _SDA_Low
     _My_I2C_ReadResult
       _I2C_Delay
       _I2C_WaitForSlave
       _SCL_High
       _SCL_Low
       _SDA_High
     _tickRead
   _ActualizarMEFUART
     _RxMode
     _TxMode
     _tickRead
     _uartReadByte
     _uartWriteByte
   _InicializarMEFI2C
   _InicializarMEFUART
   _initApp
     _uartConfig

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      5       A       1       76.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      19       5       31.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            57      0       0       8        0.0%
BANK3               57      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Oct 29 10:10:07 2019

                 ??_uartWriteByte 0020                __size_of_I2C_Delay 0008                ??_ActualizarMEFI2C 002B  
              __size_of_I2C_Start 0015                       __CFG_CP$OFF 0000               ??_ActualizarMEFUART 0024  
                             l113 01A3                               l201 0142                               l232 00C3  
                             l174 02AD                               _CM0 04E0                               _CM1 04E1  
                             _CM2 04E2                               _GIE 005F                      __CFG_CPD$OFF 0000  
                             u615 01C5                               u720 0051                               u625 0156  
                             u740 005D                               u645 0189                               _PSA 040B  
                             u595 01A1                               u685 0112                               u887 01E7  
                             u897 02BE                               _isr 021E                               fsr0 0004  
                             indf 0000              __size_of_I2C_SendOne 000F                      __CFG_FOSC$XT 0000  
                    __CFG_LVP$OFF 0000                              l1621 0158                              l1631 016F  
                            l1641 018B                              l1801 0070                              l1811 008E  
                            l1581 01AE                              l1733 00C5                              l1813 0094  
                            l1805 007F                              l1743 00DB                              l1823 00AF  
                            l1817 00A3                              l1833 00BB                              l1579 01AB  
                            l1587 01C7                              l1771 0135                              l1747 00FD  
                            l1827 00B5                              l1773 0137                              l1677 027D  
                            l1793 0054                              l1777 002A                              l1795 0060  
                            l1787 003D                              l1891 01FF                              l1799 0068  
                            ?_isr 0076                              _BRGH 04C2                              _CREN 00C4  
                            _T0CS 040D             ??_I2C_ReadFromAddress 0027                              _RCIF 0065  
                            _TMR0 0001                              _SPEN 00C7                   __end_of_SDA_Low 02C9  
                            _TXEN 04C5                              _TXIF 0064                              _SYNC 04C4  
       __end_of_ActualizarMEFUART 00C4                   __end_of_SCL_Low 02D0                      __CFG_WRT$OFF 0000  
                            _main 01EE                              btemp 007E                  __end_of_I2C_Stop 021E  
                            start 0011             __size_of_I2C_SendZero 000F       __size_of_I2C_WriteToAddress 0012  
                   __CFG_MCLRE$ON 0000                             ??_isr 0076                             ?_main 0076  
        __end_of_I2C_WaitForSlave 02E9                     __CFG_WDTE$OFF 0000                             _ANSEL 009B  
                           _RCREG 001A                  __end_of_SDA_High 02E2                             _SPBRG 0099  
                           _PORTB 0006                             _TXREG 0019                    __CFG_CCPMX$RB0 0000  
                __end_of_SCL_High 02E6                   __end_of_initApp 01EE                 __end_of_I2C_Delay 02C2  
          I2C_WriteToAddress@temp 002A                 __end_of_I2C_Start 0249                      _I2C_SendZero 027F  
                  __CFG_BOREN$OFF 0000                             pclath 000A                             status 0003  
                           wtemp0 007E                   __initialization 0013                      __end_of_main 0206  
                          ??_main 002F       __size_of_InicializarMEFUART 0004                         ??_SDA_Low 0020  
                       ??_SCL_Low 0020            __size_of_I2C_WriteByte 003B        __size_of_ActualizarMEFUART 009F  
                          _TMR0IE 005D                            _TMR0IF 005A                            _TRISB1 0431  
                          _TRISB2 0432                            _TRISB4 0434                            _TRISB5 0435  
                  __CFG_PWRTE$OFF 0000                            _RxMode 02D5                            _TxMode 02D0  
        uartReadByte@receivedByte 0021                 _My_I2C_ReadResult 0143                            _result 0071  
              ?_My_I2C_ReadResult 0076                  __end_of_tickRead 02AA                         ??_initApp 0020  
                       ?_I2C_Stop 0076                            saved_w 007E               ??_My_I2C_ReadResult 0021  
         __end_of__initialization 0022                         ?_SDA_High 0076                    __pcstackCOMMON 0076  
                       ?_SCL_High 0076         __end_of_My_I2C_ReadResult 018F                     _I2C_WriteByte 018F  
I2C_ReadFromAddress@deviceAddress 0027                    _OPTION_REGbits 0081         __size_of_ActualizarMEFI2C 007F  
                      ??_I2C_Stop 0021        ActualizarMEFI2C@tinicioi2c 0031                        __pbssBANK0 0031  
                      ??_SDA_High 0020                           ?_RxMode 0076                        __pmaintext 01EE  
                         ?_TxMode 0076                    ?_I2C_WriteByte 0076                        ??_SCL_High 0020  
                      __pintentry 0004             __end_of_uartWriteByte 02B2                     ??_I2C_SendOne 0021  
               ?_I2C_WaitForSlave 0076       __end_of_I2C_ReadFromAddress 02BA                ??_I2C_WaitForSlave 0020  
                         _SDA_Low 02C2                           _SCL_Low 02C9                       tickRead@aux 0022  
               _InicializarMEFI2C 02E6                         _I2C_Delay 02BA        __end_of_I2C_WriteToAddress 026F  
                       _I2C_Start 0234                ?_InicializarMEFI2C 0076                         ?_tickRead 0020  
       My_I2C_ReadResult@readback 0025                   __size_of_RxMode 0005                   __size_of_TxMode 0005  
      __size_of_My_I2C_ReadResult 004C                     ?_uartReadByte 0076              ActualizarMEFUART@aux 0028  
             ??_InicializarMEFI2C 0020              ActualizarMEFUART@res 0038                           _tActual 0033  
                         _tInicio 0035                           __ptext1 01CA                           __ptext2 0249  
                         __ptext3 02DA                           __ptext4 02E6                           __ptext5 0025  
                         __ptext6 02AA                           __ptext7 026F                           __ptext8 02D0  
                         __ptext9 02D5                           _initApp 01CA                      __size_of_isr 0016  
             __end_of_I2C_SendOne 029D         __end_of_InicializarMEFI2C 02E8              end_of_initialization 0022  
                      ?_I2C_Delay 0076                        ?_I2C_Start 0076                   ??_I2C_WriteByte 0021  
                      ??_tickRead 0022                        _uartConfig 0249                    ??_uartReadByte 0020  
      __end_of_InicializarMEFUART 02DE                         _PORTAbits 0005                         _PORTBbits 0006  
              My_I2C_ReadResult@x 0023                  _ActualizarMEFI2C 00C4                         _TRISAbits 0085  
                       _TRISBbits 0086                 __size_of_I2C_Stop 0018                        main@result 002F  
                  __end_of_RxMode 02DA                    __end_of_TxMode 02D5                 __size_of_SDA_High 0004  
               __size_of_SCL_High 0004                       _I2C_SendOne 028E               start_initialization 0013  
                     __end_of_isr 0234        __size_of_InicializarMEFI2C 0002                       ??_I2C_Delay 0020  
                     ??_I2C_Start 0021                       ?_uartConfig 0076                          ??_RxMode 0020  
                        ??_TxMode 0020                    I2C_WriteByte@x 0024                       __pbssCOMMON 0071  
                       ___latbits 0001                     __pcstackBANK0 0020                          ?_SDA_Low 0076  
                        ?_SCL_Low 0076              __end_of_uartReadByte 027F                     ?_I2C_SendZero 0076  
       __size_of_I2C_WaitForSlave 0001                 __size_of_tickRead 000D                _I2C_WriteToAddress 025D  
                        ?_initApp 0076                          _I2C_Stop 0206   I2C_WriteToAddress@deviceAddress 0029  
             ?_I2C_WriteToAddress 0076               __size_of_uartConfig 0014                    ??_I2C_SendZero 0021  
    __size_of_I2C_ReadFromAddress 0008            __size_of_uartWriteByte 0008                 interrupt_function 0004  
        __end_of_ActualizarMEFI2C 0143              ??_I2C_WriteToAddress 0027                          _SDA_High 02DE  
                        _SCL_High 02E2                  _estadoActualUART 0037      ActualizarMEFUART@tinicioUART 0024  
                __size_of_SDA_Low 0007                _InicializarMEFUART 02DA                  __size_of_SCL_Low 0007  
             ?_InicializarMEFUART 0076                uartWriteByte@value 0020             __end_of_I2C_WriteByte 01CA  
                   _uartWriteByte 02AA             ActualizarMEFUART@tout 0026              ??_InicializarMEFUART 0020  
                    ?_I2C_SendOne 0076             __size_of_uartReadByte 0010                  __size_of_initApp 0024  
                        __ptext10 00C4                          __ptext11 029D                          __ptext20 02C2  
                        __ptext12 0143                          __ptext21 028E                          __ptext13 02E8  
                        __ptext22 02DE                          __ptext14 025D                          __ptext23 02C9  
                        __ptext15 0206                          __ptext24 02E2                          __ptext16 0234  
                        __ptext25 02BA                          __ptext17 02B2                          __ptext26 021E  
                        __ptext18 018F                          __ptext19 027F                  _I2C_WaitForSlave 02E8  
                   __size_of_main 0018                          _tickRead 029D                      ??_uartConfig 0020  
                    _uartReadByte 026F              __end_of_I2C_SendZero 028E                   _estadoActualI2C 0075  
                  ?_uartWriteByte 0076                       _tickCounter 0073                __end_of_uartConfig 025D  
                        intlevel1 0000              I2C_WriteByte@theByte 0023               _I2C_ReadFromAddress 02B2  
            ?_I2C_ReadFromAddress 0076                 _ActualizarMEFUART 0025                 I2C_WriteByte@temp 0026  
               ?_ActualizarMEFI2C 0076                ?_ActualizarMEFUART 0076  
