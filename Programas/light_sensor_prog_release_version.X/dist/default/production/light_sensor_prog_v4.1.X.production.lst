

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Oct 02 09:07:07 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 1.45
    40                           ; Generated 16/11/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F88 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  008F                     	;# 
   161  0090                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0105                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0001                     _TMR0	set	1
   233  0005                     _PORTAbits	set	5
   234  0019                     _TXREG	set	25
   235  001A                     _RCREG	set	26
   236  0006                     _PORTB	set	6
   237  0006                     _PORTBbits	set	6
   238  005A                     _TMR0IF	set	90
   239  0064                     _TXIF	set	100
   240  0065                     _RCIF	set	101
   241  00C7                     _SPEN	set	199
   242  00C4                     _CREN	set	196
   243  005F                     _GIE	set	95
   244  005D                     _TMR0IE	set	93
   245  0099                     _SPBRG	set	153
   246  0081                     _OPTION_REGbits	set	129
   247  0086                     _TRISBbits	set	134
   248  0085                     _TRISAbits	set	133
   249  009B                     _ANSEL	set	155
   250  0432                     _TRISB2	set	1074
   251  0435                     _TRISB5	set	1077
   252  04C5                     _TXEN	set	1221
   253  04C4                     _SYNC	set	1220
   254  04C2                     _BRGH	set	1218
   255  040B                     _PSA	set	1035
   256  040D                     _T0CS	set	1037
   257  04E0                     _CM0	set	1248
   258  04E1                     _CM1	set	1249
   259  04E2                     _CM2	set	1250
   260  0431                     _TRISB1	set	1073
   261  0434                     _TRISB4	set	1076
   262                           
   263                           ; #config settings
   264  0000                     
   265                           	psect	cinit
   266  0013                     start_initialization:	
   267  0013                     __initialization:	
   268                           
   269                           ; Clear objects allocated to COMMON
   270  0013  01F0               	clrf	__pbssCOMMON& (0+127)
   271  0014  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   272  0015  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   273  0016  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   274  0017  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   275                           
   276                           ; Clear objects allocated to BANK0
   277  0018  1283               	bcf	3,5	;RP0=0, select bank0
   278  0019  1303               	bcf	3,6	;RP1=0, select bank0
   279  001A  01B1               	clrf	__pbssBANK0& (0+127)
   280  001B  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   281  001C  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   282  001D  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   283  001E  01B5               	clrf	(__pbssBANK0+4)& (0+127)
   284  001F  01B6               	clrf	(__pbssBANK0+5)& (0+127)
   285  0020  01B7               	clrf	(__pbssBANK0+6)& (0+127)
   286  0021  01B8               	clrf	(__pbssBANK0+7)& (0+127)
   287  0022                     end_of_initialization:	
   288                           ;End of C runtime variable initialization code
   289                           
   290  0022                     __end_of__initialization:	
   291  0022  0183               	clrf	3
   292  0023  118A  29C0         	ljmp	_main	;jump to C main() function
   293                           
   294                           	psect	bssCOMMON
   295  0070                     __pbssCOMMON:	
   296  0070                     ActualizarMEFI2C@tinicioi2c:	
   297  0070                     	ds	2
   298  0072                     _tickCounter:	
   299  0072                     	ds	2
   300  0074                     _estadoActualI2C:	
   301  0074                     	ds	1
   302                           
   303                           	psect	bssBANK0
   304  0031                     __pbssBANK0:	
   305  0031                     _tActual:	
   306  0031                     	ds	2
   307  0033                     _tInicio:	
   308  0033                     	ds	2
   309  0035                     _result:	
   310  0035                     	ds	2
   311  0037                     _estadoActualUART:	
   312  0037                     	ds	1
   313  0038                     ActualizarMEFUART@res:	
   314  0038                     	ds	1
   315                           
   316                           	psect	cstackCOMMON
   317  0075                     __pcstackCOMMON:	
   318  0075                     ?_uartReadByte:	
   319  0075                     ?_initApp:	
   320                           ; 1 bit 
   321                           
   322  0075                     ?_InicializarMEFI2C:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0075                     ?_InicializarMEFUART:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0075                     ?_ActualizarMEFI2C:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0075                     ?_ActualizarMEFUART:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0075                     ?_uartConfig:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0075                     ?_main:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0075                     ?_I2C_Delay:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0075                     ?_SCL_Low:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0075                     ?_SCL_High:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0075                     ?_SDA_Low:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0075                     ?_SDA_High:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0075                     ?_I2C_SendZero:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0075                     ?_I2C_SendOne:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0075                     ?_I2C_Start:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0075                     ?_I2C_Stop:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0075                     ?_I2C_WaitForSlave:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0075                     ?_I2C_WriteByte:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0075                     ?_My_I2C_ReadResult:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0075                     ?_I2C_WriteToAddress:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0075                     ?_I2C_ReadFromAddress:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0075                     ?_uartWriteByte:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0075                     ?_TxMode:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0075                     ?_RxMode:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0075                     ?_isr:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0075                     ??_isr:	
   395                           ; 1 bytes @ 0x0
   396                           
   397                           
   398                           ; 1 bytes @ 0x0
   399  0075                     	ds	5
   400                           
   401                           	psect	cstackBANK0
   402  0020                     __pcstackBANK0:	
   403  0020                     ??_initApp:	
   404  0020                     ??_InicializarMEFI2C:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0020                     ??_InicializarMEFUART:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0020                     ??_uartConfig:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0020                     ??_I2C_Delay:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0020                     ??_SCL_Low:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0020                     ??_SCL_High:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0020                     ??_SDA_Low:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0020                     ??_SDA_High:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0020                     ??_I2C_WaitForSlave:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0020                     ??_uartReadByte:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0020                     ??_uartWriteByte:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0020                     ??_TxMode:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0020                     ??_RxMode:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0020                     ?_tickRead:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0020                     uartWriteByte@value:	
   447                           ; 2 bytes @ 0x0
   448                           
   449                           
   450                           ; 1 bytes @ 0x0
   451  0020                     	ds	1
   452  0021                     ??_I2C_SendZero:	
   453  0021                     ??_I2C_SendOne:	
   454                           ; 1 bytes @ 0x1
   455                           
   456  0021                     ??_I2C_Start:	
   457                           ; 1 bytes @ 0x1
   458                           
   459  0021                     ??_I2C_Stop:	
   460                           ; 1 bytes @ 0x1
   461                           
   462  0021                     ??_I2C_WriteByte:	
   463                           ; 1 bytes @ 0x1
   464                           
   465  0021                     ??_My_I2C_ReadResult:	
   466                           ; 1 bytes @ 0x1
   467                           
   468  0021                     uartReadByte@receivedByte:	
   469                           ; 1 bytes @ 0x1
   470                           
   471                           
   472                           ; 1 bytes @ 0x1
   473  0021                     	ds	1
   474  0022                     ??_tickRead:	
   475  0022                     tickRead@aux:	
   476                           ; 1 bytes @ 0x2
   477                           
   478                           
   479                           ; 2 bytes @ 0x2
   480  0022                     	ds	1
   481  0023                     I2C_WriteByte@theByte:	
   482  0023                     My_I2C_ReadResult@x:	
   483                           ; 1 bytes @ 0x3
   484                           
   485                           
   486                           ; 2 bytes @ 0x3
   487  0023                     	ds	1
   488  0024                     ??_ActualizarMEFUART:	
   489  0024                     I2C_WriteByte@x:	
   490                           ; 1 bytes @ 0x4
   491                           
   492  0024                     ActualizarMEFUART@tinicioUART:	
   493                           ; 2 bytes @ 0x4
   494                           
   495                           
   496                           ; 2 bytes @ 0x4
   497  0024                     	ds	1
   498  0025                     My_I2C_ReadResult@readback:	
   499                           
   500                           ; 1 bytes @ 0x5
   501  0025                     	ds	1
   502  0026                     I2C_WriteByte@temp:	
   503  0026                     ActualizarMEFUART@aux:	
   504                           ; 1 bytes @ 0x6
   505                           
   506                           
   507                           ; 1 bytes @ 0x6
   508  0026                     	ds	1
   509  0027                     ??_I2C_WriteToAddress:	
   510  0027                     ??_I2C_ReadFromAddress:	
   511                           ; 1 bytes @ 0x7
   512                           
   513  0027                     I2C_ReadFromAddress@deviceAddress:	
   514                           ; 1 bytes @ 0x7
   515                           
   516                           
   517                           ; 1 bytes @ 0x7
   518  0027                     	ds	2
   519  0029                     I2C_WriteToAddress@deviceAddress:	
   520                           
   521                           ; 1 bytes @ 0x9
   522  0029                     	ds	1
   523  002A                     I2C_WriteToAddress@temp:	
   524                           
   525                           ; 1 bytes @ 0xA
   526  002A                     	ds	1
   527  002B                     ??_ActualizarMEFI2C:	
   528                           
   529                           ; 1 bytes @ 0xB
   530  002B                     	ds	4
   531  002F                     ??_main:	
   532  002F                     main@result:	
   533                           ; 1 bytes @ 0xF
   534                           
   535                           
   536                           ; 2 bytes @ 0xF
   537  002F                     	ds	2
   538                           
   539                           	psect	maintext
   540  01C0                     __pmaintext:	
   541 ;;
   542 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   543 ;;
   544 ;; *************** function _main *****************
   545 ;; Defined at:
   546 ;;		line 16 in file "main.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;  result          2   15[BANK0 ] unsigned int 
   551 ;;  request         1    0        unsigned char 
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : B00/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         0       2       0       0       0
   563 ;;      Temps:          0       0       0       0       0
   564 ;;      Totals:         0       2       0       0       0
   565 ;;Total ram usage:        2 bytes
   566 ;; Hardware stack levels required when called:    6
   567 ;; This function calls:
   568 ;;		_ActualizarMEFI2C
   569 ;;		_ActualizarMEFUART
   570 ;;		_InicializarMEFI2C
   571 ;;		_InicializarMEFUART
   572 ;;		_initApp
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _main
   580  01C0                     _main:	
   581                           
   582                           ;main.c: 17: uint16_t result = 0;
   583                           
   584                           ;incstack = 0
   585                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   586  01C0  1283               	bcf	3,5	;RP0=0, select bank0
   587  01C1  1303               	bcf	3,6	;RP1=0, select bank0
   588  01C2  01AF               	clrf	main@result
   589  01C3  01B0               	clrf	main@result+1
   590                           
   591                           ;main.c: 18: uint8_t request;
   592                           ;main.c: 19: initApp();
   593  01C4  118A  219C  118A   	fcall	_initApp
   594                           
   595                           ;main.c: 20: PORTBbits.RB0 = 1;
   596  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   597  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   598  01C9  1406               	bsf	6,0	;volatile
   599                           
   600                           ;main.c: 21: PORTBbits.RB3 = 1;
   601  01CA  1586               	bsf	6,3	;volatile
   602                           
   603                           ;main.c: 23: InicializarMEFI2C();
   604  01CB  118A  22B8  118A   	fcall	_InicializarMEFI2C
   605                           
   606                           ;main.c: 24: InicializarMEFUART();
   607  01CE  118A  22AC  118A   	fcall	_InicializarMEFUART
   608  01D1                     l1832:	
   609                           ;main.c: 26: while(1){
   610                           
   611                           
   612                           ;main.c: 27: ActualizarMEFI2C();
   613  01D1  118A  2025  118A   	fcall	_ActualizarMEFI2C
   614                           
   615                           ;main.c: 28: ActualizarMEFUART();
   616  01D4  118A  209E  118A   	fcall	_ActualizarMEFUART
   617  01D7  29D1               	goto	l1832
   618  01D8                     __end_of_main:	
   619                           
   620                           	psect	text1
   621  019C                     __ptext1:	
   622 ;; *************** function _initApp *****************
   623 ;; Defined at:
   624 ;;		line 24 in file "user.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, status,2, status,0, pclath, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0
   640 ;;      Temps:          0       2       0       0       0
   641 ;;      Totals:         0       2       0       0       0
   642 ;;Total ram usage:        2 bytes
   643 ;; Hardware stack levels used:    1
   644 ;; Hardware stack levels required when called:    2
   645 ;; This function calls:
   646 ;;		_uartConfig
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function _initApp
   654  019C                     _initApp:	
   655                           
   656                           ;user.c: 25: CM2=1;
   657                           
   658                           ;incstack = 0
   659                           ; Regs used in _initApp: [wreg+status,2+status,0+pclath+cstack]
   660  019C  1683               	bsf	3,5	;RP0=1, select bank1
   661  019D  1303               	bcf	3,6	;RP1=0, select bank1
   662  019E  151C               	bsf	28,2	;volatile
   663                           
   664                           ;user.c: 26: CM1=0;
   665  019F  109C               	bcf	28,1	;volatile
   666                           
   667                           ;user.c: 27: CM0=0;
   668  01A0  101C               	bcf	28,0	;volatile
   669                           
   670                           ;user.c: 29: ANSEL=0x00;
   671  01A1  019B               	clrf	27	;volatile
   672                           
   673                           ;user.c: 30: TRISAbits.TRISA3 = 1;
   674  01A2  1585               	bsf	5,3	;volatile
   675                           
   676                           ;user.c: 31: TRISAbits.TRISA4 = 1;
   677  01A3  1605               	bsf	5,4	;volatile
   678                           
   679                           ;user.c: 32: TRISBbits.TRISB0 = 0;
   680  01A4  1006               	bcf	6,0	;volatile
   681                           
   682                           ;user.c: 33: TRISBbits.TRISB3 = 0;
   683  01A5  1186               	bcf	6,3	;volatile
   684                           
   685                           ;user.c: 34: TRISAbits.TRISA2=0;
   686  01A6  1105               	bcf	5,2	;volatile
   687                           
   688                           ;user.c: 35: TRISAbits.TRISA1=0;
   689  01A7  1085               	bcf	5,1	;volatile
   690                           
   691                           ;user.c: 37: uartConfig();
   692  01A8  118A  221B  118A   	fcall	_uartConfig
   693                           
   694                           ;user.c: 40: T0CS = 0;
   695  01AB  1683               	bsf	3,5	;RP0=1, select bank1
   696  01AC  1303               	bcf	3,6	;RP1=0, select bank1
   697  01AD  1281               	bcf	1,5	;volatile
   698                           
   699                           ;user.c: 41: PSA = 0;
   700  01AE  1181               	bcf	1,3	;volatile
   701                           
   702                           ;user.c: 44: OPTION_REGbits.PS = 1;
   703  01AF  0801               	movf	1,w	;volatile
   704  01B0  39F8               	andlw	-8
   705  01B1  3801               	iorlw	1
   706  01B2  0081               	movwf	1	;volatile
   707                           
   708                           ;user.c: 54: _delay((unsigned long)((100)*(4000000L/4000.0)));
   709  01B3  3082               	movlw	130
   710  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   711  01B5  1303               	bcf	3,6	;RP1=0, select bank0
   712  01B6  00A1               	movwf	??_initApp+1
   713  01B7  30DD               	movlw	221
   714  01B8  00A0               	movwf	??_initApp
   715  01B9                     u797:	
   716  01B9  0BA0               	decfsz	??_initApp,f
   717  01BA  29B9               	goto	u797
   718  01BB  0BA1               	decfsz	??_initApp+1,f
   719  01BC  29B9               	goto	u797
   720                           
   721                           ;user.c: 55: TMR0IE=1;
   722  01BD  168B               	bsf	11,5	;volatile
   723                           
   724                           ;user.c: 56: GIE=1;
   725  01BE  178B               	bsf	11,7	;volatile
   726  01BF  0008               	return
   727  01C0                     __end_of_initApp:	
   728                           
   729                           	psect	text2
   730  021B                     __ptext2:	
   731 ;; *************** function _uartConfig *****************
   732 ;; Defined at:
   733 ;;		line 63 in file "user.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    1
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_initApp
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           
   762                           ;psect for function _uartConfig
   763  021B                     _uartConfig:	
   764                           
   765                           ;user.c: 71: SPBRG = (4000000L - 9600 * 16L) / (9600 * 16L);
   766                           
   767                           ;incstack = 0
   768                           ; Regs used in _uartConfig: [wreg]
   769  021B  3019               	movlw	25
   770  021C  1683               	bsf	3,5	;RP0=1, select bank1
   771  021D  1303               	bcf	3,6	;RP1=0, select bank1
   772  021E  0099               	movwf	25	;volatile
   773                           
   774                           ;user.c: 72: BRGH = 1;
   775  021F  1518               	bsf	24,2	;volatile
   776                           
   777                           ;user.c: 74: SYNC = 0;
   778  0220  1218               	bcf	24,4	;volatile
   779                           
   780                           ;user.c: 76: CREN = 1;
   781  0221  1283               	bcf	3,5	;RP0=0, select bank0
   782  0222  1303               	bcf	3,6	;RP1=0, select bank0
   783  0223  1618               	bsf	24,4	;volatile
   784                           
   785                           ;user.c: 77: TXEN = 1;
   786  0224  1683               	bsf	3,5	;RP0=1, select bank1
   787  0225  1303               	bcf	3,6	;RP1=0, select bank1
   788  0226  1698               	bsf	24,5	;volatile
   789                           
   790                           ;user.c: 78: SPEN = 1;
   791  0227  1283               	bcf	3,5	;RP0=0, select bank0
   792  0228  1303               	bcf	3,6	;RP1=0, select bank0
   793  0229  1798               	bsf	24,7	;volatile
   794                           
   795                           ;user.c: 79: TRISB5=1;
   796  022A  1683               	bsf	3,5	;RP0=1, select bank1
   797  022B  1303               	bcf	3,6	;RP1=0, select bank1
   798  022C  1686               	bsf	6,5	;volatile
   799                           
   800                           ;user.c: 80: TRISB2=1;
   801  022D  1506               	bsf	6,2	;volatile
   802  022E  0008               	return
   803  022F                     __end_of_uartConfig:	
   804                           
   805                           	psect	text3
   806  02AC                     __ptext3:	
   807 ;; *************** function _InicializarMEFUART *****************
   808 ;; Defined at:
   809 ;;		line 158 in file "user.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		status,2
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0
   826 ;;      Totals:         0       0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           
   838                           ;psect for function _InicializarMEFUART
   839  02AC                     _InicializarMEFUART:	
   840                           
   841                           ;user.c: 159: estadoActualUART=RX;
   842                           
   843                           ;incstack = 0
   844                           ; Regs used in _InicializarMEFUART: [status,2]
   845  02AC  1283               	bcf	3,5	;RP0=0, select bank0
   846  02AD  1303               	bcf	3,6	;RP1=0, select bank0
   847  02AE  01B7               	clrf	_estadoActualUART
   848  02AF  0008               	return
   849  02B0                     __end_of_InicializarMEFUART:	
   850                           
   851                           	psect	text4
   852  02B8                     __ptext4:	
   853 ;; *************** function _InicializarMEFI2C *****************
   854 ;; Defined at:
   855 ;;		line 154 in file "user.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		status,2
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0
   872 ;;      Totals:         0       0       0       0       0
   873 ;;Total ram usage:        0 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _InicializarMEFI2C
   885  02B8                     _InicializarMEFI2C:	
   886                           
   887                           ;user.c: 155: estadoActualI2C = REQUEST;
   888                           
   889                           ;incstack = 0
   890                           ; Regs used in _InicializarMEFI2C: [status,2]
   891  02B8  01F4               	clrf	_estadoActualI2C
   892  02B9  0008               	return
   893  02BA                     __end_of_InicializarMEFI2C:	
   894                           
   895                           	psect	text5
   896  009E                     __ptext5:	
   897 ;; *************** function _ActualizarMEFUART *****************
   898 ;; Defined at:
   899 ;;		line 162 in file "user.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  tinicioUART     2    4[BANK0 ] unsigned int 
   904 ;;  aux             1    6[BANK0 ] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         0       0       0       0       0
   915 ;;      Locals:         0       3       0       0       0
   916 ;;      Temps:          0       0       0       0       0
   917 ;;      Totals:         0       3       0       0       0
   918 ;;Total ram usage:        3 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    2
   921 ;; This function calls:
   922 ;;		_RxMode
   923 ;;		_TxMode
   924 ;;		_tickRead
   925 ;;		_uartReadByte
   926 ;;		_uartWriteByte
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function _ActualizarMEFUART
   934  009E                     _ActualizarMEFUART:	
   935                           
   936                           ;user.c: 163: static uint8_t res;
   937                           ;user.c: 164: uint8_t aux;
   938                           ;user.c: 165: tick_t tinicioUART;
   939                           ;user.c: 166: switch(estadoActualUART) {
   940                           
   941                           ;incstack = 0
   942                           ; Regs used in _ActualizarMEFUART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   943  009E  290A               	goto	l1774
   944  009F                     l1730:	
   945                           ;user.c: 167: case RX:
   946                           
   947                           
   948                           ;user.c: 168: RxMode();
   949  009F  118A  22A7  118A   	fcall	_RxMode
   950                           
   951                           ;user.c: 169: if (uartReadByte(&res)) {
   952  00A2  3038               	movlw	(low (ActualizarMEFUART@res| 0))& (0+255)
   953  00A3  118A  2241  118A   	fcall	_uartReadByte
   954  00A6  1C03               	btfss	3,0
   955  00A7  0008               	return
   956                           
   957                           ;user.c: 170: if (res == 0xA8) {
   958  00A8  30A8               	movlw	168
   959  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   960  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   961  00AB  0638               	xorwf	ActualizarMEFUART@res,w
   962  00AC  1D03               	btfss	3,2
   963  00AD  0008               	return
   964                           
   965                           ;user.c: 171: res = 0;
   966  00AE  01B8               	clrf	ActualizarMEFUART@res
   967                           
   968                           ;user.c: 172: estadoActualUART = TX;
   969  00AF  01B7               	clrf	_estadoActualUART
   970  00B0  0AB7               	incf	_estadoActualUART,f
   971                           
   972                           ;user.c: 173: }
   973                           ;user.c: 174: }
   974                           ;user.c: 175: break;
   975  00B1  0008               	return
   976  00B2                     l1740:	
   977                           ;user.c: 176: case TX:
   978                           
   979                           
   980                           ;user.c: 177: tinicioUART=tickRead();
   981  00B2  118A  226F  118A   	fcall	_tickRead
   982  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   983  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   984  00B7  0821               	movf	?_tickRead+1,w
   985  00B8  00A5               	movwf	ActualizarMEFUART@tinicioUART+1
   986  00B9  0820               	movf	?_tickRead,w
   987  00BA  00A4               	movwf	ActualizarMEFUART@tinicioUART
   988                           
   989                           ;user.c: 178: PORTBbits.RB3=!PORTBbits.RB3;
   990  00BB  1003               	clrc
   991  00BC  1D86               	btfss	6,3	;volatile
   992  00BD  1403               	setc
   993  00BE  1C03               	btfss	3,0
   994  00BF  28C4               	goto	u650
   995  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   996  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   997  00C2  1586               	bsf	6,3	;volatile
   998  00C3  28C7               	goto	l1744
   999  00C4                     u650:	
  1000  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1001  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1002  00C6  1186               	bcf	6,3	;volatile
  1003  00C7                     l1744:	
  1004                           
  1005                           ;user.c: 179: PORTBbits.RB0 = !PORTBbits.RB0;
  1006  00C7  1003               	clrc
  1007  00C8  1C06               	btfss	6,0	;volatile
  1008  00C9  1403               	setc
  1009  00CA  1C03               	btfss	3,0
  1010  00CB  28D0               	goto	u670
  1011  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1012  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1013  00CE  1406               	bsf	6,0	;volatile
  1014  00CF  28D3               	goto	l1746
  1015  00D0                     u670:	
  1016  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1017  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1018  00D2  1006               	bcf	6,0	;volatile
  1019  00D3                     l1746:	
  1020                           
  1021                           ;user.c: 180: TxMode();
  1022  00D3  118A  22A2  118A   	fcall	_TxMode
  1023                           
  1024                           ;user.c: 182: uartWriteByte((uint8_t)(result>>8));
  1025  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1026  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1027  00D8  0836               	movf	_result+1,w
  1028  00D9  118A  227C  118A   	fcall	_uartWriteByte
  1029  00DC                     l1750:	
  1030                           ;user.c: 183: while(!uartReadByte(&aux));
  1031                           
  1032  00DC  3026               	movlw	(low (ActualizarMEFUART@aux| 0))& (0+255)
  1033  00DD  118A  2241  118A   	fcall	_uartReadByte
  1034  00E0  1C03               	btfss	3,0
  1035  00E1  28DC               	goto	l1750
  1036                           
  1037                           ;user.c: 184: if(aux==(uint8_t)(result>>8)){
  1038  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1039  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1040  00E4  0836               	movf	_result+1,w
  1041  00E5  0626               	xorwf	ActualizarMEFUART@aux,w
  1042  00E6  1D03               	skipz
  1043  00E7  2904               	goto	l1768
  1044                           
  1045                           ;user.c: 185: uartWriteByte((uint8_t)(result&0x00FF));
  1046  00E8  0835               	movf	_result,w
  1047  00E9  118A  227C  118A   	fcall	_uartWriteByte
  1048  00EC                     l1756:	
  1049                           ;user.c: 186: while(!uartReadByte(&aux));
  1050                           
  1051  00EC  3026               	movlw	(low (ActualizarMEFUART@aux| 0))& (0+255)
  1052  00ED  118A  2241  118A   	fcall	_uartReadByte
  1053  00F0  1C03               	btfss	3,0
  1054  00F1  28EC               	goto	l1756
  1055                           
  1056                           ;user.c: 187: if (aux == (uint8_t) (result & 0x00FF)) {
  1057  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1058  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1059  00F4  0835               	movf	_result,w
  1060  00F5  0626               	xorwf	ActualizarMEFUART@aux,w
  1061  00F6  1D03               	skipz
  1062  00F7  28FE               	goto	l1764
  1063                           
  1064                           ;user.c: 188: RxMode();
  1065  00F8  118A  22A7         	fcall	_RxMode
  1066                           
  1067                           ;user.c: 189: estadoActualUART = RX;
  1068  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1069  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1070  00FC  01B7               	clrf	_estadoActualUART
  1071                           
  1072                           ;user.c: 190: }
  1073  00FD  0008               	return
  1074  00FE                     l1764:	
  1075                           
  1076                           ;user.c: 191: else {
  1077                           ;user.c: 192: RxMode();
  1078  00FE  118A  22A7         	fcall	_RxMode
  1079                           
  1080                           ;user.c: 193: estadoActualUART=RX;
  1081  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1082  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1083  0102  01B7               	clrf	_estadoActualUART
  1084                           
  1085                           ;user.c: 194: }
  1086                           ;user.c: 195: }else{
  1087  0103  0008               	return
  1088  0104                     l1768:	
  1089                           
  1090                           ;user.c: 196: RxMode();
  1091  0104  118A  22A7         	fcall	_RxMode
  1092                           
  1093                           ;user.c: 197: estadoActualUART=RX;
  1094  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0108  01B7               	clrf	_estadoActualUART
  1097                           
  1098                           ;user.c: 205: }
  1099                           
  1100                           ;user.c: 198: }
  1101                           ;user.c: 204: break;
  1102  0109  0008               	return
  1103  010A                     l1774:	
  1104  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1105  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1106  010C  0837               	movf	_estadoActualUART,w
  1107                           
  1108                           ; Switch size 1, requested type "space"
  1109                           ; Number of cases is 2, Range of values is 0 to 1
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte            7     4 (average)
  1113                           ; direct_byte           11     7 (fixed)
  1114                           ; jumptable            260     6 (fixed)
  1115                           ;	Chosen strategy is simple_byte
  1116  010D  3A00               	xorlw	0	; case 0
  1117  010E  1903               	skipnz
  1118  010F  289F               	goto	l1730
  1119  0110  3A01               	xorlw	1	; case 1
  1120  0111  1903               	skipnz
  1121  0112  28B2               	goto	l1740
  1122  0113  2914               	goto	l227
  1123  0114                     l227:	
  1124  0114  0008               	return
  1125  0115                     __end_of_ActualizarMEFUART:	
  1126                           
  1127                           	psect	text6
  1128  027C                     __ptext6:	
  1129 ;; *************** function _uartWriteByte *****************
  1130 ;; Defined at:
  1131 ;;		line 91 in file "user.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  value           1    wreg     unsigned char 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  value           1    0[BANK0 ] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         0       1       0       0       0
  1147 ;;      Temps:          0       0       0       0       0
  1148 ;;      Totals:         0       1       0       0       0
  1149 ;;Total ram usage:        1 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    1
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_ActualizarMEFUART
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           
  1160                           ;psect for function _uartWriteByte
  1161  027C                     _uartWriteByte:	
  1162                           
  1163                           ;incstack = 0
  1164                           ; Regs used in _uartWriteByte: [wreg]
  1165                           ;uartWriteByte@value stored from wreg
  1166  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1167  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1168  027E  00A0               	movwf	uartWriteByte@value
  1169  027F                     l174:	
  1170                           ;user.c: 93: continue;
  1171                           
  1172                           ;user.c: 92: while (!TXIF)
  1173                           
  1174  027F  1E0C               	btfss	12,4	;volatile
  1175  0280  2A7F               	goto	l174
  1176                           
  1177                           ;user.c: 94: TXREG = value;
  1178  0281  0820               	movf	uartWriteByte@value,w
  1179  0282  0099               	movwf	25	;volatile
  1180  0283  0008               	return
  1181  0284                     __end_of_uartWriteByte:	
  1182                           
  1183                           	psect	text7
  1184  0241                     __ptext7:	
  1185 ;; *************** function _uartReadByte *****************
  1186 ;; Defined at:
  1187 ;;		line 83 in file "user.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  receivedByte    1    wreg     PTR unsigned char 
  1190 ;;		 -> ActualizarMEFUART@aux(1), ActualizarMEFUART@res(1), 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  receivedByte    1    1[BANK0 ] PTR unsigned char 
  1193 ;;		 -> ActualizarMEFUART@aux(1), ActualizarMEFUART@res(1), 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;		None               void
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1203 ;;      Params:         0       0       0       0       0
  1204 ;;      Locals:         0       1       0       0       0
  1205 ;;      Temps:          0       1       0       0       0
  1206 ;;      Totals:         0       2       0       0       0
  1207 ;;Total ram usage:        2 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_ActualizarMEFUART
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           
  1218                           ;psect for function _uartReadByte
  1219  0241                     _uartReadByte:	
  1220                           
  1221                           ;incstack = 0
  1222                           ; Regs used in _uartReadByte: [wreg-fsr0h+status,2+status,0]
  1223                           ;uartReadByte@receivedByte stored from wreg
  1224  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0243  00A1               	movwf	uartReadByte@receivedByte
  1227                           
  1228                           ;user.c: 84: if (RCIF) {
  1229  0244  1E8C               	btfss	12,5	;volatile
  1230  0245  2A4F               	goto	l1636
  1231                           
  1232                           ;user.c: 85: *receivedByte = RCREG;
  1233  0246  081A               	movf	26,w	;volatile
  1234  0247  00A0               	movwf	??_uartReadByte
  1235  0248  0821               	movf	uartReadByte@receivedByte,w
  1236  0249  0084               	movwf	4
  1237  024A  0820               	movf	??_uartReadByte,w
  1238  024B  1383               	bcf	3,7	;select IRP bank0
  1239  024C  0080               	movwf	0
  1240                           
  1241                           ;user.c: 86: return 1;
  1242  024D  1403               	setc
  1243  024E  0008               	return
  1244  024F                     l1636:	
  1245                           
  1246                           ;user.c: 87: }
  1247                           ;user.c: 88: return 0;
  1248  024F  1003               	clrc
  1249  0250  0008               	return
  1250  0251                     __end_of_uartReadByte:	
  1251                           
  1252                           	psect	text8
  1253  02A2                     __ptext8:	
  1254 ;; *************** function _TxMode *****************
  1255 ;; Defined at:
  1256 ;;		line 98 in file "user.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		None
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0
  1273 ;;      Totals:         0       0       0       0       0
  1274 ;;Total ram usage:        0 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    1
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_ActualizarMEFUART
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _TxMode
  1286  02A2                     _TxMode:	
  1287                           
  1288                           ;user.c: 99: PORTAbits.RA2=0;
  1289                           
  1290                           ;incstack = 0
  1291                           ; Regs used in _TxMode: []
  1292  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1293  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1294  02A4  1105               	bcf	5,2	;volatile
  1295                           
  1296                           ;user.c: 100: PORTAbits.RA1=1;
  1297  02A5  1485               	bsf	5,1	;volatile
  1298  02A6  0008               	return
  1299  02A7                     __end_of_TxMode:	
  1300                           
  1301                           	psect	text9
  1302  02A7                     __ptext9:	
  1303 ;; *************** function _RxMode *****************
  1304 ;; Defined at:
  1305 ;;		line 103 in file "user.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		None
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0
  1322 ;;      Totals:         0       0       0       0       0
  1323 ;;Total ram usage:        0 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; Hardware stack levels required when called:    1
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_ActualizarMEFUART
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           
  1334                           ;psect for function _RxMode
  1335  02A7                     _RxMode:	
  1336                           
  1337                           ;user.c: 104: PORTAbits.RA2=0;
  1338                           
  1339                           ;incstack = 0
  1340                           ; Regs used in _RxMode: []
  1341  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1342  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1343  02A9  1105               	bcf	5,2	;volatile
  1344                           
  1345                           ;user.c: 105: PORTAbits.RA1=0;
  1346  02AA  1085               	bcf	5,1	;volatile
  1347  02AB  0008               	return
  1348  02AC                     __end_of_RxMode:	
  1349                           
  1350                           	psect	text10
  1351  0025                     __ptext10:	
  1352 ;; *************** function _ActualizarMEFI2C *****************
  1353 ;; Defined at:
  1354 ;;		line 123 in file "user.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1368 ;;      Params:         0       0       0       0       0
  1369 ;;      Locals:         0       0       0       0       0
  1370 ;;      Temps:          0       4       0       0       0
  1371 ;;      Totals:         0       4       0       0       0
  1372 ;;Total ram usage:        4 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    5
  1375 ;; This function calls:
  1376 ;;		_I2C_ReadFromAddress
  1377 ;;		_I2C_SendOne
  1378 ;;		_I2C_SendZero
  1379 ;;		_I2C_Start
  1380 ;;		_I2C_Stop
  1381 ;;		_I2C_WriteByte
  1382 ;;		_I2C_WriteToAddress
  1383 ;;		_My_I2C_ReadResult
  1384 ;;		_tickRead
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           
  1391                           ;psect for function _ActualizarMEFI2C
  1392  0025                     _ActualizarMEFI2C:	
  1393                           
  1394                           ;user.c: 124: static tick_t tinicioi2c;
  1395                           ;user.c: 126: switch (estadoActualI2C) {
  1396                           
  1397                           ;incstack = 0
  1398                           ; Regs used in _ActualizarMEFI2C: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1399  0025  2892               	goto	l1726
  1400  0026                     l1692:	
  1401                           ;user.c: 127: case REQUEST:
  1402                           
  1403                           
  1404                           ;user.c: 128: I2C_Start();
  1405  0026  118A  2206  118A   	fcall	_I2C_Start
  1406                           
  1407                           ;user.c: 129: I2C_WriteToAddress(0b0100011);
  1408  0029  3023               	movlw	35
  1409  002A  118A  222F  118A   	fcall	_I2C_WriteToAddress
  1410                           
  1411                           ;user.c: 130: I2C_WriteByte(0b00010001);
  1412  002D  3011               	movlw	17
  1413  002E  118A  2161  118A   	fcall	_I2C_WriteByte
  1414                           
  1415                           ;user.c: 131: estadoActualI2C = WAIT;
  1416  0031  01F4               	clrf	_estadoActualI2C
  1417  0032  0AF4               	incf	_estadoActualI2C,f
  1418                           
  1419                           ;user.c: 132: tinicioi2c = tickRead();
  1420  0033  118A  226F         	fcall	_tickRead
  1421  0035  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0036  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0037  0821               	movf	?_tickRead+1,w
  1424  0038  00F1               	movwf	ActualizarMEFI2C@tinicioi2c+1
  1425  0039  0820               	movf	?_tickRead,w
  1426  003A  00F0               	movwf	ActualizarMEFI2C@tinicioi2c
  1427                           
  1428                           ;user.c: 133: break;
  1429  003B  0008               	return
  1430  003C                     l1702:	
  1431                           ;user.c: 134: case WAIT:
  1432                           
  1433                           
  1434                           ;user.c: 135: if (tickRead() - tinicioi2c > 180) {
  1435  003C  0970               	comf	ActualizarMEFI2C@tinicioi2c,w
  1436  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1437  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1438  003F  00AB               	movwf	??_ActualizarMEFI2C
  1439  0040  0971               	comf	ActualizarMEFI2C@tinicioi2c+1,w
  1440  0041  00AC               	movwf	??_ActualizarMEFI2C+1
  1441  0042  0AAB               	incf	??_ActualizarMEFI2C,f
  1442  0043  1903               	skipnz
  1443  0044  0AAC               	incf	??_ActualizarMEFI2C+1,f
  1444  0045  118A  226F  118A   	fcall	_tickRead
  1445  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1447  004A  082B               	movf	??_ActualizarMEFI2C,w
  1448  004B  0720               	addwf	?_tickRead,w
  1449  004C  00AD               	movwf	??_ActualizarMEFI2C+2
  1450  004D  082C               	movf	??_ActualizarMEFI2C+1,w
  1451  004E  1803               	skipnc
  1452  004F  0A2C               	incf	??_ActualizarMEFI2C+1,w
  1453  0050  0721               	addwf	?_tickRead+1,w
  1454  0051  00AE               	movwf	??_ActualizarMEFI2C+3
  1455  0052  3000               	movlw	0
  1456  0053  022E               	subwf	??_ActualizarMEFI2C+3,w
  1457  0054  30B5               	movlw	181
  1458  0055  1903               	skipnz
  1459  0056  022D               	subwf	??_ActualizarMEFI2C+2,w
  1460  0057  1C03               	skipc
  1461  0058  0008               	return
  1462                           
  1463                           ;user.c: 136: estadoActualI2C = REPLY;
  1464  0059  3002               	movlw	2
  1465  005A  00AB               	movwf	??_ActualizarMEFI2C
  1466  005B  082B               	movf	??_ActualizarMEFI2C,w
  1467  005C  00F4               	movwf	_estadoActualI2C
  1468                           
  1469                           ;user.c: 137: }
  1470                           ;user.c: 138: break;
  1471  005D  0008               	return
  1472  005E                     l1706:	
  1473                           ;user.c: 139: case REPLY:
  1474                           
  1475                           
  1476                           ;user.c: 140: result = 0;
  1477  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1478  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0060  01B5               	clrf	_result
  1480  0061  01B6               	clrf	_result+1
  1481                           
  1482                           ;user.c: 141: I2C_Start();
  1483  0062  118A  2206  118A   	fcall	_I2C_Start
  1484                           
  1485                           ;user.c: 142: I2C_ReadFromAddress(0b0100011);
  1486  0065  3023               	movlw	35
  1487  0066  118A  2284  118A   	fcall	_I2C_ReadFromAddress
  1488                           
  1489                           ;user.c: 143: result = My_I2C_ReadResult();
  1490  0069  118A  2115  118A   	fcall	_My_I2C_ReadResult
  1491  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1492  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1493  006E  00AB               	movwf	??_ActualizarMEFI2C
  1494  006F  01AC               	clrf	??_ActualizarMEFI2C+1
  1495  0070  082B               	movf	??_ActualizarMEFI2C,w
  1496  0071  00B5               	movwf	_result
  1497  0072  082C               	movf	??_ActualizarMEFI2C+1,w
  1498  0073  00B6               	movwf	_result+1
  1499                           
  1500                           ;user.c: 144: result <<= 8;
  1501  0074  3008               	movlw	8
  1502  0075                     u625:	
  1503  0075  1003               	clrc
  1504  0076  0DB5               	rlf	_result,f
  1505  0077  0DB6               	rlf	_result+1,f
  1506  0078  3EFF               	addlw	-1
  1507  0079  1D03               	skipz
  1508  007A  2875               	goto	u625
  1509                           
  1510                           ;user.c: 146: I2C_SendZero();
  1511  007B  118A  2251  118A   	fcall	_I2C_SendZero
  1512                           
  1513                           ;user.c: 147: result += My_I2C_ReadResult();
  1514  007E  118A  2115  118A   	fcall	_My_I2C_ReadResult
  1515  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0083  00AB               	movwf	??_ActualizarMEFI2C
  1518  0084  01AC               	clrf	??_ActualizarMEFI2C+1
  1519  0085  082B               	movf	??_ActualizarMEFI2C,w
  1520  0086  07B5               	addwf	_result,f
  1521  0087  1803               	skipnc
  1522  0088  0AB6               	incf	_result+1,f
  1523  0089  082C               	movf	??_ActualizarMEFI2C+1,w
  1524  008A  07B6               	addwf	_result+1,f
  1525                           
  1526                           ;user.c: 148: I2C_SendOne();
  1527  008B  118A  2260  118A   	fcall	_I2C_SendOne
  1528                           
  1529                           ;user.c: 149: I2C_Stop();
  1530  008E  118A  21D8         	fcall	_I2C_Stop
  1531                           
  1532                           ;user.c: 150: estadoActualI2C = REQUEST;
  1533  0090  01F4               	clrf	_estadoActualI2C
  1534                           
  1535                           ;user.c: 151: }
  1536  0091  0008               	return
  1537  0092                     l1726:	
  1538  0092  0874               	movf	_estadoActualI2C,w
  1539                           
  1540                           ; Switch size 1, requested type "space"
  1541                           ; Number of cases is 3, Range of values is 0 to 2
  1542                           ; switch strategies available:
  1543                           ; Name         Instructions Cycles
  1544                           ; simple_byte           10     6 (average)
  1545                           ; direct_byte           13     7 (fixed)
  1546                           ; jumptable            260     6 (fixed)
  1547                           ;	Chosen strategy is simple_byte
  1548  0093  3A00               	xorlw	0	; case 0
  1549  0094  1903               	skipnz
  1550  0095  2826               	goto	l1692
  1551  0096  3A01               	xorlw	1	; case 1
  1552  0097  1903               	skipnz
  1553  0098  283C               	goto	l1702
  1554  0099  3A03               	xorlw	3	; case 2
  1555  009A  1903               	skipnz
  1556  009B  285E               	goto	l1706
  1557  009C  289D               	goto	l200
  1558  009D                     l200:	
  1559  009D  0008               	return
  1560  009E                     __end_of_ActualizarMEFI2C:	
  1561                           
  1562                           	psect	text11
  1563  026F                     __ptext11:	
  1564 ;; *************** function _tickRead *****************
  1565 ;; Defined at:
  1566 ;;		line 108 in file "user.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  aux             2    2[BANK0 ] unsigned int 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  2    0[BANK0 ] unsigned int 
  1573 ;; Registers used:
  1574 ;;		wreg
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1580 ;;      Params:         0       2       0       0       0
  1581 ;;      Locals:         0       2       0       0       0
  1582 ;;      Temps:          0       0       0       0       0
  1583 ;;      Totals:         0       4       0       0       0
  1584 ;;Total ram usage:        4 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_ActualizarMEFI2C
  1591 ;;		_ActualizarMEFUART
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           
  1596                           ;psect for function _tickRead
  1597  026F                     _tickRead:	
  1598                           
  1599                           ;user.c: 109: tick_t aux;
  1600                           ;user.c: 110: GIE = 0;
  1601                           
  1602                           ;incstack = 0
  1603                           ; Regs used in _tickRead: [wreg]
  1604  026F  138B               	bcf	11,7	;volatile
  1605                           
  1606                           ;user.c: 111: aux = tickCounter;
  1607  0270  0873               	movf	_tickCounter+1,w	;volatile
  1608  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0273  00A3               	movwf	tickRead@aux+1
  1611  0274  0872               	movf	_tickCounter,w	;volatile
  1612  0275  00A2               	movwf	tickRead@aux
  1613                           
  1614                           ;user.c: 112: GIE = 1;
  1615  0276  178B               	bsf	11,7	;volatile
  1616                           
  1617                           ;user.c: 113: return aux;
  1618  0277  0823               	movf	tickRead@aux+1,w
  1619  0278  00A1               	movwf	?_tickRead+1
  1620  0279  0822               	movf	tickRead@aux,w
  1621  027A  00A0               	movwf	?_tickRead
  1622  027B  0008               	return
  1623  027C                     __end_of_tickRead:	
  1624                           
  1625                           	psect	text12
  1626  0115                     __ptext12:	
  1627 ;; *************** function _My_I2C_ReadResult *****************
  1628 ;; Defined at:
  1629 ;;		line 272 in file "i2c.h"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  x               2    3[BANK0 ] int 
  1634 ;;  readback        1    5[BANK0 ] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      unsigned char 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         0       0       0       0       0
  1645 ;;      Locals:         0       3       0       0       0
  1646 ;;      Temps:          0       2       0       0       0
  1647 ;;      Totals:         0       5       0       0       0
  1648 ;;Total ram usage:        5 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    2
  1651 ;; This function calls:
  1652 ;;		_I2C_Delay
  1653 ;;		_I2C_WaitForSlave
  1654 ;;		_SCL_High
  1655 ;;		_SCL_Low
  1656 ;;		_SDA_High
  1657 ;; This function is called by:
  1658 ;;		_ActualizarMEFI2C
  1659 ;;		_I2C_ReadRegister2
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _My_I2C_ReadResult
  1665  0115                     _My_I2C_ReadResult:	
  1666                           
  1667                           ;i2c.h: 274: char readback = 0x00;
  1668                           
  1669                           ;incstack = 0
  1670                           ; Regs used in _My_I2C_ReadResult: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1671  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0117  01A5               	clrf	My_I2C_ReadResult@readback
  1674                           
  1675                           ;i2c.h: 276: SDA_High();
  1676  0118  118A  22B0  118A   	fcall	_SDA_High
  1677                           
  1678                           ;i2c.h: 277: for(int x=0;x<8;x++){
  1679  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1680  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1681  011D  01A3               	clrf	My_I2C_ReadResult@x
  1682  011E  01A4               	clrf	My_I2C_ReadResult@x+1
  1683  011F  0824               	movf	My_I2C_ReadResult@x+1,w
  1684  0120  3A80               	xorlw	128
  1685  0121  00FF               	movwf	127
  1686  0122  3080               	movlw	128
  1687  0123  027F               	subwf	127,w
  1688  0124  1D03               	skipz
  1689  0125  2928               	goto	u565
  1690  0126  3008               	movlw	8
  1691  0127  0223               	subwf	My_I2C_ReadResult@x,w
  1692  0128                     u565:	
  1693  0128  1803               	btfsc	3,0
  1694  0129  295D               	goto	l1600
  1695  012A                     l1580:	
  1696                           
  1697                           ;i2c.h: 278: readback = (readback << 1) & 0xFE;
  1698  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1699  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1700  012C  0825               	movf	My_I2C_ReadResult@readback,w
  1701  012D  00A1               	movwf	??_My_I2C_ReadResult
  1702  012E  0721               	addwf	??_My_I2C_ReadResult,w
  1703  012F  39FE               	andlw	254
  1704  0130  00A2               	movwf	??_My_I2C_ReadResult+1
  1705  0131  0822               	movf	??_My_I2C_ReadResult+1,w
  1706  0132  00A5               	movwf	My_I2C_ReadResult@readback
  1707                           
  1708                           ;i2c.h: 279: SCL_High();
  1709  0133  118A  22B4  118A   	fcall	_SCL_High
  1710                           
  1711                           ;i2c.h: 280: I2C_WaitForSlave();
  1712  0136  118A  22BA  118A   	fcall	_I2C_WaitForSlave
  1713                           
  1714                           ;i2c.h: 281: if(PORTB & 0b00000010){readback++;}
  1715  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1716  013A  1303               	bcf	3,6	;RP1=0, select bank0
  1717  013B  1C86               	btfss	6,1	;volatile
  1718  013C  2941               	goto	l1590
  1719  013D  3001               	movlw	1
  1720  013E  00A1               	movwf	??_My_I2C_ReadResult
  1721  013F  0821               	movf	??_My_I2C_ReadResult,w
  1722  0140  07A5               	addwf	My_I2C_ReadResult@readback,f
  1723  0141                     l1590:	
  1724                           
  1725                           ;i2c.h: 282: I2C_Delay();
  1726  0141  118A  228C  118A   	fcall	_I2C_Delay
  1727                           
  1728                           ;i2c.h: 283: SCL_Low();
  1729  0144  118A  229B  118A   	fcall	_SCL_Low
  1730                           
  1731                           ;i2c.h: 284: I2C_Delay();
  1732  0147  118A  228C  118A   	fcall	_I2C_Delay
  1733  014A  3001               	movlw	1
  1734  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1735  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1736  014D  07A3               	addwf	My_I2C_ReadResult@x,f
  1737  014E  1803               	skipnc
  1738  014F  0AA4               	incf	My_I2C_ReadResult@x+1,f
  1739  0150  3000               	movlw	0
  1740  0151  07A4               	addwf	My_I2C_ReadResult@x+1,f
  1741  0152  0824               	movf	My_I2C_ReadResult@x+1,w
  1742  0153  3A80               	xorlw	128
  1743  0154  00FF               	movwf	127
  1744  0155  3080               	movlw	128
  1745  0156  027F               	subwf	127,w
  1746  0157  1D03               	skipz
  1747  0158  295B               	goto	u585
  1748  0159  3008               	movlw	8
  1749  015A  0223               	subwf	My_I2C_ReadResult@x,w
  1750  015B                     u585:	
  1751  015B  1C03               	skipc
  1752  015C  292A               	goto	l1580
  1753  015D                     l1600:	
  1754                           
  1755                           ;i2c.h: 285: }
  1756                           ;i2c.h: 292: return(readback);
  1757  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1758  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1759  015F  0825               	movf	My_I2C_ReadResult@readback,w
  1760  0160  0008               	return
  1761  0161                     __end_of_My_I2C_ReadResult:	
  1762                           
  1763                           	psect	text13
  1764  02BA                     __ptext13:	
  1765 ;; *************** function _I2C_WaitForSlave *****************
  1766 ;; Defined at:
  1767 ;;		line 227 in file "i2c.h"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		None
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0
  1784 ;;      Totals:         0       0       0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    1
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_My_I2C_ReadResult
  1792 ;;		_I2C_ReadResult
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _I2C_WaitForSlave
  1798  02BA                     _I2C_WaitForSlave:	
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _I2C_WaitForSlave: []
  1802  02BA  0008               	return
  1803  02BB                     __end_of_I2C_WaitForSlave:	
  1804                           
  1805                           	psect	text14
  1806  022F                     __ptext14:	
  1807 ;; *************** function _I2C_WriteToAddress *****************
  1808 ;; Defined at:
  1809 ;;		line 296 in file "i2c.h"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  deviceAddres    1    wreg     unsigned char 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  deviceAddres    1    9[BANK0 ] unsigned char 
  1814 ;;  temp            1   10[BANK0 ] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1824 ;;      Params:         0       0       0       0       0
  1825 ;;      Locals:         0       2       0       0       0
  1826 ;;      Temps:          0       2       0       0       0
  1827 ;;      Totals:         0       4       0       0       0
  1828 ;;Total ram usage:        4 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    4
  1831 ;; This function calls:
  1832 ;;		_I2C_WriteByte
  1833 ;; This function is called by:
  1834 ;;		_ActualizarMEFI2C
  1835 ;;		_I2C_ReadRegister
  1836 ;;		_I2C_WriteRegister
  1837 ;;		_I2C_ReadRegister2
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           
  1842                           ;psect for function _I2C_WriteToAddress
  1843  022F                     _I2C_WriteToAddress:	
  1844                           
  1845                           ;incstack = 0
  1846                           ; Regs used in _I2C_WriteToAddress: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1847                           ;I2C_WriteToAddress@deviceAddress stored from wreg
  1848  022F  1283               	bcf	3,5	;RP0=0, select bank0
  1849  0230  1303               	bcf	3,6	;RP1=0, select bank0
  1850  0231  00A9               	movwf	I2C_WriteToAddress@deviceAddress
  1851                           
  1852                           ;i2c.h: 297: char temp;
  1853                           ;i2c.h: 298: temp = deviceAddress << 1;
  1854  0232  0829               	movf	I2C_WriteToAddress@deviceAddress,w
  1855  0233  00A7               	movwf	??_I2C_WriteToAddress
  1856  0234  0727               	addwf	??_I2C_WriteToAddress,w
  1857  0235  00A8               	movwf	??_I2C_WriteToAddress+1
  1858  0236  0828               	movf	??_I2C_WriteToAddress+1,w
  1859  0237  00AA               	movwf	I2C_WriteToAddress@temp
  1860                           
  1861                           ;i2c.h: 299: temp = temp & 0xFE;
  1862  0238  082A               	movf	I2C_WriteToAddress@temp,w
  1863  0239  39FE               	andlw	254
  1864  023A  00A7               	movwf	??_I2C_WriteToAddress
  1865  023B  0827               	movf	??_I2C_WriteToAddress,w
  1866  023C  00AA               	movwf	I2C_WriteToAddress@temp
  1867                           
  1868                           ;i2c.h: 300: I2C_WriteByte(temp);
  1869  023D  082A               	movf	I2C_WriteToAddress@temp,w
  1870  023E  118A  2161         	fcall	_I2C_WriteByte
  1871  0240  0008               	return
  1872  0241                     __end_of_I2C_WriteToAddress:	
  1873                           
  1874                           	psect	text15
  1875  01D8                     __ptext15:	
  1876 ;; *************** function _I2C_Stop *****************
  1877 ;; Defined at:
  1878 ;;		line 215 in file "i2c.h"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0, pclath, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1892 ;;      Params:         0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0
  1895 ;;      Totals:         0       0       0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    2
  1899 ;; This function calls:
  1900 ;;		_I2C_Delay
  1901 ;;		_SCL_High
  1902 ;;		_SCL_Low
  1903 ;;		_SDA_High
  1904 ;;		_SDA_Low
  1905 ;; This function is called by:
  1906 ;;		_ActualizarMEFI2C
  1907 ;;		_I2C_WriteRegister
  1908 ;;		_I2C_Test
  1909 ;;		_I2C_ReadRegister2
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _I2C_Stop
  1915  01D8                     _I2C_Stop:	
  1916                           
  1917                           ;i2c.h: 216: SCL_Low();
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  1921  01D8  118A  229B  118A   	fcall	_SCL_Low
  1922                           
  1923                           ;i2c.h: 217: I2C_Delay();
  1924  01DB  118A  228C  118A   	fcall	_I2C_Delay
  1925                           
  1926                           ;i2c.h: 218: SDA_Low();
  1927  01DE  118A  2294  118A   	fcall	_SDA_Low
  1928                           
  1929                           ;i2c.h: 219: I2C_Delay();
  1930  01E1  118A  228C  118A   	fcall	_I2C_Delay
  1931                           
  1932                           ;i2c.h: 220: SCL_High();
  1933  01E4  118A  22B4  118A   	fcall	_SCL_High
  1934                           
  1935                           ;i2c.h: 221: I2C_Delay();
  1936  01E7  118A  228C  118A   	fcall	_I2C_Delay
  1937                           
  1938                           ;i2c.h: 222: SDA_High();
  1939  01EA  118A  22B0  118A   	fcall	_SDA_High
  1940                           
  1941                           ;i2c.h: 223: I2C_Delay();
  1942  01ED  118A  228C         	fcall	_I2C_Delay
  1943  01EF  0008               	return
  1944  01F0                     __end_of_I2C_Stop:	
  1945                           
  1946                           	psect	text16
  1947  0206                     __ptext16:	
  1948 ;; *************** function _I2C_Start *****************
  1949 ;; Defined at:
  1950 ;;		line 204 in file "i2c.h"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0, pclath, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1964 ;;      Params:         0       0       0       0       0
  1965 ;;      Locals:         0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0
  1967 ;;      Totals:         0       0       0       0       0
  1968 ;;Total ram usage:        0 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    2
  1971 ;; This function calls:
  1972 ;;		_I2C_Delay
  1973 ;;		_SCL_High
  1974 ;;		_SCL_Low
  1975 ;;		_SDA_High
  1976 ;;		_SDA_Low
  1977 ;; This function is called by:
  1978 ;;		_ActualizarMEFI2C
  1979 ;;		_I2C_ReadRegister
  1980 ;;		_I2C_WriteRegister
  1981 ;;		_I2C_Test
  1982 ;;		_I2C_ReadRegister2
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function _I2C_Start
  1988  0206                     _I2C_Start:	
  1989                           
  1990                           ;i2c.h: 205: SDA_High();
  1991                           
  1992                           ;incstack = 0
  1993                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  1994  0206  118A  22B0  118A   	fcall	_SDA_High
  1995                           
  1996                           ;i2c.h: 206: SCL_High();
  1997  0209  118A  22B4  118A   	fcall	_SCL_High
  1998                           
  1999                           ;i2c.h: 207: I2C_Delay();
  2000  020C  118A  228C  118A   	fcall	_I2C_Delay
  2001                           
  2002                           ;i2c.h: 208: SDA_Low();
  2003  020F  118A  2294  118A   	fcall	_SDA_Low
  2004                           
  2005                           ;i2c.h: 209: I2C_Delay();
  2006  0212  118A  228C  118A   	fcall	_I2C_Delay
  2007                           
  2008                           ;i2c.h: 210: SCL_Low();
  2009  0215  118A  229B  118A   	fcall	_SCL_Low
  2010                           
  2011                           ;i2c.h: 211: I2C_Delay();
  2012  0218  118A  228C         	fcall	_I2C_Delay
  2013  021A  0008               	return
  2014  021B                     __end_of_I2C_Start:	
  2015                           
  2016                           	psect	text17
  2017  0284                     __ptext17:	
  2018 ;; *************** function _I2C_ReadFromAddress *****************
  2019 ;; Defined at:
  2020 ;;		line 303 in file "i2c.h"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  deviceAddres    1    wreg     unsigned char 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  deviceAddres    1    7[BANK0 ] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2034 ;;      Params:         0       0       0       0       0
  2035 ;;      Locals:         0       1       0       0       0
  2036 ;;      Temps:          0       0       0       0       0
  2037 ;;      Totals:         0       1       0       0       0
  2038 ;;Total ram usage:        1 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    4
  2041 ;; This function calls:
  2042 ;;		_I2C_WriteByte
  2043 ;; This function is called by:
  2044 ;;		_ActualizarMEFI2C
  2045 ;;		_I2C_ReadRegister
  2046 ;;		_I2C_ReadRegister2
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           
  2051                           ;psect for function _I2C_ReadFromAddress
  2052  0284                     _I2C_ReadFromAddress:	
  2053                           
  2054                           ;incstack = 0
  2055                           ; Regs used in _I2C_ReadFromAddress: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2056                           ;I2C_ReadFromAddress@deviceAddress stored from wreg
  2057  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0286  00A7               	movwf	I2C_ReadFromAddress@deviceAddress
  2060                           
  2061                           ;i2c.h: 304: I2C_WriteByte((deviceAddress << 1) | 0x01);
  2062  0287  1403               	setc
  2063  0288  0D27               	rlf	I2C_ReadFromAddress@deviceAddress,w
  2064  0289  118A  2161         	fcall	_I2C_WriteByte
  2065  028B  0008               	return
  2066  028C                     __end_of_I2C_ReadFromAddress:	
  2067                           
  2068                           	psect	text18
  2069  0161                     __ptext18:	
  2070 ;; *************** function _I2C_WriteByte *****************
  2071 ;; Defined at:
  2072 ;;		line 234 in file "i2c.h"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  theByte         1    wreg     unsigned char 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  theByte         1    3[BANK0 ] unsigned char 
  2077 ;;  x               2    4[BANK0 ] int 
  2078 ;;  temp            1    6[BANK0 ] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2088 ;;      Params:         0       0       0       0       0
  2089 ;;      Locals:         0       4       0       0       0
  2090 ;;      Temps:          0       2       0       0       0
  2091 ;;      Totals:         0       6       0       0       0
  2092 ;;Total ram usage:        6 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    3
  2095 ;; This function calls:
  2096 ;;		_I2C_SendOne
  2097 ;;		_I2C_SendZero
  2098 ;; This function is called by:
  2099 ;;		_I2C_WriteToAddress
  2100 ;;		_I2C_ReadFromAddress
  2101 ;;		_ActualizarMEFI2C
  2102 ;;		_I2C_ReadRegister
  2103 ;;		_I2C_WriteRegister
  2104 ;;		_I2C_Test
  2105 ;;		_I2C_ReadRegister2
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _I2C_WriteByte
  2111  0161                     _I2C_WriteByte:	
  2112                           
  2113                           ;incstack = 0
  2114                           ; Regs used in _I2C_WriteByte: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2115                           ;I2C_WriteByte@theByte stored from wreg
  2116  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2118  0163  00A3               	movwf	I2C_WriteByte@theByte
  2119                           
  2120                           ;i2c.h: 235: char temp = theByte;
  2121  0164  0823               	movf	I2C_WriteByte@theByte,w
  2122  0165  00A1               	movwf	??_I2C_WriteByte
  2123  0166  0821               	movf	??_I2C_WriteByte,w
  2124  0167  00A6               	movwf	I2C_WriteByte@temp
  2125                           
  2126                           ;i2c.h: 237: for(int x=0;x<8;x++){
  2127  0168  01A4               	clrf	I2C_WriteByte@x
  2128  0169  01A5               	clrf	I2C_WriteByte@x+1
  2129  016A  0825               	movf	I2C_WriteByte@x+1,w
  2130  016B  3A80               	xorlw	128
  2131  016C  00FF               	movwf	127
  2132  016D  3080               	movlw	128
  2133  016E  027F               	subwf	127,w
  2134  016F  1D03               	skipz
  2135  0170  2973               	goto	u535
  2136  0171  3008               	movlw	8
  2137  0172  0224               	subwf	I2C_WriteByte@x,w
  2138  0173                     u535:	
  2139  0173  1803               	btfsc	3,0
  2140  0174  2999               	goto	l1546
  2141  0175                     l113:	
  2142                           
  2143                           ;i2c.h: 238: if((temp & 0x80) == 0x80){I2C_SendOne();}
  2144  0175  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0176  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0177  1FA6               	btfss	I2C_WriteByte@temp,7
  2147  0178  297D               	goto	l1538
  2148  0179  118A  2260  118A   	fcall	_I2C_SendOne
  2149  017C  2980               	goto	l1540
  2150  017D                     l1538:	
  2151                           
  2152                           ;i2c.h: 239: else{I2C_SendZero();}
  2153  017D  118A  2251  118A   	fcall	_I2C_SendZero
  2154  0180                     l1540:	
  2155                           
  2156                           ;i2c.h: 240: temp = temp << 1;
  2157  0180  1283               	bcf	3,5	;RP0=0, select bank0
  2158  0181  1303               	bcf	3,6	;RP1=0, select bank0
  2159  0182  0826               	movf	I2C_WriteByte@temp,w
  2160  0183  00A1               	movwf	??_I2C_WriteByte
  2161  0184  0721               	addwf	??_I2C_WriteByte,w
  2162  0185  00A2               	movwf	??_I2C_WriteByte+1
  2163  0186  0822               	movf	??_I2C_WriteByte+1,w
  2164  0187  00A6               	movwf	I2C_WriteByte@temp
  2165  0188  3001               	movlw	1
  2166  0189  07A4               	addwf	I2C_WriteByte@x,f
  2167  018A  1803               	skipnc
  2168  018B  0AA5               	incf	I2C_WriteByte@x+1,f
  2169  018C  3000               	movlw	0
  2170  018D  07A5               	addwf	I2C_WriteByte@x+1,f
  2171  018E  0825               	movf	I2C_WriteByte@x+1,w
  2172  018F  3A80               	xorlw	128
  2173  0190  00FF               	movwf	127
  2174  0191  3080               	movlw	128
  2175  0192  027F               	subwf	127,w
  2176  0193  1D03               	skipz
  2177  0194  2997               	goto	u555
  2178  0195  3008               	movlw	8
  2179  0196  0224               	subwf	I2C_WriteByte@x,w
  2180  0197                     u555:	
  2181  0197  1C03               	skipc
  2182  0198  2975               	goto	l113
  2183  0199                     l1546:	
  2184                           
  2185                           ;i2c.h: 241: }
  2186                           ;i2c.h: 243: I2C_SendOne();
  2187  0199  118A  2260         	fcall	_I2C_SendOne
  2188  019B  0008               	return
  2189  019C                     __end_of_I2C_WriteByte:	
  2190                           
  2191                           	psect	text19
  2192  0251                     __ptext19:	
  2193 ;; *************** function _I2C_SendZero *****************
  2194 ;; Defined at:
  2195 ;;		line 188 in file "i2c.h"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0, pclath, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2209 ;;      Params:         0       0       0       0       0
  2210 ;;      Locals:         0       0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0
  2212 ;;      Totals:         0       0       0       0       0
  2213 ;;Total ram usage:        0 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    2
  2216 ;; This function calls:
  2217 ;;		_I2C_Delay
  2218 ;;		_SCL_High
  2219 ;;		_SCL_Low
  2220 ;;		_SDA_Low
  2221 ;; This function is called by:
  2222 ;;		_I2C_WriteByte
  2223 ;;		_ActualizarMEFI2C
  2224 ;;		_I2C_ReadRegister2
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _I2C_SendZero
  2230  0251                     _I2C_SendZero:	
  2231                           
  2232                           ;i2c.h: 189: SCL_Low();
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _I2C_SendZero: [wreg+status,2+status,0+pclath+cstack]
  2236  0251  118A  229B  118A   	fcall	_SCL_Low
  2237                           
  2238                           ;i2c.h: 190: SDA_Low();
  2239  0254  118A  2294  118A   	fcall	_SDA_Low
  2240                           
  2241                           ;i2c.h: 191: SCL_High();
  2242  0257  118A  22B4  118A   	fcall	_SCL_High
  2243                           
  2244                           ;i2c.h: 192: I2C_Delay();
  2245  025A  118A  228C  118A   	fcall	_I2C_Delay
  2246                           
  2247                           ;i2c.h: 193: SCL_Low();
  2248  025D  118A  229B         	fcall	_SCL_Low
  2249  025F  0008               	return
  2250  0260                     __end_of_I2C_SendZero:	
  2251                           
  2252                           	psect	text20
  2253  0294                     __ptext20:	
  2254 ;; *************** function _SDA_Low *****************
  2255 ;; Defined at:
  2256 ;;		line 151 in file "i2c.h"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		None
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2270 ;;      Params:         0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0
  2273 ;;      Totals:         0       0       0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    1
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_I2C_SendZero
  2281 ;;		_I2C_Start
  2282 ;;		_I2C_Stop
  2283 ;;		_I2C_ReadResult
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           
  2288                           ;psect for function _SDA_Low
  2289  0294                     _SDA_Low:	
  2290                           
  2291                           ;i2c.h: 154: PORTBbits.RB1=0;
  2292                           
  2293                           ;incstack = 0
  2294                           ; Regs used in _SDA_Low: []
  2295  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0295  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0296  1086               	bcf	6,1	;volatile
  2298                           
  2299                           ;i2c.h: 155: TRISB1=0;
  2300  0297  1683               	bsf	3,5	;RP0=1, select bank1
  2301  0298  1303               	bcf	3,6	;RP1=0, select bank1
  2302  0299  1086               	bcf	6,1	;volatile
  2303  029A  0008               	return
  2304  029B                     __end_of_SDA_Low:	
  2305                           
  2306                           	psect	text21
  2307  0260                     __ptext21:	
  2308 ;; *************** function _I2C_SendOne *****************
  2309 ;; Defined at:
  2310 ;;		line 196 in file "i2c.h"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0, pclath, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2324 ;;      Params:         0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    2
  2331 ;; This function calls:
  2332 ;;		_I2C_Delay
  2333 ;;		_SCL_High
  2334 ;;		_SCL_Low
  2335 ;;		_SDA_High
  2336 ;; This function is called by:
  2337 ;;		_I2C_WriteByte
  2338 ;;		_ActualizarMEFI2C
  2339 ;;		_I2C_ReadRegister2
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           
  2344                           ;psect for function _I2C_SendOne
  2345  0260                     _I2C_SendOne:	
  2346                           
  2347                           ;i2c.h: 197: SCL_Low();
  2348                           
  2349                           ;incstack = 0
  2350                           ; Regs used in _I2C_SendOne: [wreg+status,2+status,0+pclath+cstack]
  2351  0260  118A  229B  118A   	fcall	_SCL_Low
  2352                           
  2353                           ;i2c.h: 198: SDA_High();
  2354  0263  118A  22B0  118A   	fcall	_SDA_High
  2355                           
  2356                           ;i2c.h: 199: SCL_High();
  2357  0266  118A  22B4  118A   	fcall	_SCL_High
  2358                           
  2359                           ;i2c.h: 200: I2C_Delay();
  2360  0269  118A  228C  118A   	fcall	_I2C_Delay
  2361                           
  2362                           ;i2c.h: 201: SCL_Low();
  2363  026C  118A  229B         	fcall	_SCL_Low
  2364  026E  0008               	return
  2365  026F                     __end_of_I2C_SendOne:	
  2366                           
  2367                           	psect	text22
  2368  02B0                     __ptext22:	
  2369 ;; *************** function _SDA_High *****************
  2370 ;; Defined at:
  2371 ;;		line 158 in file "i2c.h"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		None
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2385 ;;      Params:         0       0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0
  2388 ;;      Totals:         0       0       0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    1
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_I2C_SendOne
  2396 ;;		_I2C_Start
  2397 ;;		_I2C_Stop
  2398 ;;		_My_I2C_ReadResult
  2399 ;;		_I2C_ReadResult
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _SDA_High
  2405  02B0                     _SDA_High:	
  2406                           
  2407                           ;i2c.h: 160: TRISB1=1;
  2408                           
  2409                           ;incstack = 0
  2410                           ; Regs used in _SDA_High: []
  2411  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2412  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  2413  02B2  1486               	bsf	6,1	;volatile
  2414  02B3  0008               	return
  2415  02B4                     __end_of_SDA_High:	
  2416                           
  2417                           	psect	text23
  2418  029B                     __ptext23:	
  2419 ;; *************** function _SCL_Low *****************
  2420 ;; Defined at:
  2421 ;;		line 138 in file "i2c.h"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		None
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2435 ;;      Params:         0       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0
  2438 ;;      Totals:         0       0       0       0       0
  2439 ;;Total ram usage:        0 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    1
  2442 ;; This function calls:
  2443 ;;		Nothing
  2444 ;; This function is called by:
  2445 ;;		_I2C_SendZero
  2446 ;;		_I2C_SendOne
  2447 ;;		_I2C_Start
  2448 ;;		_I2C_Stop
  2449 ;;		_My_I2C_ReadResult
  2450 ;;		_I2C_ReadResult
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           
  2455                           ;psect for function _SCL_Low
  2456  029B                     _SCL_Low:	
  2457                           
  2458                           ;i2c.h: 142: PORTBbits.RB4=0;
  2459                           
  2460                           ;incstack = 0
  2461                           ; Regs used in _SCL_Low: []
  2462  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2463  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2464  029D  1206               	bcf	6,4	;volatile
  2465                           
  2466                           ;i2c.h: 143: TRISB4=0;
  2467  029E  1683               	bsf	3,5	;RP0=1, select bank1
  2468  029F  1303               	bcf	3,6	;RP1=0, select bank1
  2469  02A0  1206               	bcf	6,4	;volatile
  2470  02A1  0008               	return
  2471  02A2                     __end_of_SCL_Low:	
  2472                           
  2473                           	psect	text24
  2474  02B4                     __ptext24:	
  2475 ;; *************** function _SCL_High *****************
  2476 ;; Defined at:
  2477 ;;		line 146 in file "i2c.h"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		None
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2491 ;;      Params:         0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0
  2494 ;;      Totals:         0       0       0       0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    1
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_I2C_SendZero
  2502 ;;		_I2C_SendOne
  2503 ;;		_I2C_Start
  2504 ;;		_I2C_Stop
  2505 ;;		_My_I2C_ReadResult
  2506 ;;		_I2C_ReadResult
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function _SCL_High
  2512  02B4                     _SCL_High:	
  2513                           
  2514                           ;i2c.h: 148: TRISB4=1;
  2515                           
  2516                           ;incstack = 0
  2517                           ; Regs used in _SCL_High: []
  2518  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  2519  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  2520  02B6  1606               	bsf	6,4	;volatile
  2521  02B7  0008               	return
  2522  02B8                     __end_of_SCL_High:	
  2523                           
  2524                           	psect	text25
  2525  028C                     __ptext25:	
  2526 ;; *************** function _I2C_Delay *****************
  2527 ;; Defined at:
  2528 ;;		line 130 in file "i2c.h"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2542 ;;      Params:         0       0       0       0       0
  2543 ;;      Locals:         0       0       0       0       0
  2544 ;;      Temps:          0       1       0       0       0
  2545 ;;      Totals:         0       1       0       0       0
  2546 ;;Total ram usage:        1 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_I2C_SendZero
  2553 ;;		_I2C_SendOne
  2554 ;;		_I2C_Start
  2555 ;;		_I2C_Stop
  2556 ;;		_My_I2C_ReadResult
  2557 ;;		_I2C_ReadResult
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _I2C_Delay
  2563  028C                     _I2C_Delay:	
  2564                           
  2565                           ;i2c.h: 132: _delay((unsigned long)((10)*(4000000L/4000000.0)));
  2566                           
  2567                           ;incstack = 0
  2568                           ; Regs used in _I2C_Delay: [wreg]
  2569  028C  3002               	movlw	2
  2570  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2571  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2572  028F  00A0               	movwf	??_I2C_Delay
  2573  0290                     u807:	
  2574  0290  0BA0               	decfsz	??_I2C_Delay,f
  2575  0291  2A90               	goto	u807
  2576  0292  0000               	nop
  2577  0293  0008               	return
  2578  0294                     __end_of_I2C_Delay:	
  2579                           
  2580                           	psect	text26
  2581  01F0                     __ptext26:	
  2582 ;; *************** function _isr *****************
  2583 ;; Defined at:
  2584 ;;		line 19 in file "interrupts.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       0       0       0       0
  2599 ;;      Locals:         0       0       0       0       0
  2600 ;;      Temps:          5       0       0       0       0
  2601 ;;      Totals:         5       0       0       0       0
  2602 ;;Total ram usage:        5 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		Interrupt level 1
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function _isr
  2613  01F0                     _isr:	
  2614                           
  2615                           ;interrupts.c: 27: TMR0IF = 0;
  2616  01F0  110B               	bcf	11,2	;volatile
  2617                           
  2618                           ;interrupts.c: 28: TMR0 += 7;
  2619  01F1  3007               	movlw	7
  2620  01F2  00F5               	movwf	??_isr
  2621  01F3  0875               	movf	??_isr,w
  2622  01F4  0781               	addwf	1,f	;volatile
  2623                           
  2624                           ;interrupts.c: 29: tickCounter++;
  2625  01F5  3001               	movlw	1
  2626  01F6  07F2               	addwf	_tickCounter,f	;volatile
  2627  01F7  1803               	skipnc
  2628  01F8  0AF3               	incf	_tickCounter+1,f	;volatile
  2629  01F9  3000               	movlw	0
  2630  01FA  07F3               	addwf	_tickCounter+1,f	;volatile
  2631  01FB  0879               	movf	??_isr+4,w
  2632  01FC  00FF               	movwf	127
  2633  01FD  0878               	movf	??_isr+3,w
  2634  01FE  008A               	movwf	10
  2635  01FF  0877               	movf	??_isr+2,w
  2636  0200  0084               	movwf	4
  2637  0201  0E76               	swapf	(??_isr+1)^(0+-128),w
  2638  0202  0083               	movwf	3
  2639  0203  0EFE               	swapf	126,f
  2640  0204  0E7E               	swapf	126,w
  2641  0205  0009               	retfie
  2642  0206                     __end_of_isr:	
  2643  007E                     btemp	set	126	;btemp
  2644  007E                     wtemp0	set	126
  2645                           
  2646                           	psect	intentry
  2647  0004                     __pintentry:	
  2648                           ;incstack = 0
  2649                           ; Regs used in _isr: [wreg+status,2+status,0]
  2650                           
  2651  0004                     interrupt_function:	
  2652  007E                     saved_w	set	btemp
  2653  0004  00FE               	movwf	btemp
  2654  0005  0E03               	swapf	3,w
  2655  0006  00F6               	movwf	??_isr+1
  2656  0007  0804               	movf	4,w
  2657  0008  00F7               	movwf	??_isr+2
  2658  0009  080A               	movf	10,w
  2659  000A  00F8               	movwf	??_isr+3
  2660  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2661  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2662  000D  087F               	movf	btemp+1,w
  2663  000E  00F9               	movwf	??_isr+4
  2664  000F  118A  29F0         	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     17      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    uartReadByte@receivedByte	PTR unsigned char  size(1) Largest target is 1
		 -> ActualizarMEFUART@aux(BANK0[1]), ActualizarMEFUART@res(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ActualizarMEFI2C
    _ActualizarMEFUART->_tickRead
    _ActualizarMEFI2C->_I2C_WriteToAddress
    _My_I2C_ReadResult->_I2C_Delay
    _I2C_WriteToAddress->_I2C_WriteByte
    _I2C_Stop->_I2C_Delay
    _I2C_Start->_I2C_Delay
    _I2C_ReadFromAddress->_I2C_WriteByte
    _I2C_SendZero->_I2C_Delay
    _I2C_SendOne->_I2C_Delay

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1135
                                             15 BANK0      2     2      0
                   _ActualizarMEFI2C
                  _ActualizarMEFUART
                  _InicializarMEFI2C
                 _InicializarMEFUART
                            _initApp
 ---------------------------------------------------------------------------------
 (1) _initApp                                              2     2      0       0
                                              0 BANK0      2     2      0
                         _uartConfig
 ---------------------------------------------------------------------------------
 (2) _uartConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializarMEFUART                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializarMEFI2C                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ActualizarMEFUART                                    3     3      0     328
                                              4 BANK0      3     3      0
                             _RxMode
                             _TxMode
                           _tickRead
                       _uartReadByte
                      _uartWriteByte
 ---------------------------------------------------------------------------------
 (2) _uartWriteByte                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartReadByte                                         2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TxMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RxMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ActualizarMEFI2C                                     4     4      0     804
                                             11 BANK0      4     4      0
                _I2C_ReadFromAddress
                        _I2C_SendOne
                       _I2C_SendZero
                          _I2C_Start
                           _I2C_Stop
                      _I2C_WriteByte
                 _I2C_WriteToAddress
                  _My_I2C_ReadResult
                           _tickRead
 ---------------------------------------------------------------------------------
 (2) _tickRead                                             4     2      2      34
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _My_I2C_ReadResult                                    5     5      0     139
                                              1 BANK0      5     5      0
                          _I2C_Delay
                   _I2C_WaitForSlave
                           _SCL_High
                            _SCL_Low
                           _SDA_High
 ---------------------------------------------------------------------------------
 (3) _I2C_WaitForSlave                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_WriteToAddress                                   4     4      0     266
                                              7 BANK0      4     4      0
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                          _I2C_Delay
                           _SCL_High
                            _SCL_Low
                           _SDA_High
                            _SDA_Low
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                          _I2C_Delay
                           _SCL_High
                            _SCL_Low
                           _SDA_High
                            _SDA_Low
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadFromAddress                                  1     1      0     198
                                              7 BANK0      1     1      0
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteByte                                        6     6      0     167
                                              1 BANK0      6     6      0
                        _I2C_SendOne
                       _I2C_SendZero
 ---------------------------------------------------------------------------------
 (4) _I2C_SendZero                                         0     0      0       0
                          _I2C_Delay
                           _SCL_High
                            _SCL_Low
                            _SDA_Low
 ---------------------------------------------------------------------------------
 (5) _SDA_Low                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_SendOne                                          0     0      0       0
                          _I2C_Delay
                           _SCL_High
                            _SCL_Low
                           _SDA_High
 ---------------------------------------------------------------------------------
 (3) _SDA_High                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SCL_Low                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SCL_High                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Delay                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ActualizarMEFI2C
     _I2C_ReadFromAddress
       _I2C_WriteByte
         _I2C_SendOne
           _I2C_Delay
           _SCL_High
           _SCL_Low
           _SDA_High
         _I2C_SendZero
           _I2C_Delay
           _SCL_High
           _SCL_Low
           _SDA_Low
     _I2C_SendOne
       _I2C_Delay
       _SCL_High
       _SCL_Low
       _SDA_High
     _I2C_SendZero
       _I2C_Delay
       _SCL_High
       _SCL_Low
       _SDA_Low
     _I2C_Start
       _I2C_Delay
       _SCL_High
       _SCL_Low
       _SDA_High
       _SDA_Low
     _I2C_Stop
       _I2C_Delay
       _SCL_High
       _SCL_Low
       _SDA_High
       _SDA_Low
     _I2C_WriteByte
       _I2C_SendOne
         _I2C_Delay
         _SCL_High
         _SCL_Low
         _SDA_High
       _I2C_SendZero
         _I2C_Delay
         _SCL_High
         _SCL_Low
         _SDA_Low
     _I2C_WriteToAddress
       _I2C_WriteByte
         _I2C_SendOne
           _I2C_Delay
           _SCL_High
           _SCL_Low
           _SDA_High
         _I2C_SendZero
           _I2C_Delay
           _SCL_High
           _SCL_Low
           _SDA_Low
     _My_I2C_ReadResult
       _I2C_Delay
       _I2C_WaitForSlave
       _SCL_High
       _SCL_Low
       _SDA_High
     _tickRead
   _ActualizarMEFUART
     _RxMode
     _TxMode
     _tickRead
     _uartReadByte
     _uartWriteByte
   _InicializarMEFI2C
   _InicializarMEFUART
   _initApp
     _uartConfig

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      19       5       31.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Oct 02 09:07:07 2019

                 ??_uartWriteByte 0020                __size_of_I2C_Delay 0008                ??_ActualizarMEFI2C 002B  
              __size_of_I2C_Start 0015                       __CFG_CP$OFF 0000               ??_ActualizarMEFUART 0024  
                             l200 009D                               l113 0175                               l227 0114  
                             l174 027F                               _CM0 04E0                               _CM1 04E1  
                             _CM2 04E2                               _GIE 005F                      __CFG_CPD$OFF 0000  
                             u535 0173                               u625 0075                               u650 00C4  
                             u555 0197                               u565 0128                               u670 00D0  
                             u807 0290                               _PSA 040B                               u585 015B  
                             u797 01B9                               _isr 01F0                               fsr0 0004  
                             indf 0000              __size_of_I2C_SendOne 000F                      __CFG_FOSC$XT 0000  
                    __CFG_LVP$OFF 0000                              l1600 015D                              l1540 0180  
                            l1702 003C                              l1538 017D                              l1546 0199  
                            l1706 005E                              l1730 009F                              l1580 012A  
                            l1636 024F                              l1740 00B2                              l1590 0141  
                            l1726 0092                              l1750 00DC                              l1744 00C7  
                            l1832 01D1                              l1746 00D3                              l1692 0026  
                            l1764 00FE                              l1756 00EC                              l1774 010A  
                            l1768 0104                              ?_isr 0075                              _BRGH 04C2  
                            _CREN 00C4                              _T0CS 040D             ??_I2C_ReadFromAddress 0027  
                            _RCIF 0065                              _TMR0 0001                              _SPEN 00C7  
                 __end_of_SDA_Low 029B                              _TXEN 04C5                              _TXIF 0064  
                            _SYNC 04C4         __end_of_ActualizarMEFUART 0115                   __end_of_SCL_Low 02A2  
                    __CFG_WRT$OFF 0000                              _main 01C0                              btemp 007E  
                __end_of_I2C_Stop 01F0                              start 0011             __size_of_I2C_SendZero 000F  
     __size_of_I2C_WriteToAddress 0012                     __CFG_MCLRE$ON 0000                             ??_isr 0075  
                           ?_main 0075          __end_of_I2C_WaitForSlave 02BB                     __CFG_WDTE$OFF 0000  
                           _ANSEL 009B                             _RCREG 001A                  __end_of_SDA_High 02B4  
                           _SPBRG 0099                             _PORTB 0006                             _TXREG 0019  
                  __CFG_CCPMX$RB0 0000                  __end_of_SCL_High 02B8                   __end_of_initApp 01C0  
               __end_of_I2C_Delay 0294            I2C_WriteToAddress@temp 002A                 __end_of_I2C_Start 021B  
                    _I2C_SendZero 0251                    __CFG_BOREN$OFF 0000                             pclath 000A  
                           status 0003                             wtemp0 007E                   __initialization 0013  
                    __end_of_main 01D8                            ??_main 002F       __size_of_InicializarMEFUART 0004  
                       ??_SDA_Low 0020                         ??_SCL_Low 0020            __size_of_I2C_WriteByte 003B  
      __size_of_ActualizarMEFUART 0077                            _TMR0IE 005D                            _TMR0IF 005A  
                          _TRISB1 0431                            _TRISB2 0432                            _TRISB4 0434  
                          _TRISB5 0435                    __CFG_PWRTE$OFF 0000                            _RxMode 02A7  
                          _TxMode 02A2          uartReadByte@receivedByte 0021                 _My_I2C_ReadResult 0115  
                          _result 0035                ?_My_I2C_ReadResult 0075                  __end_of_tickRead 027C  
                       ??_initApp 0020                         ?_I2C_Stop 0075                            saved_w 007E  
             ??_My_I2C_ReadResult 0021           __end_of__initialization 0022                         ?_SDA_High 0075  
                  __pcstackCOMMON 0075                         ?_SCL_High 0075         __end_of_My_I2C_ReadResult 0161  
                   _I2C_WriteByte 0161  I2C_ReadFromAddress@deviceAddress 0027                    _OPTION_REGbits 0081  
       __size_of_ActualizarMEFI2C 0079                        ??_I2C_Stop 0021        ActualizarMEFI2C@tinicioi2c 0070  
                      __pbssBANK0 0031                        ??_SDA_High 0020                           ?_RxMode 0075  
                      __pmaintext 01C0                           ?_TxMode 0075                    ?_I2C_WriteByte 0075  
                      ??_SCL_High 0020                        __pintentry 0004             __end_of_uartWriteByte 0284  
                   ??_I2C_SendOne 0021                 ?_I2C_WaitForSlave 0075       __end_of_I2C_ReadFromAddress 028C  
              ??_I2C_WaitForSlave 0020                           _SDA_Low 0294                           _SCL_Low 029B  
                     tickRead@aux 0022                 _InicializarMEFI2C 02B8                         _I2C_Delay 028C  
      __end_of_I2C_WriteToAddress 0241                         _I2C_Start 0206                ?_InicializarMEFI2C 0075  
                       ?_tickRead 0020         My_I2C_ReadResult@readback 0025                   __size_of_RxMode 0005  
                 __size_of_TxMode 0005        __size_of_My_I2C_ReadResult 004C                     ?_uartReadByte 0075  
            ActualizarMEFUART@aux 0026               ??_InicializarMEFI2C 0020              ActualizarMEFUART@res 0038  
                         _tActual 0031                           _tInicio 0033                           __ptext1 019C  
                         __ptext2 021B                           __ptext3 02AC                           __ptext4 02B8  
                         __ptext5 009E                           __ptext6 027C                           __ptext7 0241  
                         __ptext8 02A2                           __ptext9 02A7                           _initApp 019C  
                    __size_of_isr 0016               __end_of_I2C_SendOne 026F         __end_of_InicializarMEFI2C 02BA  
            end_of_initialization 0022                        ?_I2C_Delay 0075                        ?_I2C_Start 0075  
                 ??_I2C_WriteByte 0021                        ??_tickRead 0022                        _uartConfig 021B  
                  ??_uartReadByte 0020        __end_of_InicializarMEFUART 02B0                         _PORTAbits 0005  
                       _PORTBbits 0006                My_I2C_ReadResult@x 0023                  _ActualizarMEFI2C 0025  
                       _TRISAbits 0085                         _TRISBbits 0086                 __size_of_I2C_Stop 0018  
                      main@result 002F                    __end_of_RxMode 02AC                    __end_of_TxMode 02A7  
               __size_of_SDA_High 0004                 __size_of_SCL_High 0004                       _I2C_SendOne 0260  
             start_initialization 0013                       __end_of_isr 0206        __size_of_InicializarMEFI2C 0002  
                     ??_I2C_Delay 0020                       ??_I2C_Start 0021                       ?_uartConfig 0075  
                        ??_RxMode 0020                          ??_TxMode 0020                    I2C_WriteByte@x 0024  
                     __pbssCOMMON 0070                         ___latbits 0001                     __pcstackBANK0 0020  
                        ?_SDA_Low 0075                          ?_SCL_Low 0075              __end_of_uartReadByte 0251  
                   ?_I2C_SendZero 0075         __size_of_I2C_WaitForSlave 0001                 __size_of_tickRead 000D  
              _I2C_WriteToAddress 022F                          ?_initApp 0075                          _I2C_Stop 01D8  
 I2C_WriteToAddress@deviceAddress 0029               ?_I2C_WriteToAddress 0075               __size_of_uartConfig 0014  
                  ??_I2C_SendZero 0021      __size_of_I2C_ReadFromAddress 0008            __size_of_uartWriteByte 0008  
               interrupt_function 0004          __end_of_ActualizarMEFI2C 009E              ??_I2C_WriteToAddress 0027  
                        _SDA_High 02B0                          _SCL_High 02B4                  _estadoActualUART 0037  
    ActualizarMEFUART@tinicioUART 0024                  __size_of_SDA_Low 0007                _InicializarMEFUART 02AC  
                __size_of_SCL_Low 0007               ?_InicializarMEFUART 0075                uartWriteByte@value 0020  
           __end_of_I2C_WriteByte 019C                     _uartWriteByte 027C              ??_InicializarMEFUART 0020  
                    ?_I2C_SendOne 0075             __size_of_uartReadByte 0010                  __size_of_initApp 0024  
                        __ptext10 0025                          __ptext11 026F                          __ptext20 0294  
                        __ptext12 0115                          __ptext21 0260                          __ptext13 02BA  
                        __ptext22 02B0                          __ptext14 022F                          __ptext23 029B  
                        __ptext15 01D8                          __ptext24 02B4                          __ptext16 0206  
                        __ptext25 028C                          __ptext17 0284                          __ptext26 01F0  
                        __ptext18 0161                          __ptext19 0251                  _I2C_WaitForSlave 02BA  
                   __size_of_main 0018                          _tickRead 026F                      ??_uartConfig 0020  
                    _uartReadByte 0241              __end_of_I2C_SendZero 0260                   _estadoActualI2C 0074  
                  ?_uartWriteByte 0075                       _tickCounter 0072                __end_of_uartConfig 022F  
                        intlevel1 0000              I2C_WriteByte@theByte 0023               _I2C_ReadFromAddress 0284  
            ?_I2C_ReadFromAddress 0075                 _ActualizarMEFUART 009E                 I2C_WriteByte@temp 0026  
               ?_ActualizarMEFI2C 0075                ?_ActualizarMEFUART 0075  
